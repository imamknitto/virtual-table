{"version":3,"file":"index-DhkVw3bk.js","sources":["../../src/pages/examples-page/click-row-action-page/components/code-block.tsx","../../src/pages/examples-page/click-row-action-page/components/context-menu.tsx","../../src/pages/examples-page/click-row-action-page/components/features-section.tsx","../../src/pages/examples-page/click-row-action-page/components/implementation-tips-section.tsx","../../src/pages/examples-page/click-row-action-page/components/interaction-log.tsx","../../src/pages/examples-page/click-row-action-page/components/next-steps-section.tsx","../../src/pages/examples-page/click-row-action-page/utils/data-generator.ts","../../src/pages/examples-page/click-row-action-page/utils/table-headers.tsx","../../src/pages/examples-page/click-row-action-page/utils/constants.ts","../../src/pages/examples-page/click-row-action-page/components/preview-section.tsx","../../src/pages/examples-page/click-row-action-page/hooks/use-row-interactions.ts","../../src/pages/examples-page/click-row-action-page/index.tsx"],"sourcesContent":["import { memo } from 'react';\n\ntype CodeBlockProps = {\n  title: string;\n  code: string;\n};\n\nconst CodeBlock = ({ title, code }: CodeBlockProps) => {\n  return (\n    <div className='border rounded-lg overflow-hidden'>\n      <div className='bg-muted px-4 py-2 border-b'>\n        <span className='text-sm font-medium'>{title}</span>\n      </div>\n      <pre className='p-4 overflow-x-auto bg-background'>\n        <code className='text-sm'>{code}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default memo(CodeBlock);\n\n","import { memo, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useClickOutside } from '../../../../components/virtual-table';\nimport type { ContextMenuPosition, Product } from '../utils';\n\ntype ContextMenuProps = {\n  isOpen: boolean;\n  position: ContextMenuPosition | null;\n  row: Product | null;\n  onAction: (action: string) => void;\n  onClose: () => void;\n};\n\nconst ContextMenu = ({ isOpen, position, onAction, onClose }: ContextMenuProps) => {\n  const contextMenuRef = useRef<HTMLDivElement>(null);\n\n  useClickOutside([contextMenuRef], onClose);\n\n  if (!isOpen || !position) return null;\n\n  return createPortal(\n    <div\n      ref={contextMenuRef}\n      className='fixed z-50 bg-background border border-border rounded-lg shadow-lg py-2 min-w-48'\n      style={{\n        left: position.x,\n        top: position.y,\n      }}\n    >\n      <button\n        className='w-full px-4 py-2 text-left hover:bg-accent text-sm transition-colors'\n        onClick={() => onAction('Edit')}\n      >\n        ‚úèÔ∏è Edit Product\n      </button>\n      <button\n        className='w-full px-4 py-2 text-left hover:bg-accent text-sm transition-colors'\n        onClick={() => onAction('Duplicate')}\n      >\n        üìã Duplicate\n      </button>\n      <button\n        className='w-full px-4 py-2 text-left hover:bg-accent text-sm transition-colors'\n        onClick={() => onAction('View Details')}\n      >\n        üëÅÔ∏è View Details\n      </button>\n      <hr className='my-1 border-border' />\n      <button\n        className='w-full px-4 py-2 text-left hover:bg-red-50 dark:hover:bg-red-950 text-red-600 dark:text-red-400 text-sm transition-colors'\n        onClick={() => onAction('Delete')}\n      >\n        üóëÔ∏è Delete\n      </button>\n    </div>,\n    document.body,\n  );\n};\n\nexport default memo(ContextMenu);\n","import { memo } from 'react';\n\nconst FeaturesSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>What's Included</h2>\n      <div className='grid gap-4 md:grid-cols-3'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>üñ±Ô∏è Single Click</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>‚Ä¢ Row selection and highlighting</li>\n            <li>‚Ä¢ Access to row data and position</li>\n            <li>‚Ä¢ Perfect for detail views</li>\n            <li>‚Ä¢ Conditional styling support</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>üñ±Ô∏èüñ±Ô∏è Double Click</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>‚Ä¢ Quick edit mode activation</li>\n            <li>‚Ä¢ Modal or page navigation</li>\n            <li>‚Ä¢ Bypass expand button clicks</li>\n            <li>‚Ä¢ Full context information</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>üñ±Ô∏è Right Click</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>‚Ä¢ Context menu positioning</li>\n            <li>‚Ä¢ Mouse coordinates provided</li>\n            <li>‚Ä¢ Action menus and shortcuts</li>\n            <li>‚Ä¢ Flexible menu implementations</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(FeaturesSection);\n\n","import { memo } from 'react';\n\nconst ImplementationTipsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>üí° Implementation Tips</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Here are some best practices for implementing click row actions:\n        </p>\n        <div className='grid gap-4 md:grid-cols-2'>\n          <div>\n            <h4 className='font-medium mb-2'>Event Handling</h4>\n            <ul className='text-sm text-muted-foreground space-y-1'>\n              <li>\n                ‚Ä¢ Use <code className='bg-muted px-1 rounded'>onClickRow</code> for selection\n              </li>\n              <li>\n                ‚Ä¢ Use <code className='bg-muted px-1 rounded'>onDoubleClickRow</code> for quick\n                actions\n              </li>\n              <li>\n                ‚Ä¢ Use <code className='bg-muted px-1 rounded'>onRightClickRow</code> for context\n                menus\n              </li>\n              <li>‚Ä¢ All handlers receive row data and position info</li>\n            </ul>\n          </div>\n          <div>\n            <h4 className='font-medium mb-2'>Visual Feedback</h4>\n            <ul className='text-sm text-muted-foreground space-y-1'>\n              <li>\n                ‚Ä¢ Use <code className='bg-muted px-1 rounded'>classNameCell</code> for highlighting\n              </li>\n              <li>‚Ä¢ Apply different styles for different states</li>\n              <li>‚Ä¢ Consider accessibility with color contrast</li>\n              <li>‚Ä¢ Provide clear visual cues for interactions</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(ImplementationTipsSection);\n\n","import { memo } from 'react';\nimport type { Product } from '../utils';\n\ntype InteractionLogProps = {\n  selectedRow: Product | null;\n  doubleClickedRow: Product | null;\n  interactionLog: string[];\n};\n\nconst InteractionLog = ({ selectedRow, doubleClickedRow, interactionLog }: InteractionLogProps) => {\n  return (\n    <div className='space-y-4'>\n      <div className='border rounded-lg p-4'>\n        <h3 className='font-semibold mb-3'>Selected Row</h3>\n        {selectedRow ? (\n          <div className='text-sm space-y-1'>\n            <p>\n              <strong>Name:</strong> {selectedRow.name}\n            </p>\n            <p>\n              <strong>Category:</strong> {selectedRow.category}\n            </p>\n            <p>\n              <strong>Price:</strong> ${selectedRow.price}\n            </p>\n            <p>\n              <strong>Stock:</strong> {selectedRow.stock}\n            </p>\n          </div>\n        ) : (\n          <p className='text-muted-foreground text-sm'>No row selected</p>\n        )}\n      </div>\n\n      <div className='border rounded-lg p-4'>\n        <h3 className='font-semibold mb-3'>Double-Clicked Row</h3>\n        {doubleClickedRow ? (\n          <div className='text-sm space-y-1'>\n            <p>\n              <strong>Name:</strong> {doubleClickedRow.name}\n            </p>\n            <p>\n              <strong>Status:</strong> {doubleClickedRow.status}\n            </p>\n            <p>\n              <strong>Description:</strong> {doubleClickedRow.description.slice(0, 50)}...\n            </p>\n          </div>\n        ) : (\n          <p className='text-muted-foreground text-sm'>No row double-clicked</p>\n        )}\n      </div>\n\n      <div className='border rounded-lg p-4'>\n        <h3 className='font-semibold mb-3'>Interaction Log</h3>\n        <div className='text-sm space-y-1 max-h-32 overflow-y-auto'>\n          {interactionLog.length > 0 ? (\n            interactionLog.map((log, index) => (\n              <p key={index} className='text-xs bg-muted px-2 py-1 rounded'>\n                {log}\n              </p>\n            ))\n          ) : (\n            <p className='text-muted-foreground'>No interactions yet</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InteractionLog);\n\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NextStepsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>üöÄ Next Steps</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Ready to explore more advanced features? Check out these examples:\n        </p>\n        <div className='flex flex-wrap gap-2'>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/checkbox-selection'\n          >\n            Checkbox Selection\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/expand-row'\n          >\n            Expand Rows\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/custom-render-cell'\n          >\n            Custom Cells\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(NextStepsSection);\n\n","import { faker } from '@faker-js/faker';\nimport type { Product } from './types';\n\nexport const generateSampleData = (): Product[] => {\n  return Array.from({ length: 20 }, (_, index) => ({\n    id: index + 1,\n    name: faker.commerce.productName(),\n    category: faker.commerce.department(),\n    price: faker.number.int({ min: 10, max: 1000 }),\n    stock: faker.number.int({ min: 0, max: 100 }),\n    status: faker.helpers.arrayElement(['active', 'inactive', 'discontinued']) as Product['status'],\n    lastUpdated: faker.date.recent().toISOString(),\n    description: faker.commerce.productDescription(),\n  }));\n};\n\n","import type { IHeader } from '../../../../components/virtual-table';\nimport type { Product } from './types';\n\nexport const getProductHeaders = (): IHeader<Product>[] => [\n  { key: 'name', caption: 'Product Name', width: 200 },\n  { key: 'category', caption: 'Category', width: 150 },\n  { key: 'price', caption: 'Price', width: 100 },\n  { key: 'stock', caption: 'Stock', width: 80 },\n  {\n    key: 'status',\n    caption: 'Status',\n    width: 170,\n    renderCell: (item) => (\n      <span\n        className={`px-2 py-1 rounded-full text-xs font-medium ${\n          item.status === 'active'\n            ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\n            : item.status === 'inactive'\n              ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200'\n              : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200'\n        }`}\n      >\n        {item.status}\n      </span>\n    ),\n  },\n  { key: 'lastUpdated', caption: 'Last Updated', width: 120 },\n];\n\n","export const CODE_EXAMPLE = `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\ntype Product = {\n  id: number;\n  name: string;\n  category: string;\n  price: number;\n  stock: number;\n  status: 'active' | 'inactive' | 'discontinued';\n};\n\nconst ProductTable = () => {\n  const [data, setData] = useState<Product[]>([\n    // Your product data here\n  ]);\n\n  // Click handlers\n  const handleClickRow = (item: Product, rowIndex: number, columnIndex: number) => {\n    console.log('Row clicked:', item);\n    console.log('Position:', rowIndex, columnIndex);\n    // Handle single click - e.g., select row, show details\n  };\n\n  const handleDoubleClickRow = (item: Product, rowIndex: number, columnIndex: number) => {\n    console.log('Row double-clicked:', item);\n    // Handle double click - e.g., open edit modal, navigate to detail page\n    openEditModal(item);\n  };\n\n  const handleRightClickRow = (item: Product, position: { x: number; y: number }) => {\n    console.log('Row right-clicked:', item);\n    console.log('Mouse position:', position);\n    // Handle right click - e.g., show context menu\n    showContextMenu(item, position);\n  };\n\n  const headers: IHeader<Product>[] = [\n    { key: 'name', caption: 'Product Name', width: 200 },\n    { key: 'category', caption: 'Category', width: 150 },\n    { key: 'price', caption: 'Price', width: 100 },\n    { key: 'stock', caption: 'Stock', width: 80 },\n    { key: 'status', caption: 'Status', width: 120 },\n  ];\n\n  return (\n    <VirtualTable\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      headerMode=\"double\"\n      rowHeight={32}\n      headerHeight={40}\n      filterHeight={32}\n      onClickRow={handleClickRow}\n      onDoubleClickRow={handleDoubleClickRow}\n      onRightClickRow={handleRightClickRow}\n    />\n  );\n};`;\n\n","import { memo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLE, type Product } from '../utils';\nimport { getProductHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\nimport ContextMenu from './context-menu';\nimport InteractionLog from './interaction-log';\n\ntype PreviewSectionProps = {\n  data: Product[];\n  selectedRow: Product | null;\n  doubleClickedRow: Product | null;\n  contextMenuPosition: { x: number; y: number } | null;\n  contextMenuRow: Product | null;\n  showContextMenu: boolean;\n  interactionLog: string[];\n  onClickRow: (item: Product, rowIndex: number, columnIndex: number) => void;\n  onDoubleClickRow: (item: Product, rowIndex: number, columnIndex: number) => void;\n  onRightClickRow: (item: Product, position: { x: number; y: number }) => void;\n  onContextMenuAction: (action: string) => void;\n  onCloseContextMenu: () => void;\n};\n\nconst PreviewSection = ({\n  data,\n  selectedRow,\n  doubleClickedRow,\n  contextMenuPosition,\n  contextMenuRow,\n  showContextMenu,\n  interactionLog,\n  onClickRow,\n  onDoubleClickRow,\n  onRightClickRow,\n  onContextMenuAction,\n  onCloseContextMenu,\n}: PreviewSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const headers = getProductHeaders();\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Preview</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='grid grid-cols-1 lg:grid-cols-3 gap-6'>\n        {/* Table */}\n        <div className='lg:col-span-2'>\n          <div className='h-96'>\n            <VirtualTable\n              classNameCell={(item) => {\n                if (selectedRow?.id === item.id)\n                  return 'bg-blue-50 dark:bg-blue-950 border-blue-200 dark:border-blue-800';\n                if (doubleClickedRow?.id === item.id)\n                  return 'bg-green-50 dark:bg-green-950 border-green-200 dark:border-green-800';\n                return '';\n              }}\n              data={data}\n              filterHeight={32}\n              headerHeight={40}\n              headerMode='double'\n              headers={headers}\n              onClickRow={onClickRow}\n              onDoubleClickRow={onDoubleClickRow}\n              onRightClickRow={onRightClickRow}\n              rowHeight={32}\n              rowKey='id'\n            />\n          </div>\n\n          <div className='mt-4 text-sm text-muted-foreground'>\n            <p>\n              <strong>Try these interactions:</strong>\n            </p>\n            <ul className='list-disc list-inside space-y-1 mt-2'>\n              <li>\n                <strong>Single Click:</strong> Select a row (highlighted in blue)\n              </li>\n              <li>\n                <strong>Double Click:</strong> Edit mode (highlighted in green)\n              </li>\n              <li>\n                <strong>Right Click:</strong> Show context menu\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Interaction Log */}\n        <InteractionLog\n          doubleClickedRow={doubleClickedRow}\n          interactionLog={interactionLog}\n          selectedRow={selectedRow}\n        />\n      </div>\n\n      {/* Context Menu */}\n      <ContextMenu\n        isOpen={showContextMenu}\n        onAction={onContextMenuAction}\n        onClose={onCloseContextMenu}\n        position={contextMenuPosition}\n        row={contextMenuRow}\n      />\n\n      {showCode && <div className='mt-4'><CodeBlock code={CODE_EXAMPLE} title='Click Row Actions Example' /></div>}\n    </section>\n  );\n};\n\nexport default memo(PreviewSection);\n\n","import { useCallback, useState } from 'react';\nimport type { ContextMenuPosition, Product } from '../utils';\n\nexport const useRowInteractions = () => {\n  const [selectedRow, setSelectedRow] = useState<Product | null>(null);\n  const [doubleClickedRow, setDoubleClickedRow] = useState<Product | null>(null);\n  const [contextMenuPosition, setContextMenuPosition] = useState<ContextMenuPosition | null>(null);\n  const [contextMenuRow, setContextMenuRow] = useState<Product | null>(null);\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [interactionLog, setInteractionLog] = useState<string[]>([]);\n\n  const addToLog = useCallback((message: string) => {\n    setInteractionLog((prev) => [\n      `${new Date().toLocaleTimeString()}: ${message}`,\n      ...prev.slice(0, 4),\n    ]);\n  }, []);\n\n  const handleClickRow = useCallback(\n    (item: Product, rowIndex: number, columnIndex: number) => {\n      setSelectedRow(item);\n      addToLog(`Clicked on \"${item.name}\" (Row ${rowIndex}, Column ${columnIndex})`);\n    },\n    [addToLog],\n  );\n\n  const handleDoubleClickRow = useCallback(\n    (item: Product, rowIndex: number, columnIndex: number) => {\n      setDoubleClickedRow(item);\n      addToLog(`Double-clicked on \"${item.name}\" (Row ${rowIndex}, Column ${columnIndex})`);\n    },\n    [addToLog],\n  );\n\n  const handleRightClickRow = useCallback(\n    (item: Product, position: ContextMenuPosition) => {\n      setSelectedRow(item);\n      setContextMenuRow(item);\n      setContextMenuPosition(position);\n      setShowContextMenu(true);\n      addToLog(`Right-clicked on \"${item.name}\" at position (${position.x}, ${position.y})`);\n    },\n    [addToLog],\n  );\n\n  const handleContextMenuAction = useCallback(\n    (action: string) => {\n      if (contextMenuRow) {\n        addToLog(`${action} on \"${contextMenuRow.name}\"`);\n      }\n      setShowContextMenu(false);\n    },\n    [contextMenuRow, addToLog],\n  );\n\n  const handleCloseContextMenu = useCallback(() => {\n    setShowContextMenu(false);\n  }, []);\n\n  return {\n    selectedRow,\n    doubleClickedRow,\n    contextMenuPosition,\n    contextMenuRow,\n    showContextMenu,\n    interactionLog,\n    handleClickRow,\n    handleDoubleClickRow,\n    handleRightClickRow,\n    handleContextMenuAction,\n    handleCloseContextMenu,\n  };\n};\n\n","import { memo, useMemo } from 'react';\nimport {\n  FeaturesSection,\n  ImplementationTipsSection,\n  NextStepsSection,\n  PreviewSection,\n} from './components';\nimport { useRowInteractions } from './hooks';\nimport { generateSampleData } from './utils';\n\nconst ClickRowActionPage = () => {\n  const data = useMemo(() => generateSampleData(), []);\n  const {\n    selectedRow,\n    doubleClickedRow,\n    contextMenuPosition,\n    contextMenuRow,\n    showContextMenu,\n    interactionLog,\n    handleClickRow,\n    handleDoubleClickRow,\n    handleRightClickRow,\n    handleContextMenuAction,\n    handleCloseContextMenu,\n  } = useRowInteractions();\n\n  return (\n    <div className='space-y-8'>\n      {/* Page Header */}\n      <div>\n        <h1 className='text-4xl font-bold tracking-tight'>Click Row Actions</h1>\n        <p className='text-xl text-muted-foreground mt-4'>\n          Learn how to handle row interactions in the Virtual Table. Support for single click,\n          double click, and right-click events with full context information.\n        </p>\n      </div>\n\n      {/* Preview Section */}\n      <PreviewSection\n        contextMenuPosition={contextMenuPosition}\n        contextMenuRow={contextMenuRow}\n        data={data}\n        doubleClickedRow={doubleClickedRow}\n        interactionLog={interactionLog}\n        onClickRow={handleClickRow}\n        onCloseContextMenu={handleCloseContextMenu}\n        onContextMenuAction={handleContextMenuAction}\n        onDoubleClickRow={handleDoubleClickRow}\n        onRightClickRow={handleRightClickRow}\n        selectedRow={selectedRow}\n        showContextMenu={showContextMenu}\n      />\n\n      {/* Features Section */}\n      <FeaturesSection />\n\n      {/* Implementation Tips */}\n      <ImplementationTipsSection />\n\n      {/* Next Steps */}\n      <NextStepsSection />\n    </div>\n  );\n};\n\nexport default memo(ClickRowActionPage);\n\n"],"names":["CodeBlock","title","code","jsxs","jsx","CodeBlock$1","memo","ContextMenu","isOpen","position","onAction","onClose","contextMenuRef","useRef","useClickOutside","createPortal","ContextMenu$1","FeaturesSection","FeaturesSection$1","ImplementationTipsSection","ImplementationTipsSection$1","InteractionLog","selectedRow","doubleClickedRow","interactionLog","log","index","InteractionLog$1","NextStepsSection","Link","NextStepsSection$1","generateSampleData","_","faker","getProductHeaders","item","CODE_EXAMPLE","PreviewSection","data","contextMenuPosition","contextMenuRow","showContextMenu","onClickRow","onDoubleClickRow","onRightClickRow","onContextMenuAction","onCloseContextMenu","showCode","setShowCode","useState","headers","VirtualTable","PreviewSection$1","useRowInteractions","setSelectedRow","setDoubleClickedRow","setContextMenuPosition","setContextMenuRow","setShowContextMenu","setInteractionLog","addToLog","useCallback","message","prev","handleClickRow","rowIndex","columnIndex","handleDoubleClickRow","handleRightClickRow","handleContextMenuAction","action","handleCloseContextMenu","ClickRowActionPage","useMemo"],"mappings":"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"}