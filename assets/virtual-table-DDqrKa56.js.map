{"version":3,"file":"virtual-table-DDqrKa56.js","sources":["../../src/components/virtual-table/hooks/use-click-outside.ts","../../src/components/virtual-table/lib/constants.ts","../../src/components/virtual-table/lib/utils.ts","../../src/components/virtual-table/hooks/use-filter-advance.ts","../../src/components/virtual-table/hooks/use-filter-selection.ts","../../src/components/virtual-table/hooks/use-filter-search.ts","../../src/components/virtual-table/hooks/use-filter-sort.ts","../../src/components/virtual-table/hooks/use-scroll-bottom-detection.ts","../../src/components/virtual-table/context/header-context.tsx","../../src/components/virtual-table/hooks/use-flattened-data-incremental.ts","../../src/components/virtual-table/hooks/use-auto-stretch-column.ts","../../src/components/virtual-table/context/filter-context.tsx","../../src/components/virtual-table/context/virtualizer-context.tsx","../../src/components/virtual-table/context/ui-context.tsx","../../src/components/virtual-table/components/empty-data-indicator.tsx","../../src/components/virtual-table/components/loading-indicator.tsx","../../src/components/virtual-table/icons/ic-close.tsx","../../src/components/virtual-table/components/input-search.tsx","../../src/components/virtual-table/components/resize-indicator.tsx","../../src/components/virtual-table/components/checkbox.tsx","../../src/components/virtual-table/icons/ic-check.tsx","../../src/components/virtual-table/icons/ic-chevon.tsx","../../src/components/virtual-table/icons/ic-column.tsx","../../src/components/virtual-table/icons/ic-copy.tsx","../../src/components/virtual-table/icons/ic-delete.tsx","../../src/components/virtual-table/icons/ic-dots-vertical.tsx","../../src/components/virtual-table/icons/ic-filter-advance.tsx","../../src/components/virtual-table/icons/ic-filter-multiple.tsx","../../src/components/virtual-table/icons/ic-menu.tsx","../../src/components/virtual-table/icons/ic-search.tsx","../../src/components/virtual-table/icons/ic-sort.tsx","../../src/components/virtual-table/icons/index.tsx","../../src/components/virtual-table/components/dropdown.tsx","../../src/components/virtual-table/components/header/filter-action.tsx","../../src/components/virtual-table/components/header/filter-card.tsx","../../src/components/virtual-table/components/body/row-checkbox.tsx","../../src/components/virtual-table/components/body/row-expand.tsx","../../src/components/virtual-table/components/table-head.tsx","../../src/components/virtual-table/components/table-cell.tsx","../../src/components/virtual-table/components/header/filter-selection.tsx","../../src/components/virtual-table/components/header/filter-advance.tsx","../../src/components/virtual-table/components/header/filter-search.tsx","../../src/components/virtual-table/components/header/header-filter.tsx","../../src/components/virtual-table/components/body/row-expanded-content.tsx","../../src/components/virtual-table/components/header/header-action.tsx","../../src/components/virtual-table/components/header/header-caption.tsx","../../src/components/virtual-table/components/header/header-cell-nested.tsx","../../src/components/virtual-table/context/selection-context.tsx","../../src/components/virtual-table/components/header/header-cell.tsx","../../src/components/virtual-table/components/body/body-cell.tsx","../../src/components/virtual-table/components/footer/footer-cell.tsx","../../src/components/virtual-table/components/resize-line.tsx","../../src/components/virtual-table/virtual-table-header.tsx","../../src/components/virtual-table/virtual-table-footer.tsx","../../src/components/virtual-table/virtual-table-body.tsx","../../src/components/virtual-table/virtual-table.tsx"],"sourcesContent":["import { useEffect } from 'react';\n\nexport default function useOnClickOutside(\n  refs: React.RefObject<HTMLDivElement | HTMLElement | null>[],\n  handler: (currentTarget?: HTMLElement | null, el?: HTMLDivElement | HTMLElement) => void\n) {\n  useEffect(() => {\n    const safeRefs = Array.isArray(refs) ? refs : [];\n\n    if (!safeRefs.some((ref) => ref.current)) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      const isOutside = safeRefs\n        .filter((ref) => ref.current)\n        .every((ref) => ref.current && !ref.current.contains(event.target as Node));\n      if (isOutside) handler();\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [refs, handler]);\n}\n","export const DEFAULT_SIZE = {\n  GROUP_HEADER_HEIGHT: 32,\n  HEADER_HEIGTH: 32,\n  FILTER_HEIGHT: 28,\n  COLUMN_WIDTH: 160,\n  ROW_HEIGHT: 28,\n  FOOTER_HEIGHT: 32,\n  CARD_FILTER_WIDTH: 160,\n  CARD_FILTER_HEIGHT: 200,\n  EXPANDED_ROW_HEIGHT: 250,\n};\n\nexport const FILTER_ADVANCE_CONFIG = {\n  none: 'None',\n  equal: 'Equal',\n  notEqual: 'Not Equal',\n  startsWith: 'Starts with',\n  endsWith: 'Ends with',\n  contains: 'Contains',\n  notContains: 'Not Contains',\n} as const;\n\nexport const SESSION_STORAGE_KEY = {\n  SEARCH_PER_COLUMN: 'search_per_column',\n  FILTER_SELECTION_PER_COLUMN: 'filter_selection_per_column',\n  FILTER_ADVANCE_PER_COLUMN: 'filter_advance_per_column',\n};\n","import type { IAdjustedHeader } from './types';\n\nexport function calculateFixedCardPosition(rect: DOMRect, cardHeight: number = 280) {\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n\n  let calculatedLeft = rect.left - 150;\n  let calculatedTop = rect.bottom;\n\n  if (calculatedLeft < 0) calculatedLeft = 10;\n  if (calculatedLeft + 300 > viewportWidth) calculatedLeft = viewportWidth - 220;\n  if (calculatedTop + cardHeight > viewportHeight) {\n    calculatedTop = viewportHeight - cardHeight;\n  }\n\n  return { calculatedTop, calculatedLeft };\n}\n\nexport function getObjKeyByValue(object: Record<string, string | number>, value: string | number) {\n  return Object.keys(object).find((key) => object[key] === value);\n}\n\n/**\n * Menghitung lebar scrollbar pada elemen dengan ref yang diberikan.\n * dengan cara mengurangi offsetWidth dengan clientWidth.\n * Jika elemen tidak ada, kembalikan 0.\n */\nexport function getScrollbarWidth(ref: React.RefObject<HTMLDivElement | null>) {\n  if (!ref.current) return 0;\n  return ref.current.offsetWidth - ref.current.clientWidth;\n}\n\nexport function calculateElementOverflow(rect: DOMRect, cardWidth: number, cardHeight: number) {\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n\n  const right = viewportWidth - (rect.left + cardWidth); // < 0 berarti overflow kanan\n  const bottom = viewportHeight - (rect.top + cardHeight); // < 0 berarti overflow bawah\n  const left = rect.left; // < 0 berarti overflow kiri\n  const top = rect.top; // < 0 berarti overflow atas\n\n  return { right, bottom, left, top };\n}\n\n// Fungsi untuk mencari child secara rekursif\nexport const findChildRecursive = (parent: IAdjustedHeader, targetChildKey: string): IAdjustedHeader | undefined => {\n  // Cek children langsung\n  const directChild = parent.children?.find((c) => c.key === targetChildKey);\n  if (directChild) return directChild;\n\n  // Jika tidak ditemukan, cari di children yang memiliki children (nested)\n  return parent.children?.reduce<IAdjustedHeader | undefined>((found, child) => {\n    if (found) return found;\n    if (child.children?.length) {\n      return findChildRecursive(child, targetChildKey);\n    }\n    return undefined;\n  }, undefined);\n};\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport useOnClickOutside from './use-click-outside';\nimport { SESSION_STORAGE_KEY, type TFilterAdvanceConfig } from '../lib';\n\ntype IActiveAdvanceFilters<T> = Record<keyof T, { config_name: TFilterAdvanceConfig; value: string }>;\n\ninterface IAdvanceFilterTable<TDataSource> {\n  data: TDataSource[];\n  useServerAdvanceFilter?: boolean;\n  isResetFilter?: boolean;\n  useSessionFilter?: { tableKey: string };\n  onChangeAdvanceFilter?: (data: IActiveAdvanceFilters<TDataSource>) => void;\n}\n\nexport default function useFilterAdvance<TDataSource>(props: IAdvanceFilterTable<TDataSource>) {\n  const { data, isResetFilter, onChangeAdvanceFilter, useServerAdvanceFilter = false, useSessionFilter } = props;\n\n  const filterAdvanceCardRef = useRef<HTMLDivElement | null>(null);\n  const [isFilterAdvanceCardOpen, setIsFilterAdvanceCardOpen] = useState({ show: false, key: '' });\n  const [activeAdvanceFilters, setActiveAdvanceFilters] = useState<IActiveAdvanceFilters<TDataSource>>(\n    {} as IActiveAdvanceFilters<TDataSource>\n  );\n\n  useEffect(() => {\n    if (isResetFilter) setActiveAdvanceFilters({} as IActiveAdvanceFilters<TDataSource>);\n  }, [isResetFilter]);\n\n  // reset session storage of filter advance per column on reload page\n  useEffect(() => {\n    if (!useSessionFilter) return;\n\n    window.addEventListener('beforeunload', () => {\n      sessionStorage.removeItem(SESSION_STORAGE_KEY.FILTER_ADVANCE_PER_COLUMN);\n    });\n\n    return () => {\n      window.removeEventListener('beforeunload', () => {});\n    };\n  }, [useSessionFilter]);\n\n  useOnClickOutside([filterAdvanceCardRef], () => setIsFilterAdvanceCardOpen({ show: false, key: '' }));\n\n  const setToSessionStorage = useCallback(\n    (data: Record<keyof TDataSource, { config_name: TFilterAdvanceConfig; value: string }>) => {\n      sessionStorage.setItem(\n        SESSION_STORAGE_KEY.FILTER_ADVANCE_PER_COLUMN,\n        JSON.stringify({\n          ...JSON.parse(sessionStorage.getItem(SESSION_STORAGE_KEY.FILTER_ADVANCE_PER_COLUMN) || '{}'),\n          [useSessionFilter?.tableKey || '']: data,\n        })\n      );\n    },\n    [useSessionFilter]\n  );\n\n  const filteredAdvanceData = useMemo(() => {\n    if (Object.keys(activeAdvanceFilters).length === 0) return data;\n    if (useServerAdvanceFilter) return data;\n\n    return data.filter((item) => {\n      return Object.entries(activeAdvanceFilters).every(([key, filter]) => {\n        const itemValue = String(item[key as keyof TDataSource]).toLowerCase();\n        const filterValue = (filter as { value: string })?.value?.toLowerCase();\n\n        switch ((filter as { config_name: TFilterAdvanceConfig })?.config_name) {\n          case 'equal':\n            return itemValue === filterValue;\n          case 'notEqual':\n            return itemValue !== filterValue;\n          case 'startsWith':\n            return itemValue.startsWith(filterValue);\n          case 'endsWith':\n            return itemValue.endsWith(filterValue);\n          case 'contains':\n            return itemValue.includes(filterValue);\n          case 'notContains':\n            return !itemValue.includes(filterValue);\n          default:\n            return true;\n        }\n      });\n    });\n  }, [data, activeAdvanceFilters, useServerAdvanceFilter]);\n\n  const updateAdvanceFilter = useCallback(\n    (dataKey: keyof TDataSource | string, config_name: TFilterAdvanceConfig, value: string) => {\n      setActiveAdvanceFilters((prev) => {\n        const newFilters = {\n          ...prev,\n          [dataKey]: { config_name, value },\n        };\n\n        onChangeAdvanceFilter?.(newFilters);\n        if (useSessionFilter) setToSessionStorage(newFilters);\n\n        return newFilters;\n      });\n      setIsFilterAdvanceCardOpen({ show: false, key: '' });\n    },\n    [onChangeAdvanceFilter]\n  );\n\n  const resetAdvanceFilter = useCallback(\n    (dataKey: keyof TDataSource | string) => {\n      setActiveAdvanceFilters((prev) => {\n        const newFilters = { ...prev };\n        delete newFilters[dataKey as keyof TDataSource];\n\n        onChangeAdvanceFilter?.(newFilters);\n        if (useSessionFilter) setToSessionStorage(newFilters);\n\n        return newFilters;\n      });\n      setIsFilterAdvanceCardOpen({ show: false, key: '' });\n    },\n    [onChangeAdvanceFilter]\n  );\n\n  return {\n    filteredAdvanceData,\n    filterAdvanceCardRef,\n    isFilterAdvanceCardOpen,\n    setIsFilterAdvanceCardOpen,\n    updateAdvanceFilter,\n    resetAdvanceFilter,\n    activeAdvanceFilters,\n  };\n}\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport useOnClickOutside from './use-click-outside';\nimport { SESSION_STORAGE_KEY } from '../lib';\n\ninterface IFilterTable<TDataSource> {\n  data: TDataSource[];\n  isResetFilter?: boolean;\n  useServerFilter?: boolean;\n  useSessionFilter?: { tableKey: string };\n  onChangeFilter?: (data: Record<keyof TDataSource, string[]>) => void;\n}\n\nexport default function useFilterSelection<TDataSource>(props: IFilterTable<TDataSource>) {\n  const { data, isResetFilter, onChangeFilter, useServerFilter = false, useSessionFilter } = props;\n\n  const filterCardRef = useRef<HTMLDivElement | null>(null);\n  const [activeFilters, setActiveFilters] = useState<Record<keyof TDataSource, string[]>>(\n    {} as Record<keyof TDataSource, string[]>\n  );\n\n  const [isFilterCardOpen, setIsFilterCardOpen] = useState({ show: false, key: '' });\n\n  const resetAllFilter = useCallback(() => setActiveFilters({} as Record<keyof TDataSource, string[]>), []);\n\n  useEffect(() => {\n    if (isResetFilter) resetAllFilter();\n  }, [isResetFilter]);\n\n  // reset session storage of filter selection per column on reload page\n  useEffect(() => {\n    if (!useSessionFilter) return;\n\n    window.addEventListener('beforeunload', () => {\n      sessionStorage.removeItem(SESSION_STORAGE_KEY.FILTER_SELECTION_PER_COLUMN);\n    });\n\n    return () => {\n      window.removeEventListener('beforeunload', () => {});\n    };\n  }, [useSessionFilter]);\n\n  useOnClickOutside([filterCardRef], () => setIsFilterCardOpen({ show: false, key: '' }));\n\n  const setToSessionStorage = useCallback(\n    (data: Record<keyof TDataSource, string[]>) => {\n      sessionStorage.setItem(\n        SESSION_STORAGE_KEY.FILTER_SELECTION_PER_COLUMN,\n        JSON.stringify({\n          ...JSON.parse(sessionStorage.getItem(SESSION_STORAGE_KEY.FILTER_SELECTION_PER_COLUMN) || '{}'),\n          [useSessionFilter?.tableKey || '']: data,\n        })\n      );\n    },\n    [useSessionFilter]\n  );\n\n  const filteredData = useMemo(() => {\n    if (Object.keys(activeFilters).length === 0) return data;\n    if (useServerFilter) return data;\n\n    return data.filter((row) => {\n      return Object.entries(activeFilters).every(([columnName, filterValues]) => {\n        const rowValue = row[columnName as keyof TDataSource]; // Bisa berupa angka atau string\n        const filterValue = (filterValues as (string | number)[]).map((val) =>\n          typeof rowValue === 'number' ? Number(val) : String(val)\n        );\n\n        return filterValue.some((value) => rowValue === value); // Pastikan tipe sama sebelum compare\n      });\n    });\n  }, [data, activeFilters, useServerFilter]);\n\n  const updateFilter = useCallback(\n    (dataKey: keyof TDataSource | string, filterValues: string[]) => {\n      setActiveFilters((prev) => {\n        const newFilters = { ...prev };\n\n        if (filterValues.length === 0) {\n          delete newFilters[dataKey as keyof TDataSource];\n        } else {\n          newFilters[dataKey as keyof TDataSource] = filterValues;\n        }\n\n        onChangeFilter?.(newFilters);\n        if (useSessionFilter) setToSessionStorage(newFilters);\n\n        return newFilters;\n      });\n\n      setIsFilterCardOpen({ show: false, key: '' });\n    },\n    [onChangeFilter]\n  );\n\n  const resetFilter = useCallback(\n    (dataKey: keyof TDataSource | string) => {\n      setActiveFilters((prev) => {\n        const newFilters = { ...prev };\n        delete newFilters[dataKey as keyof TDataSource];\n        onChangeFilter?.(newFilters);\n        if (useSessionFilter) setToSessionStorage(newFilters);\n        return newFilters;\n      });\n      setIsFilterCardOpen({ show: false, key: '' });\n    },\n    [onChangeFilter]\n  );\n\n  return {\n    filteredData,\n    filterCardRef,\n    isFilterCardOpen,\n    updateFilter,\n    resetFilter,\n    activeFilters,\n    resetAllFilter,\n  };\n}\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport useOnClickOutside from './use-click-outside';\nimport { SESSION_STORAGE_KEY } from '../lib';\n\ninterface ISearchTable<TDataSource> {\n  data: TDataSource[];\n  isResetFilter?: boolean;\n  useServerSearch?: boolean;\n  useSessionFilter?: { tableKey: string };\n  onChangeSearch?: (data: Record<keyof TDataSource, string>) => void;\n}\n\nexport default function useFilterSearch<TDataSource>(props: ISearchTable<TDataSource>) {\n  const { data, useServerSearch, onChangeSearch, isResetFilter, useSessionFilter } = props;\n\n  const searchCardRef = useRef<HTMLDivElement | null>(null);\n  const [isSearchCardOpen, setIsSearchCardOpen] = useState({ show: false, key: '' });\n\n  const [activeSearch, seActiveSearch] = useState<Record<keyof TDataSource, string>>(\n    {} as Record<keyof TDataSource, string>\n  );\n\n  // reset session storage of search per column on reload page\n  useEffect(() => {\n    if (!useSessionFilter) return;\n\n    window.addEventListener('beforeunload', () => {\n      sessionStorage.removeItem('search_per_column');\n    });\n\n    return () => {\n      window.removeEventListener('beforeunload', () => {});\n    };\n  }, [useSessionFilter]);\n\n  useEffect(() => {\n    if (isResetFilter) seActiveSearch({} as Record<keyof TDataSource, string>);\n  }, [isResetFilter]);\n\n  useOnClickOutside([searchCardRef], () => setIsSearchCardOpen({ show: false, key: '' }));\n\n  const setToSessionStorage = useCallback(\n    (data: Record<keyof TDataSource, string>) => {\n      sessionStorage.setItem(\n        SESSION_STORAGE_KEY.SEARCH_PER_COLUMN,\n        JSON.stringify({\n          ...JSON.parse(sessionStorage.getItem(SESSION_STORAGE_KEY.SEARCH_PER_COLUMN) || '{}'),\n          [useSessionFilter?.tableKey || '']: data,\n        })\n      );\n    },\n    [useSessionFilter]\n  );\n\n  const searchedData = useMemo(() => {\n    if (!activeSearch || Object.keys(activeSearch).length === 0) return data || [];\n    if (useServerSearch) return data;\n\n    return (data || []).filter((row) =>\n      Object.entries(activeSearch).every(([dataKey, searchValue]) =>\n        (searchValue as string).length === 0\n          ? true\n          : row[dataKey as keyof TDataSource]\n              ?.toString()\n              ?.toLowerCase()\n              ?.includes((searchValue as string).toLowerCase())\n      )\n    );\n  }, [data, activeSearch, useServerSearch]);\n\n  const updateSearch = useCallback(\n    (dataKey: keyof TDataSource | string, searchValue: string) => {\n      //   gridRef.current?.scrollTo({ scrollTop: 0 });\n\n      seActiveSearch((prev) => {\n        const newSearch = { ...prev };\n\n        if (searchValue.length === 0) {\n          delete newSearch[dataKey as keyof TDataSource];\n        } else {\n          newSearch[dataKey as keyof TDataSource] = searchValue;\n        }\n\n        onChangeSearch?.(newSearch);\n        if (useSessionFilter) setToSessionStorage(newSearch);\n\n        return newSearch;\n      });\n\n      setIsSearchCardOpen({ show: false, key: '' });\n    },\n    [onChangeSearch]\n  );\n\n  const resetSearch = useCallback(\n    (dataKey: keyof TDataSource | string) => {\n      function removeKeyImmutable<K extends keyof TDataSource>(\n        source: Record<keyof TDataSource, string>,\n        key: K\n      ): Record<Exclude<keyof TDataSource, K>, string> {\n        const { [key]: _, ...rest } = source;\n        return rest;\n      }\n\n      const newActiveSearch = removeKeyImmutable(activeSearch, dataKey as keyof TDataSource);\n\n      seActiveSearch(newActiveSearch as Record<keyof TDataSource, string>);\n      onChangeSearch?.(newActiveSearch as Record<keyof TDataSource, string>);\n      if (useSessionFilter) setToSessionStorage(newActiveSearch as Record<keyof TDataSource, string>);\n\n      setIsSearchCardOpen({ show: false, key: '' });\n    },\n    [onChangeSearch, activeSearch]\n  );\n\n  const resetAllSearch = useCallback(() => seActiveSearch({} as Record<keyof TDataSource, string>), []);\n\n  return {\n    searchedData,\n    searchCardRef,\n    isSearchCardOpen,\n    updateSearch,\n    resetSearch,\n    activeSearch,\n    resetAllSearch,\n  };\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport type { TSortOrder } from '../lib';\n\ninterface ISortTable<TDataSource> {\n  data: TDataSource[];\n  useServerSort?: boolean;\n  isResetFilter?: boolean;\n  onChangeSort?: (sortKey: string, sortBy: TSortOrder) => void;\n}\n\nexport default function useFilterSort<TDataSource>(props: ISortTable<TDataSource>) {\n  const { data, useServerSort, onChangeSort, isResetFilter } = props;\n\n  const [sortKey, setSortKey] = useState<string | null>(null);\n  const [sortBy, setSortBy] = useState<TSortOrder>('unset');\n\n  useEffect(() => {\n    if (isResetFilter) {\n      setSortKey(null);\n      setSortBy('unset');\n    }\n  }, [isResetFilter]);\n\n  const sortedData = useMemo(() => {\n    if (!sortKey || sortBy === 'unset') return data;\n    if (useServerSort) return data;\n\n    const sorted = [...data].sort((a, b) => {\n      if (a[sortKey as keyof TDataSource] < b[sortKey as keyof TDataSource]) return sortBy === 'asc' ? -1 : 1;\n      if (a[sortKey as keyof TDataSource] > b[sortKey as keyof TDataSource]) return sortBy === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    return sorted;\n  }, [data, sortKey, sortBy, useServerSort]);\n\n  const handleSort = useCallback(\n    (key: string) => {\n      setSortKey((prevKey) => {\n        const newSortBy = prevKey === key ? (sortBy === 'asc' ? 'desc' : sortBy === 'desc' ? 'unset' : 'asc') : 'asc';\n\n        setSortBy(newSortBy);\n        onChangeSort?.(key, newSortBy);\n\n        return newSortBy === 'unset' ? null : key;\n      });\n    },\n    [sortBy, onChangeSort]\n  );\n\n  const handleSpecificSort = useCallback(\n    (key: string, sortBy: TSortOrder) => {\n      setSortKey(sortBy === 'unset' ? null : key);\n      setSortBy(sortBy);\n      onChangeSort?.(key, sortBy);\n    },\n    [onChangeSort]\n  );\n\n  return { sortedData, handleSort, handleSpecificSort, sortKey, sortBy };\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface UseScrollBottomDetectionOptions {\n  threshold?: number; // Distance from bottom to trigger callback (in pixels)\n  throttleMs?: number; // Throttle interval in milliseconds\n  onScrollTouchBottom: () => void;\n}\n\n/**\n * Custom hook for detecting when scroll reaches bottom with performance optimization\n * Uses throttling and requestAnimationFrame to minimize INP impact\n */\nexport const useScrollBottomDetection = (\n  scrollElementRef: React.RefObject<HTMLElement | null>,\n  options: UseScrollBottomDetectionOptions,\n) => {\n  const { threshold = 100, throttleMs = 100, onScrollTouchBottom } = options;\n\n  // Use refs to avoid recreating functions on every render\n  const lastTriggerTimeRef = useRef<number>(0);\n  const rafIdRef = useRef<number | null>(null);\n  const isNearBottomRef = useRef<boolean>(false);\n\n  // Track when the ref is available\n  const [isRefReady, setIsRefReady] = useState(false);\n\n  // Check if ref is available using a polling approach\n  useEffect(() => {\n    const checkRef = () => {\n      if (scrollElementRef.current && !isRefReady) {\n        setIsRefReady(true);\n      } else if (!scrollElementRef.current && isRefReady) {\n        setIsRefReady(false);\n      }\n    };\n\n    // Check immediately\n    checkRef();\n\n    // Set up polling to check for ref availability\n    const interval = setInterval(checkRef, 100);\n\n    return () => clearInterval(interval);\n  }, [isRefReady, scrollElementRef]);\n\n  const checkScrollPosition = useCallback(() => {\n    const element = scrollElementRef.current;\n    if (!element) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = element;\n    const distanceFromBottom = scrollHeight - scrollTop - clientHeight;\n    const isNearBottom = distanceFromBottom <= threshold;\n\n    // Only trigger if we just reached the bottom (not already at bottom)\n    if (isNearBottom && !isNearBottomRef.current) {\n      const now = Date.now();\n      if (now - lastTriggerTimeRef.current >= throttleMs) {\n        lastTriggerTimeRef.current = now;\n        onScrollTouchBottom();\n      }\n    }\n\n    isNearBottomRef.current = isNearBottom;\n  }, [scrollElementRef, threshold, throttleMs, onScrollTouchBottom]);\n\n  const throttledCheckScrollPosition = useCallback(() => {\n    // Cancel previous RAF if it exists\n    if (rafIdRef.current) {\n      cancelAnimationFrame(rafIdRef.current);\n    }\n\n    // Use requestAnimationFrame for smooth performance\n    rafIdRef.current = requestAnimationFrame(() => {\n      checkScrollPosition();\n    });\n  }, [checkScrollPosition]);\n\n  // Wait for the ref to be available before setting up the event listener\n  useEffect(() => {\n    if (!isRefReady) return;\n\n    const element = scrollElementRef.current;\n    if (!element) return;\n\n    // Add scroll event listener with passive flag for better performance\n    element.addEventListener('scroll', throttledCheckScrollPosition, { passive: true });\n\n    return () => {\n      element.removeEventListener('scroll', throttledCheckScrollPosition);\n\n      // Clean up RAF on unmount\n      if (rafIdRef.current) {\n        cancelAnimationFrame(rafIdRef.current);\n      }\n    };\n  }, [throttledCheckScrollPosition, isRefReady, scrollElementRef]);\n\n  // Reset the near bottom state when data changes\n  useEffect(() => {\n    isNearBottomRef.current = false;\n  }, [scrollElementRef]);\n};\n","import { createContext, useContextSelector } from 'use-context-selector';\nimport { useReducer, useMemo, useCallback, useEffect } from 'react';\nimport type { IAdjustedHeader } from '../lib';\nimport { DEFAULT_SIZE } from '../lib';\n\n// ==================== Types ====================\ntype IHeaderContext = {\n  columns: IAdjustedHeader[];\n  flattenColumns: { col: IAdjustedHeader; depth: number; parentKey?: string }[];\n  freezeLeftColumns: IAdjustedHeader[];\n  freezeRightColumns: IAdjustedHeader[];\n  freezeLeftColumnsWidth: number;\n  freezeRightColumnsWidth: number;\n  isFilterVisible: boolean;\n  toggleColumnVisibility: (key: string) => void;\n  toggleFilterVisibility: () => void;\n  getLeaves: (node: IAdjustedHeader) => IAdjustedHeader[];\n  getDepth: (node: IAdjustedHeader) => number;\n  updateColumn: (key: string, update: Partial<IAdjustedHeader>) => void;\n  updateFreezeColumn: (key: string, freezeType: 'left' | 'right', update: Partial<IAdjustedHeader>) => void;\n  updateChildColumn: (parentKey: string, childKey: string, update: Partial<IAdjustedHeader>) => void;\n  updateFreezeChildColumn: (\n    parentKey: string,\n    childKey: string,\n    freezeType: 'left' | 'right',\n    update: Partial<IAdjustedHeader>,\n  ) => void;\n};\n\ntype IHeaderContextProvider = {\n  initialColumns: IAdjustedHeader[];\n  children: React.ReactNode;\n};\n\ntype HeaderState = {\n  columns: IAdjustedHeader[];\n  freezeLeftColumns: IAdjustedHeader[];\n  freezeRightColumns: IAdjustedHeader[];\n  isFilterVisible: boolean;\n};\n\ntype HeaderAction =\n  | {\n      type: 'INITIALIZE';\n      payload: { columns: IAdjustedHeader[]; freezeLeft: IAdjustedHeader[]; freezeRight: IAdjustedHeader[] };\n    }\n  | { type: 'UPDATE_COLUMN'; payload: { key: string; update: Partial<IAdjustedHeader> } }\n  | { type: 'UPDATE_CHILD_COLUMN'; payload: { parentKey: string; childKey: string; update: Partial<IAdjustedHeader> } }\n  | {\n      type: 'UPDATE_FREEZE_COLUMN';\n      payload: { key: string; freezeType: 'left' | 'right'; update: Partial<IAdjustedHeader> };\n    }\n  | {\n      type: 'UPDATE_FREEZE_CHILD_COLUMN';\n      payload: { parentKey: string; childKey: string; freezeType: 'left' | 'right'; update: Partial<IAdjustedHeader> };\n    }\n  | { type: 'TOGGLE_FILTER_VISIBILITY' };\n\n// ==================== Utils ====================\nconst flattenHeaderLeaves = (\n  columns: IAdjustedHeader[],\n  depth = 0,\n  parentKey?: string,\n): { col: IAdjustedHeader; depth: number; parentKey?: string }[] => {\n  let rows: { col: IAdjustedHeader; depth: number; parentKey?: string }[] = [];\n\n  columns.forEach((col) => {\n    if (col.children?.length) {\n      rows = rows.concat(flattenHeaderLeaves(col.children, depth + 1, col.key));\n    } else {\n      rows.push({ col, depth, parentKey });\n    }\n  });\n\n  return rows;\n};\n\nconst getLeavesOfNode = (node: IAdjustedHeader): IAdjustedHeader[] => {\n  if (!node.children || node.children.length === 0) return [node];\n  return node.children.flatMap((c) => getLeavesOfNode(c));\n};\n\nconst getDepthOfNode = (node: IAdjustedHeader): number => {\n  if (!node.children || node.children.length === 0) return 0;\n  return 1 + Math.max(...node.children.map((c) => getDepthOfNode(c)));\n};\n\nconst calculateWidthFromLeaves = (node: IAdjustedHeader): number => {\n  return getLeavesOfNode(node).reduce((sum, leaf) => sum + (leaf.width || DEFAULT_SIZE.COLUMN_WIDTH), 0);\n};\n\nconst normalizeColumnsRecursive = (cols: IAdjustedHeader[]): IAdjustedHeader[] => {\n  return cols.map((col) => {\n    const visible = col.visible ?? true;\n\n    if (col.children && col.children.length > 0) {\n      const normalizedChildren = normalizeColumnsRecursive(col.children).map((child) => ({\n        ...child,\n        parentKey: col.key,\n      }));\n\n      const widthFromLeaves = calculateWidthFromLeaves({ ...col, children: normalizedChildren });\n\n      return { ...col, visible, children: normalizedChildren, width: widthFromLeaves };\n    }\n\n    return { ...col, visible, width: col.width || DEFAULT_SIZE.COLUMN_WIDTH };\n  });\n};\n\nconst updateChildDeep = (col: IAdjustedHeader, childKey: string, update: Partial<IAdjustedHeader>): IAdjustedHeader => {\n  if (!col.children || col.children.length === 0) return col;\n\n  const nextChildren = col.children.map((child) => {\n    if (child.key === childKey) {\n      return { ...child, ...update } as IAdjustedHeader;\n    }\n    return updateChildDeep(child, childKey, update);\n  });\n\n  const widthFromLeaves = nextChildren.reduce((sum, child) => {\n    if (!child.children || child.children.length === 0) {\n      return sum + (child.width || DEFAULT_SIZE.COLUMN_WIDTH);\n    }\n    return sum + calculateWidthFromLeaves(child);\n  }, 0);\n\n  return {\n    ...col,\n    children: nextChildren,\n    width: widthFromLeaves,\n  } as IAdjustedHeader;\n};\n\nconst calculateTotalWidth = (columns: IAdjustedHeader[]): number => {\n  return columns.reduce((acc, col) => acc + (col.width || 0), 0);\n};\n\n// ==================== Reducer ====================\nconst headerReducer = (state: HeaderState, action: HeaderAction): HeaderState => {\n  switch (action.type) {\n    case 'INITIALIZE': {\n      const { columns, freezeLeft, freezeRight } = action.payload;\n      return { ...state, columns, freezeLeftColumns: freezeLeft, freezeRightColumns: freezeRight };\n    }\n\n    case 'UPDATE_COLUMN': {\n      const { key, update } = action.payload;\n      return {\n        ...state,\n        columns: state.columns.map((col) => (col.key === key ? { ...col, ...update } : col)),\n      };\n    }\n\n    case 'UPDATE_CHILD_COLUMN': {\n      const { parentKey, childKey, update } = action.payload;\n      return {\n        ...state,\n        columns: state.columns.map((col) => {\n          if (col.key !== parentKey) return col;\n          return updateChildDeep(col, childKey, update);\n        }),\n      };\n    }\n\n    case 'UPDATE_FREEZE_COLUMN': {\n      const { key, freezeType, update } = action.payload;\n      if (freezeType === 'left') {\n        return {\n          ...state,\n          freezeLeftColumns: state.freezeLeftColumns.map((col) => (col.key === key ? { ...col, ...update } : col)),\n        };\n      }\n      return {\n        ...state,\n        freezeRightColumns: state.freezeRightColumns.map((col) => (col.key === key ? { ...col, ...update } : col)),\n      };\n    }\n\n    case 'UPDATE_FREEZE_CHILD_COLUMN': {\n      const { parentKey, childKey, freezeType, update } = action.payload;\n      const updateFn = (cols: IAdjustedHeader[]) =>\n        cols.map((col) => {\n          if (col.key !== parentKey) return col;\n          return updateChildDeep(col, childKey, update);\n        });\n\n      if (freezeType === 'left') {\n        return {\n          ...state,\n          freezeLeftColumns: updateFn(state.freezeLeftColumns),\n        };\n      }\n      return {\n        ...state,\n        freezeRightColumns: updateFn(state.freezeRightColumns),\n      };\n    }\n\n    case 'TOGGLE_FILTER_VISIBILITY':\n      return {\n        ...state,\n        isFilterVisible: !state.isFilterVisible,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// ==================== Context ====================\nconst HeaderCtx = createContext<IHeaderContext | null>(null);\n\nexport const useColumns = () => useContextSelector(HeaderCtx, (ctx) => ctx?.columns ?? []);\nexport const useFlattenColumns = () => useContextSelector(HeaderCtx, (ctx) => ctx?.flattenColumns ?? []);\nexport const useFreezeLeftColumns = () => useContextSelector(HeaderCtx, (ctx) => ctx?.freezeLeftColumns ?? []);\nexport const useFreezeRightColumns = () => useContextSelector(HeaderCtx, (ctx) => ctx?.freezeRightColumns ?? []);\nexport const useFreezeLeftColumnsWidth = () => useContextSelector(HeaderCtx, (ctx) => ctx?.freezeLeftColumnsWidth ?? 0);\nexport const useFreezeRightColumnsWidth = () =>\n  useContextSelector(HeaderCtx, (ctx) => ctx?.freezeRightColumnsWidth ?? 0);\nexport const useGetDepth = () => useContextSelector(HeaderCtx, (ctx) => ctx?.getDepth)!;\nexport const useGetLeaves = () => useContextSelector(HeaderCtx, (ctx) => ctx?.getLeaves)!;\nexport const useIsFilterVisible = () => useContextSelector(HeaderCtx, (ctx) => ctx?.isFilterVisible)!;\nexport const useToggleColumnVisibility = () => useContextSelector(HeaderCtx, (ctx) => ctx?.toggleColumnVisibility)!;\nexport const useToggleFilterVisibility = () => useContextSelector(HeaderCtx, (ctx) => ctx?.toggleFilterVisibility)!;\nexport const useUpdateColumn = () => useContextSelector(HeaderCtx, (ctx) => ctx?.updateColumn)!;\nexport const useUpdateFreezeColumn = () => useContextSelector(HeaderCtx, (ctx) => ctx?.updateFreezeColumn)!;\nexport const useUpdateChildColumn = () => useContextSelector(HeaderCtx, (ctx) => ctx?.updateChildColumn)!;\nexport const useUpdateFreezeChildColumn = () => useContextSelector(HeaderCtx, (ctx) => ctx?.updateFreezeChildColumn)!;\n\n// ==================== Provider ====================\nexport const HeaderContextProvider = ({ initialColumns, children }: IHeaderContextProvider): React.ReactElement => {\n  const [state, dispatch] = useReducer(headerReducer, {\n    columns: [],\n    freezeLeftColumns: [],\n    freezeRightColumns: [],\n    isFilterVisible: true,\n  });\n\n  // Initialize columns when initialColumns change\n  useEffect(() => {\n    if (!initialColumns.length) return;\n\n    const processedColumns = normalizeColumnsRecursive(initialColumns);\n    const virtualized = processedColumns.filter((col) => !col.freeze);\n    const freezeLeft = processedColumns.filter((col) => col.freeze === 'left');\n    const freezeRight = processedColumns.filter((col) => col.freeze === 'right');\n\n    dispatch({\n      type: 'INITIALIZE',\n      payload: { columns: virtualized, freezeLeft, freezeRight },\n    });\n  }, [initialColumns]);\n\n  // Memoized flatten columns\n  const flattenColumns = useMemo(() => flattenHeaderLeaves(state.columns), [state.columns]);\n\n  // Memoized freeze widths\n  const freezeLeftColumnsWidth = useMemo(() => calculateTotalWidth(state.freezeLeftColumns), [state.freezeLeftColumns]);\n\n  const freezeRightColumnsWidth = useMemo(\n    () => calculateTotalWidth(state.freezeRightColumns),\n    [state.freezeRightColumns],\n  );\n\n  // Memoized utility functions (static)\n  const getLeaves = useCallback(getLeavesOfNode, []);\n  const getDepth = useCallback(getDepthOfNode, []);\n\n  // Memoized action dispatchers\n  const updateColumn = useCallback((key: string, update: Partial<IAdjustedHeader>) => {\n    dispatch({ type: 'UPDATE_COLUMN', payload: { key, update } });\n  }, []);\n\n  const updateChildColumn = useCallback((parentKey: string, childKey: string, update: Partial<IAdjustedHeader>) => {\n    dispatch({ type: 'UPDATE_CHILD_COLUMN', payload: { parentKey, childKey, update } });\n  }, []);\n\n  const updateFreezeColumn = useCallback(\n    (key: string, freezeType: 'left' | 'right', update: Partial<IAdjustedHeader>) => {\n      dispatch({ type: 'UPDATE_FREEZE_COLUMN', payload: { key, freezeType, update } });\n    },\n    [],\n  );\n\n  const updateFreezeChildColumn = useCallback(\n    (parentKey: string, childKey: string, freezeType: 'left' | 'right', update: Partial<IAdjustedHeader>) => {\n      dispatch({\n        type: 'UPDATE_FREEZE_CHILD_COLUMN',\n        payload: { parentKey, childKey, freezeType, update },\n      });\n    },\n    [],\n  );\n\n  const toggleColumnVisibility = useCallback(\n    (key: string) => {\n      const column = state.columns.find((col) => col.key === key);\n      if (column) {\n        updateColumn(key, { visible: !column.visible });\n      }\n    },\n    [state.columns, updateColumn],\n  );\n\n  const toggleFilterVisibility = useCallback(() => {\n    dispatch({ type: 'TOGGLE_FILTER_VISIBILITY' });\n  }, []);\n\n  // Memoized context value\n  const contextValue = useMemo<IHeaderContext>(\n    () => ({\n      columns: state.columns,\n      flattenColumns,\n      freezeLeftColumns: state.freezeLeftColumns,\n      freezeRightColumns: state.freezeRightColumns,\n      freezeLeftColumnsWidth,\n      freezeRightColumnsWidth,\n      isFilterVisible: state.isFilterVisible,\n      getLeaves,\n      getDepth,\n      updateColumn,\n      updateChildColumn,\n      updateFreezeChildColumn,\n      updateFreezeColumn,\n      toggleColumnVisibility,\n      toggleFilterVisibility,\n    }),\n    [\n      state.columns,\n      state.freezeLeftColumns,\n      state.freezeRightColumns,\n      state.isFilterVisible,\n      flattenColumns,\n      freezeLeftColumnsWidth,\n      freezeRightColumnsWidth,\n      getLeaves,\n      getDepth,\n      updateColumn,\n      updateChildColumn,\n      updateFreezeChildColumn,\n      updateFreezeColumn,\n      toggleColumnVisibility,\n      toggleFilterVisibility,\n    ],\n  );\n\n  return <HeaderCtx.Provider value={contextValue}>{children}</HeaderCtx.Provider>;\n};\n","import { useEffect, useState, useCallback } from 'react';\n\ntype FlattenedItem<T> = {\n  type: 'row' | 'expanded';\n  item: T;\n  key: string;\n};\n\nexport default function useFlattenedDataIncremental<T>(\n  data: T[] | undefined,\n  rowKey: keyof T | ((data: T, index: number) => string)\n) {\n  const [expandedRows, setExpandedRows] = useState<Set<string>>(new Set());\n  const [flattenedData, setFlattenedData] = useState<FlattenedItem<T>[]>([]);\n\n  const getRowKey = useCallback(\n    (item: T, index: number) => (typeof rowKey === 'function' ? rowKey(item, index) : String(item[rowKey])),\n    [rowKey]\n  );\n\n  useEffect(() => {\n    if (!data) {\n      setFlattenedData([]);\n      return;\n    }\n\n    const initial: FlattenedItem<T>[] = [];\n    data.forEach((item, idx) => {\n      const key = getRowKey(item, idx);\n      initial.push({ type: 'row', item, key });\n      if (expandedRows.has(key)) {\n        initial.push({ type: 'expanded', item, key });\n      }\n    });\n\n    setFlattenedData(initial);\n    setExpandedRows(new Set(expandedRows));\n  }, [data, getRowKey]);\n\n  const toggleExpand = useCallback((rowKey: string) => {\n    setFlattenedData((prev) => {\n      const rowIndexByKey = prev.findIndex((d) => d.type === 'row' && d.key === rowKey);\n      if (rowIndexByKey === -1) return prev;\n\n      const nextRow = prev[rowIndexByKey + 1];\n      const isExpanded = nextRow?.type === 'expanded';\n\n      // Collapse:\n      if (isExpanded) {\n        // Hapus baris expanded dari Set<string>\n        setExpandedRows((prevExpanded) => {\n          const next = new Set(prevExpanded);\n          next.delete(rowKey);\n          return next;\n        });\n\n        // Hapus baris expanded dari FlattenedData\n        return [...prev.slice(0, rowIndexByKey + 1), ...prev.slice(rowIndexByKey + 2)];\n      } else {\n        // Expand\n        // Tambahkan baris expanded ke Set<string>\n        setExpandedRows((prevExpanded) => {\n          const next = new Set(prevExpanded);\n          next.add(rowKey);\n          return next;\n        });\n\n        // Sisipkan baris expanded ke FlattenedData\n        return [\n          ...prev.slice(0, rowIndexByKey + 1),\n          { type: 'expanded', item: prev[rowIndexByKey].item, key: rowKey },\n          ...prev.slice(rowIndexByKey + 1),\n        ];\n      }\n    });\n  }, []);\n\n  return {\n    flattenedData,\n    toggleExpand,\n    expandedKeys: expandedRows,\n  };\n}\n","import type { Virtualizer } from '@tanstack/react-virtual';\nimport { useEffect } from 'react';\nimport { DEFAULT_SIZE, type IHeader } from '../lib';\n\ninterface IAutoStretchColumn {\n  containerWidth: number;\n  columns: IHeader<unknown>[];\n  columnVirtualizer: Virtualizer<HTMLDivElement, Element> | null;\n}\n\nexport function useAutoStretchColumn(props: IAutoStretchColumn) {\n  const { containerWidth, columns, columnVirtualizer } = props;\n\n  useEffect(() => {\n    if (containerWidth === 0 || !columnVirtualizer) return;\n\n    // Get all visible columns that can be stretched\n    const visibleColumns = columns.filter((column) => column.visible && !column.noStretch);\n\n    // Calculate total width of all columns\n    const totalWidth = visibleColumns.reduce((sum, column) => {\n      // For nested columns, include all child widths\n      if (column.children?.length) {\n        return (\n          sum + column.children.reduce((childSum, child) => childSum + (child.width || DEFAULT_SIZE.COLUMN_WIDTH), 0)\n        );\n      }\n      return sum + (column.width || DEFAULT_SIZE.COLUMN_WIDTH);\n    }, 0);\n\n    // Calculate width of columns that can't be stretched\n    const totalNoStretchWidth = columns.reduce((sum, column) => {\n      if (column.noStretch) {\n        if (column.children?.length) {\n          return (\n            sum + column.children.reduce((childSum, child) => childSum + (child.width || DEFAULT_SIZE.COLUMN_WIDTH), 0)\n          );\n        }\n        return sum + (column.width! || DEFAULT_SIZE.COLUMN_WIDTH);\n      }\n      return sum;\n    }, 0);\n\n    // Only stretch if total width is less than container width\n    if (totalWidth < containerWidth - totalNoStretchWidth) {\n      const scale = (containerWidth - totalNoStretchWidth) / totalWidth;\n\n      visibleColumns.forEach((column) => {\n        const columnIndex = columns.indexOf(column);\n        const newWidth = column.width! * scale;\n\n        // Ensure minimum width\n        const finalWidth = Math.max(50, newWidth);\n        columnVirtualizer.resizeItem(columnIndex, finalWidth);\n\n        // If column has children, maintain proportional widths\n        if (column.children?.length) {\n          const childScale = finalWidth / column.width!;\n          column.children.forEach((child) => {\n            child.width = child.width! * childScale;\n          });\n        }\n      });\n    }\n  }, [columns, containerWidth, columnVirtualizer]);\n}\n","import { createContext, useContextSelector } from 'use-context-selector';\nimport { useMemo } from 'react';\nimport type { TFilterAdvanceConfig, TSortOrder } from '../lib';\nimport { useFilterAdvance, useFilterSearch, useFilterSelection, useFilterSort } from '../hooks';\n\n// ==================== Types ====================\ntype IFilterContext = {\n  tableKey?: string;\n  filteredData: unknown[];\n  isResetFilter?: boolean;\n  sort: {\n    sortKey: string | null;\n    sortBy: TSortOrder;\n    onChangeSort: (columnKey: string) => void;\n    onChangeSpecificSort: (columnKey: string, sortBy: TSortOrder) => void;\n  };\n  search: {\n    activeSearch: Record<string, string>;\n    updateSearch: (columnkey: string, value: string) => void;\n    resetSearch: (columnKey: string) => void;\n  };\n  selection: {\n    updateFilter: (key: keyof unknown, value: string[]) => void;\n    resetFilter: (key: keyof unknown) => void;\n  };\n  advance: {\n    updateAdvanceFilter: (key: keyof unknown, config: TFilterAdvanceConfig, value: string) => void;\n    resetAdvanceFilter: (key: keyof unknown) => void;\n  };\n};\n\ntype IFilterContextProvider<T> = {\n  children: React.ReactNode;\n  useSessionFilter?: { tableKey: string };\n  dataSource: T[];\n  isResetFilter?: boolean;\n  useServerFilter?: {\n    sort?: boolean;\n    search?: boolean;\n    selection?: boolean;\n    advance?: boolean;\n  };\n  onChangeFilter?: {\n    sort?: (key: keyof T, sortBy: TSortOrder) => void;\n    search?: (data: Record<keyof T, string>) => void;\n    selection?: (data: Record<keyof T, string[]>) => void;\n    advance?: (data: Record<keyof T, { config_name: TFilterAdvanceConfig; value: string }>) => void;\n  };\n};\n\n// ==================== Context ====================\nconst FilterCtx = createContext<IFilterContext | null>(null);\n\n// ==================== Hooks ====================\nexport const useFilteredData = () => useContextSelector(FilterCtx, (ctx) => ctx?.filteredData ?? []);\n\nexport const useTableKey = () => useContextSelector(FilterCtx, (ctx) => ctx?.tableKey);\n\nexport const useIsResetFilter = () => useContextSelector(FilterCtx, (ctx) => ctx?.isResetFilter);\n\nexport const useSort = () => useContextSelector(FilterCtx, (ctx) => ctx?.sort)!;\n\nexport const useSortKey = () => useContextSelector(FilterCtx, (ctx) => ctx?.sort.sortKey ?? null);\n\nexport const useSortBy = () => useContextSelector(FilterCtx, (ctx) => ctx?.sort.sortBy)!;\n\nexport const useOnChangeSort = () => useContextSelector(FilterCtx, (ctx) => ctx?.sort.onChangeSort)!;\n\nexport const useOnChangeSpecificSort = () => useContextSelector(FilterCtx, (ctx) => ctx?.sort.onChangeSpecificSort)!;\n\nexport const useSearch = () => useContextSelector(FilterCtx, (ctx) => ctx?.search)!;\n\nexport const useActiveSearch = () => useContextSelector(FilterCtx, (ctx) => ctx?.search.activeSearch ?? {});\n\nexport const useUpdateSearch = () => useContextSelector(FilterCtx, (ctx) => ctx?.search.updateSearch)!;\n\nexport const useResetSearch = () => useContextSelector(FilterCtx, (ctx) => ctx?.search.resetSearch)!;\n\nexport const useSelection = () => useContextSelector(FilterCtx, (ctx) => ctx?.selection)!;\n\nexport const useUpdateFilter = () => useContextSelector(FilterCtx, (ctx) => ctx?.selection.updateFilter)!;\n\nexport const useResetFilter = () => useContextSelector(FilterCtx, (ctx) => ctx?.selection.resetFilter)!;\n\nexport const useAdvance = () => useContextSelector(FilterCtx, (ctx) => ctx?.advance)!;\n\nexport const useUpdateAdvanceFilter = () => useContextSelector(FilterCtx, (ctx) => ctx?.advance.updateAdvanceFilter)!;\n\nexport const useResetAdvanceFilter = () => useContextSelector(FilterCtx, (ctx) => ctx?.advance.resetAdvanceFilter)!;\n\n// ==================== Provider ====================\nexport const FilterContextProvider = <T,>(props: IFilterContextProvider<T>): React.ReactElement => {\n  const { children, dataSource, isResetFilter, useServerFilter, onChangeFilter, useSessionFilter } = props;\n\n  const { sortKey, sortBy, handleSort, sortedData, handleSpecificSort } = useFilterSort({\n    data: dataSource || [],\n    isResetFilter,\n    useServerSort: useServerFilter?.sort,\n    onChangeSort: onChangeFilter?.sort as (key: string, sortBy: TSortOrder) => void,\n  });\n\n  const { searchedData, activeSearch, updateSearch, resetSearch } = useFilterSearch({\n    data: sortedData || [],\n    isResetFilter,\n    useSessionFilter,\n    useServerSearch: useServerFilter?.search,\n    onChangeSearch: onChangeFilter?.search,\n  });\n\n  const { filteredData, updateFilter, resetFilter } = useFilterSelection({\n    data: searchedData || [],\n    isResetFilter,\n    useSessionFilter,\n    useServerFilter: useServerFilter?.selection,\n    onChangeFilter: onChangeFilter?.selection,\n  });\n\n  const { filteredAdvanceData, updateAdvanceFilter, resetAdvanceFilter } = useFilterAdvance({\n    data: filteredData || [],\n    isResetFilter,\n    useSessionFilter,\n    useServerAdvanceFilter: useServerFilter?.advance,\n    onChangeAdvanceFilter: onChangeFilter?.advance,\n  });\n\n  // Memoize sort object\n  const sortValue = useMemo(\n    () => ({\n      sortBy,\n      sortKey,\n      onChangeSort: handleSort,\n      onChangeSpecificSort: handleSpecificSort,\n    }),\n    [sortBy, sortKey, handleSort, handleSpecificSort],\n  );\n\n  // Memoize search object\n  const searchValue = useMemo(\n    () => ({\n      activeSearch,\n      updateSearch,\n      resetSearch,\n    }),\n    [activeSearch, updateSearch, resetSearch],\n  );\n\n  // Memoize selection object\n  const selectionValue = useMemo(\n    () => ({\n      updateFilter,\n      resetFilter,\n    }),\n    [updateFilter, resetFilter],\n  );\n\n  // Memoize advance object\n  const advanceValue = useMemo(\n    () => ({\n      updateAdvanceFilter,\n      resetAdvanceFilter,\n    }),\n    [updateAdvanceFilter, resetAdvanceFilter],\n  );\n\n  // Memoize context value\n  const contextValue = useMemo<IFilterContext>(\n    () => ({\n      tableKey: useSessionFilter?.tableKey,\n      isResetFilter,\n      filteredData: filteredAdvanceData,\n      sort: sortValue,\n      search: searchValue,\n      selection: selectionValue,\n      advance: advanceValue,\n    }),\n    [\n      useSessionFilter?.tableKey,\n      isResetFilter,\n      filteredAdvanceData,\n      sortValue,\n      searchValue,\n      selectionValue,\n      advanceValue,\n    ],\n  );\n\n  return <FilterCtx.Provider value={contextValue}>{children}</FilterCtx.Provider>;\n};\n","import { useVirtualizer, Virtualizer, type VirtualItem } from '@tanstack/react-virtual';\nimport { createContext, useContextSelector } from 'use-context-selector';\nimport { useEffect, useState, useMemo, useCallback } from 'react';\nimport useFlattenedDataIncremental from '../hooks/use-flattened-data-incremental';\nimport { useAutoStretchColumn } from '../hooks/use-auto-stretch-column';\nimport { DEFAULT_SIZE } from '../lib';\nimport { useColumns } from './header-context';\nimport { useFilteredData } from './filter-context';\n\n// ==================== Constants ====================\nconst EMPTY_VIRTUAL_ITEMS: VirtualItem[] = [];\n\n// ==================== Types ====================\ntype IVirtualizerContext = {\n  flattenedData: { type: 'row' | 'expanded'; item: unknown; key: string }[];\n  rowVirtualizer: Virtualizer<HTMLDivElement, Element> | null;\n  columnVirtualizer: Virtualizer<HTMLDivElement, Element> | null;\n  rowVirtualItems: VirtualItem[];\n  columnVirtualItems: VirtualItem[];\n  expandedRows: Set<string>;\n  containerWidth: number;\n  containerHeight: number;\n  toggleExpandRow: (key: string) => void;\n  enableColumnVirtualization: boolean;\n  useDynamicRowHeight: boolean;\n};\n\ntype IVirtualizerContextProvider<T> = {\n  children: React.ReactNode;\n  rowKey: keyof T | ((data: T, index: number) => string);\n  scrollElementRef: React.RefObject<HTMLDivElement | null>;\n  enableColumnVirtualization?: boolean;\n  useDynamicRowHeight?: boolean;\n};\n\n// ==================== Context ====================\nconst VirtualizerCtx = createContext<IVirtualizerContext | null>(null);\n\n// ==================== Hooks ====================\nexport const useFlattenedData = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.flattenedData ?? []);\n\nexport const useRowVirtualizer = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.rowVirtualizer ?? null);\n\nexport const useColumnVirtualizer = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.columnVirtualizer ?? null);\n\nexport const useRowVirtualItems = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.rowVirtualItems ?? []);\n\nexport const useColumnVirtualItems = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.columnVirtualItems ?? []);\n\nexport const useExpandedRows = () =>\n  useContextSelector(VirtualizerCtx, (ctx) => ctx?.expandedRows ?? new Set<string>());\n\nexport const useContainerWidth = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.containerWidth ?? 0);\n\nexport const useContainerHeight = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.containerHeight ?? 0);\n\nexport const useToggleExpandRow = () => useContextSelector(VirtualizerCtx, (ctx) => ctx?.toggleExpandRow)!;\n\nexport const useEnableColumnVirtualization = () =>\n  useContextSelector(VirtualizerCtx, (ctx) => ctx?.enableColumnVirtualization ?? false);\n\nexport const useUseDynamicRowHeight = () =>\n  useContextSelector(VirtualizerCtx, (ctx) => ctx?.useDynamicRowHeight ?? false);\n\n// ==================== Provider ====================\nexport const VirtualizerContextProvider = <T,>(props: IVirtualizerContextProvider<T>): React.ReactElement => {\n  const { children, scrollElementRef, rowKey, enableColumnVirtualization = true, useDynamicRowHeight = false } = props;\n\n  const [containerWidth, setContainerWidth] = useState<number>(0);\n  const [containerHeight, setContainerHeight] = useState<number>(0);\n\n  const columns = useColumns();\n  const filteredData = useFilteredData();\n\n  // ResizeObserver for container dimensions\n  useEffect(() => {\n    const observer = new ResizeObserver((entries) => {\n      const { width, height } = entries[0].contentRect;\n      setContainerWidth(width);\n      setContainerHeight(height);\n    });\n\n    if (scrollElementRef.current) {\n      observer.observe(scrollElementRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [scrollElementRef]);\n\n  // Flattened data with expand/collapse logic\n  const { flattenedData, toggleExpand, expandedKeys } = useFlattenedDataIncremental(filteredData as T[], rowKey);\n\n  // Column virtualizer - memoized count\n  const columnCount = useMemo(\n    () => (enableColumnVirtualization ? columns.length : 0),\n    [enableColumnVirtualization, columns.length],\n  );\n\n  const columnVirtualizer = useVirtualizer({\n    horizontal: true,\n    count: columnCount,\n    getScrollElement: () => scrollElementRef.current,\n    estimateSize: (index) => columns[index]?.width || DEFAULT_SIZE.COLUMN_WIDTH,\n    overscan: 5,\n  });\n\n  // Row virtualizer\n  const rowVirtualizer = useVirtualizer({\n    count: flattenedData.length,\n    getScrollElement: () => scrollElementRef.current,\n    estimateSize: () => DEFAULT_SIZE.ROW_HEIGHT,\n    overscan: 20,\n  });\n\n  // Auto stretch column hook\n  useAutoStretchColumn({\n    containerWidth,\n    columns,\n    columnVirtualizer: enableColumnVirtualization ? columnVirtualizer : null,\n  });\n\n  // Virtual items\n  const rowVirtualItems = rowVirtualizer.getVirtualItems();\n  const columnVirtualItems = enableColumnVirtualization ? columnVirtualizer.getVirtualItems() : EMPTY_VIRTUAL_ITEMS;\n\n  // Memoized toggle expand callback\n  const toggleExpandRow = useCallback(\n    (key: string) => {\n      toggleExpand(key);\n    },\n    [toggleExpand],\n  );\n\n  // Memoized context value\n  const contextValue = useMemo<IVirtualizerContext>(\n    () => ({\n      flattenedData,\n      rowVirtualizer,\n      columnVirtualizer,\n      containerWidth,\n      containerHeight,\n      rowVirtualItems,\n      columnVirtualItems,\n      toggleExpandRow,\n      expandedRows: expandedKeys,\n      enableColumnVirtualization,\n      useDynamicRowHeight,\n    }),\n    [\n      flattenedData,\n      rowVirtualizer,\n      columnVirtualizer,\n      containerWidth,\n      containerHeight,\n      rowVirtualItems,\n      columnVirtualItems,\n      toggleExpandRow,\n      expandedKeys,\n      enableColumnVirtualization,\n      useDynamicRowHeight,\n    ],\n  );\n\n  return <VirtualizerCtx.Provider value={contextValue}>{children}</VirtualizerCtx.Provider>;\n};\n","import { useMemo, type ReactNode } from 'react';\nimport { createContext, useContextSelector } from 'use-context-selector';\nimport { DEFAULT_SIZE } from '../lib';\nimport {\n  useColumns,\n  useFreezeLeftColumns,\n  useFreezeLeftColumnsWidth,\n  useFreezeRightColumns,\n  useFreezeRightColumnsWidth,\n  useGetDepth,\n} from './header-context';\nimport { useColumnVirtualizer, useEnableColumnVirtualization } from './virtualizer-context';\n\n// ==================== Types ====================\nexport type IUIContext = {\n  freezeColLeftPositions: number[];\n  freezeColRightPositions: number[];\n  calcTotalTableWidth: number;\n  useFooter: boolean;\n  filterHeight: number;\n  headerMode: 'single' | 'double';\n  expandedContent: (rowData: unknown) => ReactNode;\n  calcHeaderTotalHeight: number;\n  classNameCell?: (data: unknown, rowIndex: number, columnIndex: number) => string;\n};\n\ntype IUIContextProviderProps<TData = unknown> = {\n  children: ReactNode;\n  filterHeight: number;\n  useFooter: boolean;\n  expandedContent?: (rowData: unknown) => ReactNode;\n  headerMode: 'single' | 'double';\n  headerHeight: number;\n  isFilterVisible?: boolean;\n  classNameCell?: (data: TData, rowIndex: number, columnIndex: number) => string;\n};\n\n// ==================== Context ====================\nconst UICtx = createContext<IUIContext | null>(null);\n\n// ==================== Hooks ====================\nexport const useFreezeColLeftPositions = () => useContextSelector(UICtx, (ctx) => ctx?.freezeColLeftPositions ?? []);\n\nexport const useFreezeColRightPositions = () => useContextSelector(UICtx, (ctx) => ctx?.freezeColRightPositions ?? []);\n\nexport const useCalcTotalTableWidth = () => useContextSelector(UICtx, (ctx) => ctx?.calcTotalTableWidth ?? 0);\n\nexport const useUseFooter = () => useContextSelector(UICtx, (ctx) => ctx?.useFooter ?? false);\n\nexport const useFilterHeight = () =>\n  useContextSelector(UICtx, (ctx) => ctx?.filterHeight ?? DEFAULT_SIZE.FILTER_HEIGHT);\n\nexport const useHeaderMode = () => useContextSelector(UICtx, (ctx) => ctx?.headerMode ?? 'double');\n\nexport const useExpandedContent = () => useContextSelector(UICtx, (ctx) => ctx?.expandedContent ?? (() => null));\n\nexport const useCalcHeaderTotalHeight = () => useContextSelector(UICtx, (ctx) => ctx?.calcHeaderTotalHeight ?? 0);\n\nexport const useClassNameCell = () => useContextSelector(UICtx, (ctx) => ctx?.classNameCell);\n\n// ==================== Provider ====================\nexport const UIContextProvider = <TData = unknown,>(props: IUIContextProviderProps<TData>): React.ReactElement => {\n  const {\n    children,\n    filterHeight,\n    expandedContent,\n    useFooter = false,\n    headerMode,\n    headerHeight,\n    isFilterVisible = true,\n    classNameCell,\n  } = props;\n\n  const columns = useColumns();\n  const freezeLeftColumns = useFreezeLeftColumns();\n  const freezeRightColumns = useFreezeRightColumns();\n  const freezeLeftColumnsWidth = useFreezeLeftColumnsWidth();\n  const freezeRightColumnsWidth = useFreezeRightColumnsWidth();\n  const getDepth = useGetDepth();\n\n  const columnVirtualizer = useColumnVirtualizer();\n  const enableColumnVirtualization = useEnableColumnVirtualization();\n\n  // Calculate virtualized columns width\n  const virtualizedColumnsWidth = useMemo(() => {\n    if (enableColumnVirtualization && columnVirtualizer) {\n      return columnVirtualizer.getTotalSize();\n    }\n\n    // For non-virtualized mode, calculate manually from columns\n    return columns.reduce((sum, col) => sum + (col.width || 0), 0);\n  }, [enableColumnVirtualization, columnVirtualizer, columns]);\n\n  // Note: Hitung posisi left absolute dari kolom yang freeze di kiri.\n  const freezeColLeftPositions = useMemo<number[]>(() => {\n    return freezeLeftColumns.reduce<number[]>((acc, _column, idx) => {\n      const left = idx === 0 ? 0 : acc[idx - 1] + (freezeLeftColumns[idx - 1].width || 0);\n      return [...acc, left];\n    }, []);\n  }, [freezeLeftColumns]);\n\n  // Note: Hitung posisi right absolute dari kolom yang freeze di kanan.\n  const freezeColRightPositions = useMemo<number[]>(() => {\n    return freezeRightColumns.reduce<number[]>((acc, _column, idx) => {\n      const right = idx === 0 ? 0 : acc[idx - 1] + (freezeRightColumns[idx - 1].width || 0);\n      return [...acc, right];\n    }, []);\n  }, [freezeRightColumns]);\n\n  // Note: Hitung total lebar dari semua jenis kolom.\n  const calcTotalTableWidth = useMemo(() => {\n    return virtualizedColumnsWidth + freezeLeftColumnsWidth + freezeRightColumnsWidth;\n  }, [virtualizedColumnsWidth, freezeLeftColumnsWidth, freezeRightColumnsWidth]);\n\n  type HeaderNode = (typeof columns)[number];\n\n  // Hitung total tinggi header berdasarkan mode, filter, dan depth\n  const calcHeaderTotalHeight = useMemo(() => {\n    // Hitung kedalaman maksimum dari semua kolom top-level\n    const maxDepthTopLevel = Math.max(\n      0,\n      ...columns.map((c) => getDepth(c as HeaderNode)),\n      ...freezeLeftColumns.map((c) => getDepth(c as HeaderNode)),\n      ...freezeRightColumns.map((c) => getDepth(c as HeaderNode)),\n    );\n\n    // Hitung tinggi header berdasarkan mode dan filter\n    const calcFilterHeight = isFilterVisible ? filterHeight : 0;\n    const baseHeaderHeight = headerMode === 'single' ? headerHeight : headerHeight + calcFilterHeight;\n\n    // Total tinggi termasuk group headers\n    return baseHeaderHeight + DEFAULT_SIZE.GROUP_HEADER_HEIGHT * maxDepthTopLevel;\n  }, [\n    headerMode,\n    headerHeight,\n    filterHeight,\n    isFilterVisible,\n    columns,\n    freezeLeftColumns,\n    freezeRightColumns,\n    getDepth,\n  ]);\n\n  // Memoize expandedContent function\n  const memoizedExpandedContent = useMemo(() => expandedContent || (() => null), [expandedContent]);\n\n  // Memoize classNameCell function\n  const memoizedClassNameCell = useMemo(\n    () => classNameCell as ((data: unknown, rowIndex: number, columnIndex: number) => string) | undefined,\n    [classNameCell],\n  );\n\n  // Memoize context value\n  const contextValue = useMemo<IUIContext>(\n    () => ({\n      freezeColLeftPositions,\n      freezeColRightPositions,\n      calcTotalTableWidth,\n      useFooter,\n      filterHeight,\n      headerMode,\n      calcHeaderTotalHeight,\n      expandedContent: memoizedExpandedContent,\n      classNameCell: memoizedClassNameCell,\n    }),\n    [\n      freezeColLeftPositions,\n      freezeColRightPositions,\n      calcTotalTableWidth,\n      useFooter,\n      filterHeight,\n      headerMode,\n      calcHeaderTotalHeight,\n      memoizedExpandedContent,\n      memoizedClassNameCell,\n    ],\n  );\n\n  return <UICtx.Provider value={contextValue}>{children}</UICtx.Provider>;\n};\n","import { useCalcHeaderTotalHeight } from '../context/ui-context';\nimport { useContainerHeight, useRowVirtualItems } from '../context/virtualizer-context';\n\nfunction EmptyDataIndicator() {\n  const rowVirtualItems = useRowVirtualItems();\n  const containerHeight = useContainerHeight();\n  const calcHeaderTotalHeight = useCalcHeaderTotalHeight();\n\n  if (rowVirtualItems.length) return;\n\n  return (\n    <div className='sticky left-0' style={{ height: containerHeight }}>\n      <div\n        className='size-full relative flex justify-center items-center'\n        style={{ paddingTop: calcHeaderTotalHeight }}\n      >\n        <p className='text-lg font-medium text-gray-400'>Tidak ada data yang tersedia</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EmptyDataIndicator;\n","import clsx from 'clsx';\n\nfunction LoadingIndicator() {\n  return (\n    <div className=\"z-[99999] absolute inset-0 bg-black/10 backdrop-blur-sm flex justify-center items-center\">\n      <div\n        className={clsx(\n          'border-[.625rem] !border-t-blue-950 border-gray-100',\n          'border-solid rounded-full animate-spin size-[4.375rem]'\n        )}\n      />\n    </div>\n  );\n}\n\nexport default LoadingIndicator;\n","import clsx from 'clsx';\nimport type { IIconProps } from '../lib';\n\nexport default function IcClose({ className, ...props }: IIconProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={clsx('w-6 h-6', className)} {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"m7.05 5.636l4.95 4.95l4.95-4.95l1.414 1.414l-4.95 4.95l4.95 4.95l-1.415 1.414l-4.95-4.95l-4.949 4.95l-1.414-1.414l4.95-4.95l-4.95-4.95z\"\n      ></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport { forwardRef, useCallback, useEffect, useRef, useState } from 'react';\nimport IcClose from '../icons/ic-close';\n\ninterface ITableVirtualInput extends React.InputHTMLAttributes<HTMLInputElement> {\n  onClickEnter?: () => void;\n  onRemoveSearch?: () => void;\n  onDebouncedChange?: (value: string) => void;\n  debounceDelay?: number;\n}\n\nconst InputSearch = forwardRef<HTMLInputElement, ITableVirtualInput>(\n  (\n    { onClickEnter, className, onRemoveSearch, value, onChange, onDebouncedChange, debounceDelay = 300, ...props },\n    ref,\n  ) => {\n    const [inputValue, setInputValue] = useState<string>('');\n    const timeoutRef = useRef<number | undefined>(undefined);\n\n    // Handle input change with debouncing\n    const handleInputChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.target.value;\n        setInputValue(newValue);\n        onChange?.(e);\n\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n\n        if (onDebouncedChange) {\n          timeoutRef.current = setTimeout(() => {\n            onDebouncedChange(newValue);\n          }, debounceDelay);\n        }\n      },\n      [onChange, onDebouncedChange, debounceDelay],\n    );\n\n    useEffect(() => {\n      if (value !== undefined) {\n        setInputValue(String(value));\n      }\n    }, [value]);\n\n    useEffect(() => {\n      return () => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n      };\n    }, []);\n\n    return (\n      <div className='!w-full relative group/input'>\n        <input\n          ref={ref}\n          type='text'\n          placeholder=''\n          className={clsx(\n            'outline-none border bg-white dark:bg-black/50 border-gray-200 rounded h-[1.625rem] px-1.5 w-full text-xs focus:border-blue-950',\n            'transition-all duration-300 font-medium',\n            className,\n          )}\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyDown={(e) => e.key === 'Enter' && onClickEnter?.()}\n          {...props}\n        />\n\n        {!props.disabled && (\n          <IcClose\n            onClick={onRemoveSearch}\n            className={clsx(\n              '!w-4 absolute right-1 top-1/2 -translate-y-1/2 text-gray-600 cursor-pointer',\n              'opacity-0 group-hover/input:opacity-100 transition-opacity duration-200 hover:text-red-600',\n            )}\n          />\n        )}\n      </div>\n    );\n  },\n);\n\nInputSearch.displayName = 'InputSearch';\n\nexport default InputSearch;\n","export default function ResizeIndicator({ handleMouseDown }: { handleMouseDown: (e: React.MouseEvent) => void }) {\n  return (\n    <div\n      className=\"w-1 h-full absolute right-0 cursor-col-resize bg-transparent group-hover/outer:bg-blue-100\"\n      onMouseDown={handleMouseDown}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport { memo, type ReactNode } from 'react';\n\ninterface CheckboxProps extends React.ComponentPropsWithoutRef<'input'> {\n  checked: boolean;\n  onChecked?: (checked: boolean) => void;\n  label?: ReactNode | string;\n  classNameLabel?: string;\n}\n\nfunction Checkbox(props: CheckboxProps) {\n  const { checked, onChecked, label, classNameLabel, ...propRest } = props;\n\n  return (\n    <label className=\"flex cursor-pointer\">\n      <div className={clsx('size-4 relative shrink-0', label && 'mr-2')}>\n        <input\n          type=\"checkbox\"\n          className=\"w-4 h-4 cursor-pointer absolute opacity-0 z-[100]\"\n          checked={checked}\n          onChange={(e) => onChecked && onChecked(e.target.checked)}\n          {...propRest}\n        />\n        <div\n          className={clsx('size-4 flex justify-center items-center border border-gray-400 rounded-xs absolute', {\n            'bg-blue-950': checked,\n            'bg-white': !checked,\n          })}\n        >\n          {checked && <CheckedIcon />}\n        </div>\n      </div>\n\n      {typeof label === 'string' ? (\n        <span className={clsx('text-xs font-normal truncate', classNameLabel)}>{label}</span>\n      ) : (\n        label\n      )}\n    </label>\n  );\n}\n\nfunction CheckedIcon() {\n  return (\n    <svg width=\"12\" height=\"9\" viewBox=\"0 0 12 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.5 4L4.57407 7L10.5 1\" stroke=\"white\" strokeWidth=\"2\" />\n    </svg>\n  );\n}\n\nexport default memo(Checkbox);\n","interface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcCheck({ className, ...props }: SVGProps) {\n  return (\n    <svg\n      width=\"14\"\n      height=\"12\"\n      viewBox=\"0 0 14 12\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.62 0.715366C14.0533 1.05776 14.127 1.68662 13.7846 2.11996L6.67352 11.12C6.49823 11.3418 6.23722 11.4791 5.95509 11.4978C5.67297 11.5165 5.3961 11.4149 5.19304 11.2182L0.30415 6.48135C-0.0924933 6.09704 -0.102493 5.46395 0.281814 5.06731C0.666122 4.67066 1.29921 4.66067 1.69585 5.04497L5.63124 8.85797C5.71629 8.94038 5.85392 8.93125 5.92734 8.83833L12.2154 0.880042C12.5578 0.446701 13.1866 0.372972 13.62 0.715366Z\"\n        fill={'currentColor'}\n      />\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcChevron({ className, ...props }: SVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={clsx('size-6', className)} {...props}>\n      <path fill=\"currentColor\" d=\"m5.84 9.59l5.66 5.66l5.66-5.66l-.71-.7l-4.95 4.95l-4.95-4.95z\"></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcColumn({ className, ...props }: SVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={clsx('size-6', className)} {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M4.006 16.385v-8.77q0-.666.474-1.14T5.621 6h12.763q.667 0 1.141.475T20 7.615v8.77q0 .666-.475 1.14t-1.14.475H5.62q-.666 0-1.14-.475t-.475-1.14m1.61.615h3.382V7H5.616q-.231 0-.424.192T5 7.616v8.769q0 .23.192.423t.423.192m4.383 0h3.998V7H9.998zm4.998 0h3.383q.23 0 .423-.192t.192-.423v-8.77q0-.23-.192-.423T18.379 7h-3.383z\"\n      ></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcCopy({ className, ...props }: SVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={clsx('size-6', className)} {...props}>\n      <g fill=\"none\" stroke=\"currentColor\" strokeWidth={1.5}>\n        <path d=\"M6 11c0-2.828 0-4.243.879-5.121C7.757 5 9.172 5 12 5h3c2.828 0 4.243 0 5.121.879C21 6.757 21 8.172 21 11v5c0 2.828 0 4.243-.879 5.121C19.243 22 17.828 22 15 22h-3c-2.828 0-4.243 0-5.121-.879C6 20.243 6 18.828 6 16z\"></path>\n        <path d=\"M6 19a3 3 0 0 1-3-3v-6c0-3.771 0-5.657 1.172-6.828S7.229 2 11 2h4a3 3 0 0 1 3 3\" opacity={0.5}></path>\n      </g>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcDelete({ className, ...props }: SVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={clsx('size-5', className)} {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"m9.129 0l1.974.005c.778.094 1.46.46 2.022 1.078c.459.504.7 1.09.714 1.728h5.475a.69.69 0 0 1 .686.693a.69.69 0 0 1-.686.692l-1.836-.001v11.627c0 2.543-.949 4.178-3.041 4.178H5.419c-2.092 0-3.026-1.626-3.026-4.178V4.195H.686A.69.69 0 0 1 0 3.505c0-.383.307-.692.686-.692h5.47c.014-.514.205-1.035.554-1.55C7.23.495 8.042.074 9.129 0m6.977 4.195H3.764v11.627c0 1.888.52 2.794 1.655 2.794h9.018c1.139 0 1.67-.914 1.67-2.794zM6.716 6.34c.378 0 .685.31.685.692v8.05a.69.69 0 0 1-.686.692a.69.69 0 0 1-.685-.692v-8.05c0-.382.307-.692.685-.692m2.726 0c.38 0 .686.31.686.692v8.05a.69.69 0 0 1-.686.692a.69.69 0 0 1-.685-.692v-8.05c0-.382.307-.692.685-.692m2.728 0c.378 0 .685.31.685.692v8.05a.69.69 0 0 1-.685.692a.69.69 0 0 1-.686-.692v-8.05a.69.69 0 0 1 .686-.692M9.176 1.382c-.642.045-1.065.264-1.334.662c-.198.291-.297.543-.313.768l4.938-.001c-.014-.291-.129-.547-.352-.792c-.346-.38-.73-.586-1.093-.635z\"\n      ></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcDotsVertical({ className }: SVGProps) {\n  return (\n    <svg\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx('w-[1.125rem] h-[1.125rem]', className)}\n    >\n      <path\n        d=\"M7.875 4.125C7.875 3.50368 8.37868 3 9 3C9.62132 3 10.125 3.50368 10.125 4.125C10.125 4.74632 9.62132 5.25 9 5.25C8.37868 5.25 7.875 4.74632 7.875 4.125Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M7.875 9C7.875 8.37868 8.37868 7.875 9 7.875C9.62132 7.875 10.125 8.37868 10.125 9C10.125 9.62132 9.62132 10.125 9 10.125C8.37868 10.125 7.875 9.62132 7.875 9Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M7.875 13.875C7.875 13.2537 8.37868 12.75 9 12.75C9.62132 12.75 10.125 13.2537 10.125 13.875C10.125 14.4963 9.62132 15 9 15C8.37868 15 7.875 14.4963 7.875 13.875Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcFilterAdvance({ className, ...props }: SVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={clsx('size-6', className)} {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M6.532 4.75h6.936c.457 0 .854 0 1.165.03c.307.028.685.095.993.348c.397.326.621.814.624 1.322c.002.39-.172.726-.34.992c-.168.27-.411.59-.695.964l-.031.04l-.01.013l-2.555 3.369c-.252.332-.315.42-.359.51a1.2 1.2 0 0 0-.099.297c-.02.1-.023.212-.023.634v4.243c0 .208 0 .412-.014.578c-.015.164-.052.427-.224.663c-.21.287-.537.473-.9.495c-.302.019-.547-.103-.69-.183c-.144-.08-.309-.195-.476-.31l-.989-.683l-.048-.033c-.191-.131-.403-.276-.562-.477a1.7 1.7 0 0 1-.303-.585c-.071-.244-.07-.5-.07-.738v-2.97c0-.422-.004-.534-.023-.634a1.2 1.2 0 0 0-.1-.297c-.043-.09-.106-.178-.358-.51L4.825 8.459l-.01-.012l-.03-.04c-.284-.375-.527-.695-.696-.965c-.167-.266-.34-.602-.339-.992a1.72 1.72 0 0 1 .624-1.322c.308-.253.686-.32.993-.349c.311-.029.707-.029 1.165-.029m.397 4l1.647 2.17l.035.047c.201.264.361.475.478.715q.154.317.222.665c.051.261.05.527.05.864v2.968c0 .158.001.247.005.314l.006.062a.2.2 0 0 0 .036.073l.041.034c.05.04.12.088.248.176l.941.65V13.21c0-.337 0-.603.051-.864q.068-.347.222-.665c.117-.24.277-.45.478-.715l.035-.046l1.646-2.17zm7.28-1.5c.195-.26.334-.45.43-.604c.08-.126.104-.188.11-.207a.22.22 0 0 0-.057-.134a1 1 0 0 0-.2-.032c-.232-.022-.556-.023-1.06-.023H6.568c-.504 0-.828 0-1.06.023a1 1 0 0 0-.2.032a.22.22 0 0 0-.057.134c.006.019.03.081.11.207c.096.155.235.344.43.604zm1.541 3.25a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75m-1.5 2.5a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5H15a.75.75 0 0 1-.75-.75m-.5 2.5a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75m0 2.5a.75.75 0 0 1 .75-.75H17a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75\"\n      ></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcFilterMultiple({ className, ...props }: SVGProps) {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx('size-6', className)}\n      stroke=\"currentColor\"\n      {...props}\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n        d=\"M21.25 12H8.895m-4.361 0H2.75m18.5 6.607h-5.748m-4.361 0H2.75m18.5-13.214h-3.105m-4.361 0H2.75m13.214 2.18a2.18 2.18 0 1 0 0-4.36a2.18 2.18 0 0 0 0 4.36Zm-9.25 6.607a2.18 2.18 0 1 0 0-4.36a2.18 2.18 0 0 0 0 4.36Zm6.607 6.608a2.18 2.18 0 1 0 0-4.361a2.18 2.18 0 0 0 0 4.36Z\"\n      ></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcMenu({ className, ...props }: SVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={clsx('size-6', className)} {...props}>\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M3 6h18M3 12h18M3 18h18\"\n      ></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n\ninterface SVGProps extends React.SVGProps<SVGSVGElement> {\n  className?: string;\n}\n\nexport default function IcSearch({ className, ...props }: SVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" className={clsx('size-12', className)} {...props}>\n      <g fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\" strokeWidth={4}>\n        <path d=\"M21 38c9.389 0 17-7.611 17-17S30.389 4 21 4S4 11.611 4 21s7.611 17 17 17Z\"></path>\n        <path\n          strokeLinecap=\"round\"\n          d=\"M26.657 14.343A7.98 7.98 0 0 0 21 12a7.98 7.98 0 0 0-5.657 2.343m17.879 18.879l8.485 8.485\"\n        ></path>\n      </g>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport type { HTMLAttributes } from 'react';\nimport type { TSortOrder } from '../lib';\n\nexport interface IconSortProps extends HTMLAttributes<HTMLDivElement> {\n  sort?: TSortOrder;\n}\n\nexport default function IcSort({ sort = 'unset', className, ...props }: IconSortProps) {\n  return (\n    <div className={clsx('flex flex-col', className)} {...props}>\n      <SortUp sort={sort} />\n      <SortDown sort={sort} />\n    </div>\n  );\n}\n\nfunction SortDown({ sort }: IconSortProps) {\n  return (\n    <svg\n      className=\"-mt-1\"\n      stroke=\"currentColor\"\n      fill={sort === 'desc' ? '#333' : '#ccc'}\n      strokeWidth=\"0\"\n      version=\"1.2\"\n      baseProfile=\"tiny\"\n      viewBox=\"0 0 24 24\"\n      height=\"11\"\n      width=\"11\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M5.8 9.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.4-.3.7s.1.5.3.7z\"></path>\n    </svg>\n  );\n}\nfunction SortUp({ sort }: IconSortProps) {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill={sort === 'asc' ? '#333' : '#ccc'}\n      strokeWidth=\"0\"\n      version=\"1.2\"\n      baseProfile=\"tiny\"\n      viewBox=\"0 0 24 24\"\n      height=\"11\"\n      width=\"11\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M18.2 13.3l-6.2-6.3-6.2 6.3c-.2.2-.3.5-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7z\"></path>\n    </svg>\n  );\n}\n","import { memo } from 'react';\nimport type { IIconProps } from '../lib';\nimport IcCheck from './ic-check';\nimport IcChevron from './ic-chevon';\nimport IcClose from './ic-close';\nimport IcColumn from './ic-column';\nimport IcCopy from './ic-copy';\nimport IcDelete from './ic-delete';\nimport IcDotsVertical from './ic-dots-vertical';\nimport IcFilterAdvance from './ic-filter-advance';\nimport IcFilterMultiple from './ic-filter-multiple';\nimport IcMenu from './ic-menu';\nimport IcSearch from './ic-search';\nimport IcSort, { type IconSortProps } from './ic-sort';\n\nexport const icons = {\n  close: (props: IIconProps) => <IcClose {...props} />,\n  chevron: (prop: IIconProps) => <IcChevron {...prop} />,\n  column: (prop: IIconProps) => <IcColumn {...prop} />,\n  copy: (prop: IIconProps) => <IcCopy {...prop} />,\n  sort: (prop: IconSortProps) => <IcSort {...prop} />,\n  delete: (prop: IIconProps) => <IcDelete {...prop} />,\n  dotsVertical: (prop: IIconProps) => <IcDotsVertical {...prop} />,\n  filterAdvance: (prop: IIconProps) => <IcFilterAdvance {...prop} />,\n  filterMultiple: (prop: IIconProps) => <IcFilterMultiple {...prop} />,\n  search: (prop: IIconProps) => <IcSearch {...prop} />,\n  menu: (prop: IIconProps) => <IcMenu {...prop} />,\n  check: (prop: IIconProps) => <IcCheck {...prop} />,\n};\n\ntype IconName = keyof typeof icons;\n\ntype IconProps<Name extends IconName> = Name extends 'sort'\n  ? React.ComponentProps<(typeof icons)['sort']>\n  : React.ComponentProps<(typeof icons)[Name]>;\n\ntype Props<Name extends IconName = IconName> = {\n  name: Name;\n} & IconProps<Name>;\n\nfunction Icon<Name extends IconName>({ name, ...rest }: Props<Name>) {\n  const Component = icons[name];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return <Component {...(rest as any)} />;\n}\n\nexport default memo(Icon) as <Name extends IconName>(props: Props<Name>) => React.ReactNode;\n","import { type Dispatch, useState } from 'react';\nimport Icon from '../icons';\nimport clsx from 'clsx';\n\ninterface DropdownProps {\n  options?: string[];\n  value?: string;\n  onSelect?: (option: string) => void;\n}\n\ninterface DropdownBoxProps extends Pick<DropdownProps, 'value'> {\n  isOpen: boolean;\n  onToggle: Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function Dropdown(props: DropdownProps) {\n  const { options = [], value, onSelect } = props;\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const handleSelectOption = (option: string) => {\n    onSelect?.(option);\n    setShowDropdown(false);\n  };\n\n  return (\n    <div className='relative w-full'>\n      <DropdownBox value={value || ''} isOpen={showDropdown} onToggle={setShowDropdown} />\n\n      {showDropdown && (\n        <div className='absolute top-full mt-1 w-full border border-gray-50 shadow rounded-sm bg-white dark:bg-black z-40'>\n          <div className='flex flex-col items-start'>\n            {!options.length ? (\n              <div className='py-5 flex justify-center items-center'>\n                <span className='text-gray-500 text-xs font-normal'>No data available!</span>\n              </div>\n            ) : (\n              options.map((option) => (\n                <div\n                  key={option}\n                  className={clsx(\n                    'px-1.5 py-1 hover:bg-blue-50 dark:hover:bg-blue-900 cursor-pointer w-full text-start font-normal',\n                    value === option && 'bg-blue-100 dark:bg-blue-900',\n                  )}\n                  onClick={() => handleSelectOption(option)}\n                >\n                  {option}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst DropdownBox = (props: DropdownBoxProps) => {\n  const { value, isOpen, onToggle } = props;\n\n  return (\n    <div\n      className='border border-gray-200 rounded h-[1.625rem] pl-1.5 w-full flex justify-between items-center hover:bg-gray-50 cursor-pointer dark:hover:bg-black/50'\n      onClick={() => onToggle((prev) => !prev)}\n    >\n      <span className='text-xs font-normal'>{value}</span>\n      <Icon\n        name='chevron'\n        className={clsx('w-5 text-gray-500 me-0.5 transition-all duration-100', isOpen && 'rotate-180')}\n      />\n    </div>\n  );\n};\n","interface FilterActionProps {\n  onReset?: () => void;\n  onApply?: () => void;\n}\n\nexport default function FilterAction({ onReset, onApply }: FilterActionProps) {\n  return (\n    <div className=\"flex justify-end space-x-2.5 border-t border-gray-300 px-1.5 py-2 mt-1.5\">\n      <button className=\"cursor-pointer\" onClick={onReset}>\n        Reset\n      </button>\n      <button className=\"cursor-pointer px-1.5 py-0.5 bg-blue-950 text-white rounded\" onClick={onApply}>\n        Filter\n      </button>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { forwardRef, type HTMLAttributes } from 'react';\n\ninterface FilterCardProps extends HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n}\n\nconst FilterCard = forwardRef<HTMLDivElement, FilterCardProps>(({ children, className, ...propRest }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clsx(\n        'absolute top-full right-0 mt-1 bg-white dark:bg-black/50 dark:backdrop-blur-2xl shadow-md z-[99999] rounded-sm border border-gray-50 w-40 text-xs',\n        className,\n      )}\n      {...propRest}\n    >\n      {children}\n    </div>\n  );\n});\n\nexport default FilterCard;\n","import { memo } from 'react';\n\ninterface IRowCheckbox {\n  checked: boolean;\n}\n\nfunction RowCheckbox({ checked }: IRowCheckbox) {\n  return (\n    <div className=\"flex justify-center items-center w-full h-full\">\n      <input\n        type=\"checkbox\"\n        data-name=\"header-checkbox\"\n        className=\"w-4 h-4 cursor-pointer accent-blue-950\"\n        checked={checked}\n        readOnly\n      />\n    </div>\n  );\n}\n\nexport default memo(RowCheckbox);\n","import { memo } from 'react';\nimport clsx from 'clsx';\nimport Icons from '../../icons';\n\nfunction RowExpand({ isExpanded = false }: { isExpanded?: boolean }) {\n  return (\n    <div className=\"flex justify-center items-center w-full h-full\">\n      <button\n        data-action=\"expand\"\n        className=\"hover:bg-gray-300 transition-colors rounded cursor-pointer\"\n        type=\"button\"\n        aria-label={isExpanded ? 'Collapse row' : 'Expand row'}\n      >\n        <Icons name=\"chevron\" className={clsx('!size-5', isExpanded ? 'rotate-0' : '-rotate-90')} />\n      </button>\n    </div>\n  );\n}\n\nexport default memo(RowExpand);\n","import { forwardRef, memo, type ReactNode } from 'react';\nimport clsx from 'clsx';\n\ninterface TableHeadProps extends React.ThHTMLAttributes<HTMLDivElement> {\n  headValue?: ReactNode;\n}\n\nconst TableHead = forwardRef<HTMLDivElement, TableHeadProps>(({ headValue, className, children, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clsx(\n        'font-semibold border-b border-[#D2D2D4] px-1.5 bg-[#EFF0F6] dark:bg-black text-xs content-center h-full global-report-title !text-[12px]',\n        className,\n      )}\n      {...props}\n    >\n      {headValue || children}\n    </div>\n  );\n});\n\nexport default memo(TableHead);\n","import { forwardRef, memo } from 'react';\nimport clsx from 'clsx';\n\ninterface ITableCell extends React.TdHTMLAttributes<HTMLDivElement> {\n  cellValue?: React.ReactNode;\n}\n\nconst TableCell = forwardRef((props: ITableCell, ref: React.Ref<HTMLDivElement>) => {\n  const { cellValue, className, children, ...rest } = props;\n\n  return (\n    <div\n      ref={ref}\n      className={clsx(\n        'border-b border-[#D2D2D4] px-1.5 text-xs content-center global-report-content !text-[12px]',\n        className\n      )}\n      {...rest}\n    >\n      {cellValue || children}\n    </div>\n  );\n});\n\nexport default memo(TableCell);\n","import { useVirtualizer, Virtualizer } from '@tanstack/react-virtual';\nimport { memo, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport useOnClickOutside from '../../hooks/use-click-outside';\nimport { DEFAULT_SIZE } from '../../lib';\nimport Icons from '../../icons';\nimport { createPortal } from 'react-dom';\nimport FilterCard from './filter-card';\nimport InputSearch from '../input-search';\nimport FilterAction from './filter-action';\nimport Checkbox from '../checkbox';\n\ninterface IFilterSelection {\n  headerKey: string;\n  options: string[];\n  isResetFilter?: boolean;\n  initialSelectedOptions?: string[];\n  onApplyFilter: (value: string[]) => void;\n  onResetFilter: () => void;\n}\n\ninterface ISelectionList extends Pick<IFilterSelection, 'options' | 'headerKey'> {\n  scrollRef: React.RefObject<HTMLDivElement>;\n  rowVirtualizer: Virtualizer<HTMLDivElement, Element>;\n  isEmptyOptions?: boolean;\n  isCheked: (value: string) => boolean;\n  onCheckboxChange: (value: string) => void;\n}\n\nconst filteringOptions = (options: string[], searchQuery: string) => {\n  if (!options) return [];\n\n  const cleanOptions = options.filter((opt) => typeof opt === 'string' || typeof opt === 'number');\n\n  if (!searchQuery) return cleanOptions;\n\n  return cleanOptions.filter((option) => {\n    const optionStr = String(option).toLowerCase(); // ubah ke string\n    return optionStr.includes(searchQuery.toLowerCase());\n  });\n};\n\nfunction FilterSelection(props: IFilterSelection) {\n  const { options, headerKey, onApplyFilter, onResetFilter, isResetFilter, initialSelectedOptions = [] } = props;\n\n  const filterRef = useRef<HTMLDivElement>(null);\n  const filterScrollRef = useRef<HTMLDivElement>(null);\n\n  const [filterCard, setFilterCard] = useState({ show: false, position: { top: 0, left: 0 } });\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(initialSelectedOptions || []);\n\n  const filteredOptions = useMemo(() => {\n    return filteringOptions(options || [], searchQuery);\n  }, [options, searchQuery]);\n\n  useEffect(() => {\n    if (!isResetFilter) return;\n    setSearchQuery('');\n    setSelectedOptions([]);\n  }, [isResetFilter]);\n\n  useOnClickOutside([filterRef], () => {\n    if (filterCard.show) setFilterCard({ show: false, position: { top: 0, left: 0 } });\n  });\n\n  const rowVirtualizer = useVirtualizer({\n    count: filteredOptions.length,\n    getScrollElement: () => filterScrollRef.current,\n    estimateSize: () => 24,\n    overscan: 5,\n  });\n\n  const handleApplyFilter = () => {\n    onApplyFilter(selectedOptions);\n    setFilterCard({ show: false, position: { top: 0, left: 0 } });\n  };\n\n  const handleResetFilter = () => {\n    onResetFilter();\n    setSelectedOptions([]);\n    setFilterCard({ show: false, position: { top: 0, left: 0 } });\n  };\n\n  const onCheckboxChange = (value: string) => {\n    setSelectedOptions((prev) => (prev.includes(value) ? prev.filter((item) => item !== value) : [...prev, value]));\n  };\n\n  const handleOpenFilterCard = (e: React.MouseEvent<SVGSVGElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const normalLeftPosition = rect.left - DEFAULT_SIZE.CARD_FILTER_WIDTH / 2;\n    const normalTopPosition = rect.top + 25;\n\n    const totalLeftPos = rect.left + DEFAULT_SIZE.CARD_FILTER_WIDTH / 2;\n    const totalTopPos = rect.top + DEFAULT_SIZE.CARD_FILTER_HEIGHT + 37;\n\n    const isRightOverflowed = totalLeftPos > viewportWidth;\n    const isLeftOverflowed = normalLeftPosition < 0;\n    const isBottomOverflowed = totalTopPos > viewportHeight;\n\n    let calculatedLeftPosition = normalLeftPosition;\n    let calculatedTopPosition = normalTopPosition;\n\n    if (isRightOverflowed) {\n      // geser ke kiri biar ga overflow right.\n      calculatedLeftPosition = viewportWidth - DEFAULT_SIZE.CARD_FILTER_WIDTH - 10;\n    } else if (isLeftOverflowed) {\n      // geser ke kanan biar ga overflow left>\n      calculatedLeftPosition = 10;\n    }\n\n    if (isBottomOverflowed) {\n      // geser ke atas biar ga overflow bottom>\n      calculatedTopPosition = rect.top - (totalTopPos - viewportHeight) - 20;\n    }\n\n    setFilterCard((prev) => ({\n      ...prev,\n      show: true,\n      position: { top: calculatedTopPosition, left: calculatedLeftPosition },\n    }));\n  };\n\n  const isEmptyOpts = options.length < 1;\n  const isEmptyFilteredOpts = filteredOptions.length < 1;\n\n  return (\n    <div className='relative'>\n      <div className='relative'>\n        {selectedOptions.length > 0 && (\n          <div className='absolute top-0 -right-1 size-2 rounded-full bg-blue-950 z-10' />\n        )}\n        <Icons\n          name='filterMultiple'\n          className={clsx(\n            'shrink-0 w-3.5 text-gray-500 hover:text-gray-900 dark:hover:text-gray-200 cursor-pointer',\n            filterCard.show ? '!text-gray-900 dark:!text-gray-200' : 'text-gray-500 dark:text-gray-700',\n          )}\n          onClick={handleOpenFilterCard}\n        />\n      </div>\n\n      {filterCard.show &&\n        createPortal(\n          <FilterCard\n            ref={filterRef}\n            className='fixed'\n            style={{ top: filterCard.position.top, left: filterCard.position.left }}\n          >\n            {!isEmptyOpts && (\n              <div className='px-1.5 pt-1.5'>\n                <InputSearch\n                  id={`filter-selection-search-${headerKey}`}\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </div>\n            )}\n\n            <SelectionList\n              scrollRef={filterScrollRef as React.RefObject<HTMLDivElement>}\n              rowVirtualizer={rowVirtualizer}\n              options={filteredOptions}\n              headerKey={headerKey}\n              isEmptyOptions={isEmptyFilteredOpts}\n              isCheked={(value) => selectedOptions.includes(value || '')}\n              onCheckboxChange={onCheckboxChange}\n            />\n\n            <FilterAction onApply={handleApplyFilter} onReset={handleResetFilter} />\n          </FilterCard>,\n          document.body,\n        )}\n    </div>\n  );\n}\n\nconst SelectionList = (props: ISelectionList) => {\n  const { options, headerKey, rowVirtualizer, isCheked, isEmptyOptions, onCheckboxChange, scrollRef } = props;\n\n  return (\n    <div\n      ref={scrollRef}\n      className={clsx('relative overflow-auto h-40 my-1.5 mx-1.5 filter-scrollbar', isEmptyOptions && '!h-16')}\n    >\n      {isEmptyOptions ? (\n        <div className='size-full flex justify-center items-center'>\n          <span className='text-gray-400 text-xs font-normal'>No data available!</span>\n        </div>\n      ) : (\n        <div style={{ height: rowVirtualizer.getTotalSize() }}>\n          {rowVirtualizer.getVirtualItems().map((virtualRow) => {\n            const optionLabel = options[virtualRow.index];\n\n            return (\n              <div\n                key={virtualRow.key}\n                style={{\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  width: '100%',\n                  height: `${virtualRow.size}px`,\n                  transform: `translateY(${virtualRow.start}px)`,\n                }}\n              >\n                <Checkbox\n                  id={`filter-selection-checkbox-${headerKey}-${virtualRow.index}`}\n                  label={optionLabel}\n                  checked={isCheked(optionLabel)}\n                  onChecked={() => onCheckboxChange(optionLabel)}\n                />\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(FilterSelection);\n","import { memo, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport FilterAction from './filter-action';\nimport FilterCard from './filter-card';\nimport { createPortal } from 'react-dom';\nimport { DEFAULT_SIZE, FILTER_ADVANCE_CONFIG, getObjKeyByValue, type TFilterAdvanceConfig } from '../../lib';\nimport useOnClickOutside from '../../hooks/use-click-outside';\nimport Dropdown from '../dropdown';\nimport InputSearch from '../input-search';\nimport Icons from '../../icons';\n\ninterface IFilterAdvance {\n  headerKey: string;\n  isResetFilter?: boolean;\n  initialFilterValue?: { config_name: TFilterAdvanceConfig; value: string };\n  onApplyFilter: (config: TFilterAdvanceConfig, value: string) => void;\n  onResetFilter: () => void;\n}\n\ninterface IFilterCard {\n  show: boolean;\n  position: { top: number; left: number };\n}\n\ninterface IFilterValue {\n  config_name: string;\n  value: string;\n}\n\nconst CONFIG_OPTIONS = Object.values(FILTER_ADVANCE_CONFIG).map((value) => value);\n\nconst DEFAULT_FILTER_CARD: IFilterCard = {\n  show: false,\n  position: { top: 0, left: 0 },\n};\n\nconst DEFAULT_FILTER_VALUE: IFilterValue = {\n  config_name: CONFIG_OPTIONS[0],\n  value: '',\n};\n\nfunction FilterAdvance(props: IFilterAdvance) {\n  const { headerKey, onApplyFilter, onResetFilter, isResetFilter, initialFilterValue } = props;\n\n  const filterRef = useRef<HTMLDivElement>(null);\n  const [filterCard, setFilterCard] = useState<IFilterCard>(DEFAULT_FILTER_CARD);\n  const [filterValue, setFilterValue] = useState<IFilterValue>(initialFilterValue || DEFAULT_FILTER_VALUE);\n\n  useEffect(() => {\n    if (isResetFilter) setFilterValue(DEFAULT_FILTER_VALUE);\n  }, [isResetFilter]);\n\n  useOnClickOutside([filterRef], () => filterCard.show && setFilterCard(DEFAULT_FILTER_CARD));\n\n  const handleConfigChange = (config_name: string) => {\n    setFilterValue((prev) => ({ ...prev, config_name }));\n    if (config_name === 'None') setFilterValue((prev) => ({ ...prev, value: '' }));\n  };\n\n  const handleApplyFilter = () => {\n    const getConfigKey = getObjKeyByValue(FILTER_ADVANCE_CONFIG, filterValue.config_name);\n    onApplyFilter(getConfigKey as TFilterAdvanceConfig, filterValue.value);\n    setFilterCard(DEFAULT_FILTER_CARD);\n  };\n\n  const handleResetFilter = () => {\n    onResetFilter();\n    setFilterValue(DEFAULT_FILTER_VALUE);\n    setFilterCard(DEFAULT_FILTER_CARD);\n  };\n\n  const handleOpenFilterCard = (e: React.MouseEvent<SVGSVGElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const normalLeftPosition = rect.left - DEFAULT_SIZE.CARD_FILTER_WIDTH / 2;\n    const normalTopPosition = rect.top + 25;\n\n    const totalLeftPos = rect.left + DEFAULT_SIZE.CARD_FILTER_WIDTH / 2;\n    const totalTopPos = rect.top + DEFAULT_SIZE.CARD_FILTER_HEIGHT + 37;\n\n    const isRightOverflowed = totalLeftPos > viewportWidth;\n    const isLeftOverflowed = normalLeftPosition < 0;\n    const isBottomOverflowed = totalTopPos > viewportHeight;\n\n    let calculatedLeftPosition = normalLeftPosition;\n    let calculatedTopPosition = normalTopPosition;\n\n    if (isRightOverflowed) {\n      // geser ke kiri biar ga overflow right.\n      calculatedLeftPosition = viewportWidth - DEFAULT_SIZE.CARD_FILTER_WIDTH - 10;\n    } else if (isLeftOverflowed) {\n      // geser ke kanan biar ga overflow left>\n      calculatedLeftPosition = 10;\n    }\n\n    if (isBottomOverflowed) {\n      // geser ke atas biar ga overflow bottom>\n      calculatedTopPosition = rect.top - 37;\n    }\n\n    setFilterCard((prev) => ({\n      ...prev,\n      show: true,\n      position: { top: calculatedTopPosition, left: calculatedLeftPosition },\n    }));\n  };\n\n  return (\n    <div className='relative'>\n      <div className='relative'>\n        {filterValue.config_name !== 'None' && filterValue.value.length > 0 && (\n          <div className='absolute top-0 -right-1 size-2 rounded-full bg-blue-950 z-10' />\n        )}\n        <Icons\n          name='filterAdvance'\n          className={clsx(\n            'shrink-0 w-5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 cursor-pointer',\n            filterCard.show ? '!text-gray-600 dark:!text-gray-200' : 'text-gray-400 dark:text-gray-700',\n          )}\n          onClick={handleOpenFilterCard}\n        />\n      </div>\n\n      {filterCard.show &&\n        createPortal(\n          <FilterCard\n            ref={filterRef}\n            className='fixed'\n            style={{ top: filterCard.position.top, left: filterCard.position.left }}\n          >\n            <div className='p-1.5 w-full flex flex-col items-start space-y-1'>\n              <span className='text-xs text-gray-800 dark:text-gray-200'>Filter dengan</span>\n              <Dropdown options={CONFIG_OPTIONS} value={filterValue.config_name} onSelect={handleConfigChange} />\n\n              {filterValue.config_name !== 'None' && (\n                <InputSearch\n                  id={`filter-advance-value-${headerKey}`}\n                  disabled={filterValue.config_name === 'None'}\n                  value={filterValue.value}\n                  onChange={(e) => setFilterValue((prev) => ({ ...prev, value: e.target.value }))}\n                />\n              )}\n            </div>\n\n            <FilterAction onApply={handleApplyFilter} onReset={handleResetFilter} />\n          </FilterCard>,\n          document.body,\n        )}\n    </div>\n  );\n}\n\nexport default memo(FilterAdvance);\n","import { createPortal } from 'react-dom';\nimport { memo, useEffect, useRef, useState } from 'react';\nimport FilterCard from './filter-card';\nimport clsx from 'clsx';\nimport FilterAction from './filter-action';\nimport { useClickOutside } from '../../hooks';\nimport { DEFAULT_SIZE } from '../../lib';\nimport Icons from '../../icons';\nimport InputSearch from '../input-search';\n\ninterface IVirtualFilterSearchProps {\n  headerKey: string;\n  onSearchChange: (value: string) => void;\n  onSearchClear: () => void;\n  isResetFilter?: boolean;\n  mode: 'direct-search' | 'popout-card';\n  initialSearch?: string;\n}\n\nfunction FilterSearch(props: IVirtualFilterSearchProps) {\n  const { mode, headerKey, onSearchChange, onSearchClear, isResetFilter, initialSearch } = props;\n\n  const filterCardRef = useRef<HTMLDivElement>(null);\n  const [search, setSearch] = useState(initialSearch || '');\n  const [showCard, setShowCard] = useState({ show: false, pos: { top: 0, left: 0 } });\n\n  useEffect(() => {\n    if (isResetFilter) setSearch('');\n  }, [isResetFilter]);\n\n  useClickOutside([filterCardRef], () => {\n    if (showCard.show) setShowCard({ show: false, pos: { top: 0, left: 0 } });\n  });\n\n  const handleEnterSearch = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') onSearchChange(search);\n  };\n\n  const handleResetSearch = () => {\n    if (search.length) {\n      onSearchClear();\n      setSearch('');\n    }\n  };\n\n  const handleApplySearch = () => {\n    if (search.length) {\n      onSearchChange(search);\n      setShowCard({ show: false, pos: { top: 0, left: 0 } });\n    }\n  };\n\n  const handleOpenCard = (e: React.MouseEvent) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n\n    setShowCard({\n      show: true,\n      pos: { top: rect.top + 30, left: rect.left - DEFAULT_SIZE.CARD_FILTER_WIDTH / 2 },\n    });\n  };\n\n  if (mode === 'direct-search') {\n    return (\n      <InputSearch\n        className='bg-white !h-6'\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        onClickEnter={() => onSearchChange(search)}\n        onRemoveSearch={handleResetSearch}\n      />\n    );\n  }\n\n  return (\n    <div className='relative'>\n      <div className='relative'>\n        <Icons\n          name='search'\n          onClick={handleOpenCard}\n          className={clsx(\n            'shrink-0 w-3.5 text-gray-500 hover:text-gray-900 dark:hover:text-gray-200 cursor-pointer',\n            showCard.show ? '!text-gray-900 dark:!text-gray-200' : 'text-gray-500 dark:text-gray-700',\n          )}\n        />\n      </div>\n\n      {showCard.show &&\n        createPortal(\n          <FilterCard ref={filterCardRef} className='fixed' style={{ top: showCard.pos.top, left: showCard.pos.left }}>\n            <div className='p-1'>\n              <InputSearch\n                id={'filter-search-' + headerKey}\n                className='!w-full bg-white'\n                onKeyDown={handleEnterSearch}\n                onRemoveSearch={handleResetSearch}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n            </div>\n            <FilterAction onReset={handleResetSearch} onApply={handleApplySearch} />\n          </FilterCard>,\n          document.body,\n        )}\n    </div>\n  );\n}\n\nexport default memo(FilterSearch);\n","import { memo } from 'react';\nimport Icon from '../../icons';\nimport FilterSelection from './filter-selection';\nimport FilterAdvance from './filter-advance';\nimport FilterSearch from './filter-search';\nimport clsx from 'clsx';\nimport { type IHeader, type TFilterAdvanceConfig } from '../../lib';\nimport {\n  useAdvance,\n  useIsResetFilter,\n  useSearch,\n  useSelection,\n  useSort,\n  useTableKey,\n} from '../../context/filter-context';\nimport { useFilterHeight } from '../../context/ui-context';\n\ninterface IHeaderFilter {\n  headerKey: string;\n  filterSelectionOptions: string[];\n  headerMode: 'single' | 'double';\n  hideFilter: IHeader<unknown>['hideFilter'];\n}\n\nconst HeaderFilter = ({ headerKey, filterSelectionOptions, headerMode, hideFilter }: IHeaderFilter) => {\n  const tableKey = useTableKey();\n  const search = useSearch();\n  const sort = useSort();\n  const selection = useSelection();\n  const advance = useAdvance();\n  const isResetFilter = useIsResetFilter();\n\n  const filterHeight = useFilterHeight();\n\n  const isSingleHeader = headerMode === 'single';\n  const calcFilterHeight = isSingleHeader ? 'auto' : filterHeight;\n\n  const isHideFilterSelection = hideFilter?.filterSelection;\n  const isHideFilterAdvance = hideFilter?.filterAdvance;\n  const isHideFilterSort = hideFilter?.sort;\n  const isHideFilterSearch = hideFilter?.search;\n\n  const sessionStorageSearch = JSON.parse(sessionStorage.getItem('search_per_column') || '{}') as Record<\n    string,\n    Record<string, string>\n  >;\n\n  const sessionStorageSelection = JSON.parse(sessionStorage.getItem('filter_selection_per_column') || '{}') as Record<\n    string,\n    Record<string, string[]>\n  >;\n\n  const sessionStorageAdvance = JSON.parse(sessionStorage.getItem('filter_advance_per_column') || '{}') as Record<\n    string,\n    Record<string, { config_name: TFilterAdvanceConfig; value: string }>\n  >;\n\n  return (\n    <div\n      style={{ height: calcFilterHeight }}\n      className={clsx('flex items-center space-x-1.5', isSingleHeader ? 'w-max pr-2.5' : 'w-full px-1.5')}\n    >\n      {!isHideFilterSearch && (\n        <FilterSearch\n          mode={isSingleHeader ? 'popout-card' : 'direct-search'}\n          headerKey={headerKey}\n          onSearchChange={(val) => search.updateSearch(headerKey, val)}\n          onSearchClear={() => search.resetSearch(headerKey)}\n          isResetFilter={isResetFilter}\n          initialSearch={sessionStorageSearch?.[tableKey || '']?.[headerKey] || ''}\n        />\n      )}\n\n      {!isHideFilterSelection && (\n        <FilterSelection\n          headerKey={headerKey?.toString() || ''}\n          options={filterSelectionOptions}\n          onApplyFilter={(value) => selection.updateFilter(headerKey as keyof unknown, value)}\n          onResetFilter={() => selection.resetFilter(headerKey as keyof unknown)}\n          isResetFilter={isResetFilter}\n          initialSelectedOptions={sessionStorageSelection?.[tableKey || '']?.[headerKey] || []}\n        />\n      )}\n\n      {!isHideFilterAdvance && (\n        <FilterAdvance\n          headerKey={headerKey?.toString() || ''}\n          initialFilterValue={\n            sessionStorageAdvance?.[tableKey || '']?.[headerKey] || { config_name: 'None', value: '' }\n          }\n          onResetFilter={() => advance.resetAdvanceFilter(headerKey as keyof unknown)}\n          onApplyFilter={(config, value) => advance.updateAdvanceFilter(headerKey as keyof unknown, config, value)}\n          isResetFilter={isResetFilter}\n        />\n      )}\n\n      {isSingleHeader && !isHideFilterSort && (\n        <Icon\n          name='sort'\n          className='cursor-pointer'\n          sort={headerKey === sort.sortKey ? sort.sortBy : 'unset'}\n          onClick={() => sort.onChangeSort(headerKey.toString())}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(HeaderFilter);\n","import clsx from 'clsx';\nimport { memo, type ReactNode } from 'react';\n\ntype RowExpandedContentProps = {\n  width: number;\n  emptyPadding: boolean;\n  children: ReactNode;\n};\n\nconst RowExpandedContent = (props: RowExpandedContentProps): ReactNode => {\n  const { width, emptyPadding, children } = props;\n\n  return (\n    <div data-name=\"row-expanded\" style={{ width }} className={clsx('border-b border-gray-200', emptyPadding && 'p-2')}>\n      {children}\n    </div>\n  );\n};\n\nexport default memo(RowExpandedContent);\n","import { memo, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useClickOutside } from '../../hooks';\nimport { DEFAULT_SIZE } from '../../lib';\nimport Icons from '../../icons';\nimport FilterCard from './filter-card';\nimport { useIsFilterVisible, useToggleFilterVisibility } from '../../context/header-context';\nimport { useSort } from '../../context/filter-context';\n\nconst DEFAULT_ACTIONS = [\n  'Sort Ascending',\n  'Sort Descending',\n  'Unsort',\n  // Filter toggle will be added dynamically\n];\n\ninterface IHeaderAction {\n  headerKey: string;\n  hideFilterSort: boolean;\n}\n\nfunction HeaderAction({ headerKey, hideFilterSort }: IHeaderAction) {\n  const cardRef = useRef<HTMLDivElement>(null);\n  const [actionCard, setActionCard] = useState({ show: false, pos: { x: 0, y: 0 } });\n\n  const toggleFilterVisibility = useToggleFilterVisibility();\n  const isFilterVisible = useIsFilterVisible();\n  const sort = useSort();\n\n  useClickOutside([cardRef], () => setActionCard({ show: false, pos: { x: 0, y: 0 } }));\n\n  const handleOpenActionCard = (e: React.MouseEvent<SVGSVGElement>) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const normalLeftPosition = rect.x - DEFAULT_SIZE.CARD_FILTER_WIDTH / 2;\n    const normalTopPosition = rect.y + 20;\n\n    const totalLeftPos = rect.x + DEFAULT_SIZE.CARD_FILTER_WIDTH / 2;\n    const totalTopPos = rect.y + DEFAULT_SIZE.CARD_FILTER_HEIGHT + 37;\n\n    const isRightOverflowed = totalLeftPos > viewportWidth;\n    const isLeftOverflowed = normalLeftPosition < 0;\n    const isBottomOverflowed = totalTopPos > viewportHeight;\n\n    let calculatedLeftPosition = normalLeftPosition;\n    let calculatedTopPosition = normalTopPosition;\n\n    if (isRightOverflowed) {\n      // geser ke kiri biar ga overflow right.\n      calculatedLeftPosition = viewportWidth - DEFAULT_SIZE.CARD_FILTER_WIDTH - 10;\n    } else if (isLeftOverflowed) {\n      // geser ke kanan biar ga overflow left.\n      calculatedLeftPosition = 10;\n    }\n\n    if (isBottomOverflowed) {\n      // geser ke atas biar ga overflow bottom.\n      calculatedTopPosition = rect.top - 37;\n    }\n\n    setActionCard({\n      show: true,\n      pos: { x: calculatedLeftPosition, y: calculatedTopPosition },\n    });\n  };\n\n  const handleActionClick = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>, action: string) => {\n    e.stopPropagation();\n\n    const mapAction = {\n      'Sort Ascending': () => sort.onChangeSpecificSort(headerKey, 'asc'),\n      'Sort Descending': () => sort.onChangeSpecificSort(headerKey, 'desc'),\n      Unsort: () => sort.onChangeSpecificSort(headerKey, 'unset'),\n      'Tutup Filter': () => toggleFilterVisibility(),\n      'Buka Filter': () => toggleFilterVisibility(),\n    };\n\n    mapAction[action as keyof typeof mapAction]?.();\n  };\n\n  const modifiedActions = useMemo(() => {\n    const actions = hideFilterSort\n      ? DEFAULT_ACTIONS.filter((action) => !['Sort Ascending', 'Sort Descending', 'Unsort'].includes(action))\n      : DEFAULT_ACTIONS;\n\n    return [...actions, isFilterVisible ? 'Tutup Filter' : 'Buka Filter'];\n  }, [hideFilterSort, isFilterVisible]);\n\n  return (\n    <div className='relative'>\n      <Icons name='menu' className='!size-4 text-gray-500 cursor-pointer' onClick={handleOpenActionCard} />\n\n      {actionCard.show &&\n        createPortal(\n          <FilterCard ref={cardRef} className='fixed z-50' style={{ top: actionCard.pos.y, left: actionCard.pos.x }}>\n            {modifiedActions.map((action, index) => (\n              <span\n                key={action + index}\n                onClick={(e) => handleActionClick(e, action)}\n                className='relative py-2 px-3 flex items-center hover:bg-blue-950 hover:text-white cursor-pointer'\n              >\n                {action}\n              </span>\n            ))}\n          </FilterCard>,\n          document.body,\n        )}\n    </div>\n  );\n}\n\nexport default memo(HeaderAction);\n","import { memo } from 'react';\nimport clsx from 'clsx';\nimport Icons from '../../icons';\nimport HeaderAction from './header-action';\nimport { useSort } from '../../context/filter-context';\n\n/**\n * NOTE: Rendering Header Caption.\n * - Single Header: Tampilkan caption saja.\n * - Double Header: Tampilkan caption, sorting, dan icon burger menu toggle Header Action.\n */\n\ninterface IHeaderCaption {\n  isSingleHeader: boolean;\n  isFilterVisible: boolean;\n  caption: string;\n  headerKey: string;\n  hideFilterSort: boolean;\n}\n\nfunction HeaderCaption({ isSingleHeader, isFilterVisible, caption, headerKey, hideFilterSort }: IHeaderCaption) {\n  const sort = useSort();\n\n  if (isSingleHeader) return caption;\n\n  return (\n    <div\n      className={clsx('flex-1 flex w-full justify-between items-center px-1.5 cursor-pointer', {\n        'border-b border-[#D2D2D4]': isFilterVisible,\n        '!cursor-default': hideFilterSort,\n      })}\n      onClick={() => !hideFilterSort && sort.onChangeSort(headerKey.toString())}\n    >\n      <span className=\"flex items-center gap-1.5\">\n        {caption}\n        {!hideFilterSort && (\n          <Icons\n            name=\"sort\"\n            className=\"cursor-pointer\"\n            sort={headerKey === sort.sortKey ? sort.sortBy : 'unset'}\n            onClick={() => sort.onChangeSort(headerKey.toString())}\n          />\n        )}\n      </span>\n\n      <HeaderAction headerKey={headerKey} hideFilterSort={hideFilterSort} />\n    </div>\n  );\n}\n\nexport default memo(HeaderCaption);\n","import { memo, type CSSProperties } from 'react';\nimport clsx from 'clsx';\nimport { DEFAULT_SIZE, findChildRecursive, type IHeader, type IAdjustedHeader } from '../../lib';\nimport ResizeIndicator from '../resize-indicator';\nimport HeaderCaption from './header-caption';\nimport HeaderFilter from './header-filter';\nimport {\n  useColumns,\n  useFreezeLeftColumns,\n  useFreezeRightColumns,\n  useIsFilterVisible,\n  useUpdateChildColumn,\n  useUpdateFreezeChildColumn,\n} from '../../context/header-context';\nimport { useColumnVirtualizer } from '../../context/virtualizer-context';\nimport { useHeaderMode } from '../../context/ui-context';\n\ninterface INestedHeaderCell {\n  headData: IAdjustedHeader;\n  parentKey: string;\n  parentVirtualIndex: number;\n  cellClassName?: string;\n  cellStyles?: CSSProperties;\n  freezeType?: 'left' | 'right';\n}\n\ninterface IResizeChildColumnArgs {\n  parentKey: string;\n  childKey: string;\n  parentVirtualIndex?: number;\n  freezeType?: 'left' | 'right';\n}\n\nfunction HeaderCellNested(props: INestedHeaderCell) {\n  const { headData, parentKey, parentVirtualIndex, cellClassName, cellStyles, freezeType } = props;\n\n  const isFilterVisible = useIsFilterVisible();\n  const freezeLeftColumns = useFreezeLeftColumns();\n  const freezeRightColumns = useFreezeRightColumns();\n  const columns = useColumns();\n  const updateFreezeChildColumn = useUpdateFreezeChildColumn();\n  const updateChildColumn = useUpdateChildColumn();\n\n  const columnVirtualizer = useColumnVirtualizer();\n  const headerMode = useHeaderMode();\n\n  const handleResizeChildColumn = (e: React.MouseEvent, args: IResizeChildColumnArgs) => {\n    e.preventDefault();\n\n    const { parentKey, childKey, parentVirtualIndex, freezeType } = args;\n    const startX = e.clientX;\n\n    const parent =\n      freezeType === 'left'\n        ? freezeLeftColumns.find((c: IHeader<unknown>) => c.key === parentKey)\n        : freezeType === 'right'\n        ? freezeRightColumns.find((c: IHeader<unknown>) => c.key === parentKey)\n        : columns.find((c: IHeader<unknown>) => c.key === parentKey);\n\n    if (!parent) return;\n\n    // fungsi rekursif untuk mencari child\n    const child = findChildRecursive(parent, childKey);\n\n    if (!child) return;\n\n    const startChildWidth = child.width ?? 0;\n    const startParentWidth = parent.width ?? 0;\n\n    const resizeLine = document.getElementById('resize-line')!;\n    resizeLine.style.display = 'block';\n    resizeLine.style.left = `${e.clientX}px`;\n\n    const onMouseMove = (ev: MouseEvent) => {\n      resizeLine.style.left = `${ev.clientX}px`;\n    };\n\n    const onMouseUp = (ev: MouseEvent) => {\n      resizeLine.style.display = 'none';\n      const delta = ev.clientX - startX;\n      const newChildWidth = Math.max(50, startChildWidth + delta);\n\n      if (freezeType) {\n        updateFreezeChildColumn(parentKey as string, childKey as string, freezeType, {\n          width: newChildWidth,\n        });\n      } else {\n        const newParentWidth = Math.max(50, startParentWidth - startChildWidth + newChildWidth);\n        updateChildColumn(parentKey as string, childKey as string, { width: newChildWidth });\n        if (typeof parentVirtualIndex === 'number') {\n          columnVirtualizer?.resizeItem(parentVirtualIndex, newParentWidth);\n        }\n      }\n\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n  };\n\n  const isSingleHeader = headerMode === 'single';\n  const renderHeader = headData?.renderHeader;\n  const isLeaf = !headData.children || headData.children.length === 0;\n\n  const getScaledWidth = (parentKey: string, parentVirtualIndex: number, childWidth: number = 0) => {\n    if (!childWidth) return 0;\n\n    const parent =\n      freezeType === 'left'\n        ? freezeLeftColumns.find((col: IHeader<unknown>) => col.key === parentKey)\n        : freezeType === 'right'\n        ? freezeRightColumns.find((col: IHeader<unknown>) => col.key === parentKey)\n        : columns.find((col: IHeader<unknown>) => col.key === parentKey);\n\n    if (!parent?.width) return childWidth;\n\n    // Get virtual items and find the correct parent item\n    const virtualItems = typeof parentVirtualIndex === 'number' ? columnVirtualizer?.getVirtualItems() : null;\n    const virtualParent = virtualItems?.find((item: any) => columns[item.index]?.key === parentKey);\n\n    // Use virtual size if available, otherwise fallback to original width\n    const parentSize = virtualParent?.size ?? parent.width;\n    const originalParentWidth = parent.width;\n\n    // Calculate scale factor based on current virtual size vs original width\n    const scaleFactor = parentSize / originalParentWidth;\n\n    // Apply scale factor to child width\n    return childWidth * scaleFactor;\n  };\n\n  if (isLeaf) {\n    const scaledWidth = getScaledWidth(parentKey, parentVirtualIndex, headData.width);\n\n    return (\n      <div\n        className={clsx(\n          'group/outer relative border-gray-200 flex h-full',\n          freezeType === 'right' ? 'border-l' : 'border-r',\n          isSingleHeader ? 'flex-row justify-between items-center px-1' : 'flex-col justify-between items-start',\n          cellClassName,\n        )}\n        style={{ minWidth: scaledWidth, width: scaledWidth, ...cellStyles }}\n      >\n        {!renderHeader && (\n          <>\n            <HeaderCaption\n              isSingleHeader={isSingleHeader}\n              isFilterVisible={isFilterVisible}\n              headerKey={headData.key}\n              caption={headData?.caption}\n              hideFilterSort={headData?.hideFilter?.sort || false}\n            />\n\n            {isFilterVisible && (\n              <HeaderFilter\n                headerMode={headerMode}\n                headerKey={headData?.key}\n                filterSelectionOptions={headData?.filterSelectionOptions || []}\n                hideFilter={headData?.hideFilter}\n              />\n            )}\n\n            <ResizeIndicator\n              handleMouseDown={(e) => {\n                handleResizeChildColumn(e, {\n                  parentKey,\n                  freezeType,\n                  parentVirtualIndex,\n                  childKey: headData.key,\n                });\n              }}\n            />\n          </>\n        )}\n\n        {renderHeader && renderHeader()}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      key={'table-head-group-node-' + headData.key}\n      className={clsx('relative border-gray-200 !px-0 flex flex-col h-full', {\n        'group/outer': !headData.children,\n        'border-r': freezeType !== 'right',\n        'border-l': freezeType === 'right' && !headData.children,\n      })}\n      style={{ minWidth: headData.width! }}\n    >\n      <div\n        style={{ minHeight: DEFAULT_SIZE.GROUP_HEADER_HEIGHT }}\n        className={clsx(\n          'w-full border-b border-gray-200 text-center content-center flex items-center justify-center',\n          freezeType === 'right' && 'border-l',\n        )}\n      >\n        {headData.caption}\n      </div>\n\n      <div className='flex-1 w-full flex min-h-0'>\n        {headData.children?.map((child) => (\n          <HeaderCellNested\n            key={'nested-header-cell-' + child.key}\n            headData={child}\n            parentKey={parentKey}\n            parentVirtualIndex={parentVirtualIndex}\n            freezeType={freezeType}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(HeaderCellNested);\n","import { createContext, useContextSelector } from 'use-context-selector';\nimport { useCallback, useState, useMemo } from 'react';\n\n// ==================== Types ====================\nexport type ISelectionContext = {\n  selectedRowKey: string | null;\n  selectedRowKeys: Set<string>;\n  deselectedRowKeys: Set<string>;\n  expandedRowKeys: Set<string>;\n  selectAll: boolean;\n  toggleExpandRow: (key: string) => void;\n  onClickRow: (key: string | null) => void;\n  setSelectedRowKey: (key: string | null) => void;\n  toggleRowSelection: (key: string) => void;\n  toggleSelectAll: (mode: boolean) => void;\n};\n\ntype ISelectionContextProvider = {\n  children: React.ReactNode;\n  onChangeCheckboxRowSelection?: (\n    selectedRows: (string | number)[],\n    deselectedRows: (string | number)[],\n    isSelectAll: boolean,\n  ) => void;\n};\n\n// ==================== Context ====================\nconst SelectionCtx = createContext<ISelectionContext | null>(null);\n\n// ==================== Hooks ====================\nexport const useSelectedRowKey = () => useContextSelector(SelectionCtx, (ctx) => ctx?.selectedRowKey ?? null);\n\nexport const useSelectedRowKeys = () =>\n  useContextSelector(SelectionCtx, (ctx) => ctx?.selectedRowKeys ?? new Set<string>());\n\nexport const useDeselectedRowKeys = () =>\n  useContextSelector(SelectionCtx, (ctx) => ctx?.deselectedRowKeys ?? new Set<string>());\n\nexport const useExpandedRowKeys = () =>\n  useContextSelector(SelectionCtx, (ctx) => ctx?.expandedRowKeys ?? new Set<string>());\n\nexport const useSelectAll = () => useContextSelector(SelectionCtx, (ctx) => ctx?.selectAll ?? false);\n\nexport const useToggleExpandRow = () => useContextSelector(SelectionCtx, (ctx) => ctx?.toggleExpandRow)!;\n\nexport const useOnClickRow = () => useContextSelector(SelectionCtx, (ctx) => ctx?.onClickRow)!;\n\nexport const useSetSelectedRowKey = () => useContextSelector(SelectionCtx, (ctx) => ctx?.setSelectedRowKey)!;\n\nexport const useToggleRowSelection = () => useContextSelector(SelectionCtx, (ctx) => ctx?.toggleRowSelection)!;\n\nexport const useToggleSelectAll = () => useContextSelector(SelectionCtx, (ctx) => ctx?.toggleSelectAll)!;\n\n// ==================== Provider ====================\nexport const SelectionContextProvider = (props: ISelectionContextProvider): React.ReactElement => {\n  const { children, onChangeCheckboxRowSelection } = props;\n\n  const [selectedRowKey, setSelectedRowKey] = useState<string | null>(null);\n  const [expandedRowKeys, setExpandedRowKeys] = useState<Set<string>>(new Set());\n  const [selectedRowKeys, setSelectedRowKeys] = useState<Set<string>>(new Set());\n  const [deselectedRowKeys, setDeselectedRowKeys] = useState<Set<string>>(new Set());\n  const [selectAll, setSelectAll] = useState<boolean>(false);\n\n  const onClickRow = useCallback((key: string | null) => {\n    setSelectedRowKey(key);\n  }, []);\n\n  const toggleRowSelection = useCallback(\n    (key: string): void => {\n      if (selectAll) {\n        setDeselectedRowKeys((prev) => {\n          if (prev.has(key)) {\n            const next = new Set(prev);\n            next.delete(key);\n            onChangeCheckboxRowSelection?.([], Array.from(next), false);\n            return next;\n          }\n          const finalData = new Set(prev).add(key);\n          onChangeCheckboxRowSelection?.([], Array.from(finalData), false);\n\n          return finalData;\n        });\n        return;\n      }\n\n      setSelectedRowKeys((prev) => {\n        if (prev.has(key)) {\n          const next = new Set(prev);\n          next.delete(key);\n          onChangeCheckboxRowSelection?.(Array.from(next), [], false);\n          return next;\n        }\n        const finalData = new Set(prev).add(key);\n        onChangeCheckboxRowSelection?.(Array.from(finalData), [], false);\n\n        return finalData;\n      });\n    },\n    [selectAll, onChangeCheckboxRowSelection],\n  );\n\n  const toggleSelectAll = useCallback(\n    (mode: boolean): void => {\n      onChangeCheckboxRowSelection?.([], [], mode);\n\n      setSelectAll(mode);\n      setSelectedRowKeys(new Set());\n      setDeselectedRowKeys(new Set());\n    },\n    [onChangeCheckboxRowSelection],\n  );\n\n  const toggleExpandRow = useCallback((key: string): void => {\n    setExpandedRowKeys((prev) => {\n      const next = new Set(prev);\n      if (next.has(key)) next.delete(key);\n      else next.add(key);\n      return next;\n    });\n  }, []);\n\n  // Memoize context value\n  const contextValue = useMemo<ISelectionContext>(\n    () => ({\n      selectedRowKey,\n      selectedRowKeys,\n      deselectedRowKeys,\n      selectAll,\n      expandedRowKeys,\n      toggleExpandRow,\n      setSelectedRowKey,\n      onClickRow,\n      toggleRowSelection,\n      toggleSelectAll,\n    }),\n    [\n      selectedRowKey,\n      selectedRowKeys,\n      deselectedRowKeys,\n      selectAll,\n      expandedRowKeys,\n      toggleExpandRow,\n      onClickRow,\n      toggleRowSelection,\n      toggleSelectAll,\n    ],\n  );\n\n  return <SelectionCtx.Provider value={contextValue}>{children}</SelectionCtx.Provider>;\n};\n","import { useCallback, type CSSProperties } from 'react';\nimport clsx from 'clsx';\nimport { DEFAULT_SIZE, type IAdjustedHeader } from '../../lib';\nimport ResizeIndicator from '../resize-indicator';\nimport RowCheckbox from '../body/row-checkbox';\nimport HeaderFilter from './header-filter';\nimport TableHead from '../table-head';\nimport HeaderCellNested from './header-cell-nested';\nimport HeaderCaption from './header-caption';\nimport {\n  useColumns,\n  useFreezeLeftColumns,\n  useFreezeRightColumns,\n  useIsFilterVisible,\n  useUpdateColumn,\n  useUpdateFreezeColumn,\n} from '../../context/header-context';\nimport { useColumnVirtualizer } from '../../context/virtualizer-context';\nimport { useDeselectedRowKeys, useSelectAll } from '../../context/selection-context';\nimport { useHeaderMode } from '../../context/ui-context';\n\ninterface IHeaderCell {\n  headData: IAdjustedHeader;\n  headVirtualIndex: number;\n  cellClassName?: string;\n  cellStyles?: CSSProperties;\n  freezeType?: 'left' | 'right';\n}\n\nfunction HeaderCell(props: IHeaderCell) {\n  const { headData, headVirtualIndex, cellStyles, cellClassName, freezeType } = props;\n\n  const isFilterVisible = useIsFilterVisible();\n  const freezeLeftColumns = useFreezeLeftColumns();\n  const freezeRightColumns = useFreezeRightColumns();\n  const columns = useColumns();\n  const updateColumn = useUpdateColumn();\n  const updateFreezeColumn = useUpdateFreezeColumn();\n\n  const selectAll = useSelectAll();\n  const deselectedRowKeys = useDeselectedRowKeys();\n\n  const columnVirtualizer = useColumnVirtualizer();\n  const headerMode = useHeaderMode();\n\n  const isCheckboxHeader = headData?.key === 'row-selection';\n  const isExpandHeader = headData?.key === 'expand';\n  const isActionHeader = headData?.key === 'action';\n  const isSingleHeader = headerMode === 'single';\n  const isGroupHeader = headData?.key.startsWith('group-header-');\n  const isShowNormalCell = !isCheckboxHeader && !isExpandHeader && !isActionHeader && !isGroupHeader;\n  const renderHeader = headData?.renderHeader;\n  const hideFilter = headData?.hideFilter;\n\n  const handleResizeColumn = useCallback(\n    (e: React.MouseEvent, index: number, freezeType?: 'left' | 'right') => {\n      e.preventDefault();\n      const startX = e.clientX;\n      let startWidth: number;\n\n      if (freezeType === 'left') {\n        startWidth = freezeLeftColumns[index].width!;\n      } else if (freezeType === 'right') {\n        startWidth = freezeRightColumns[index].width!;\n      } else {\n        startWidth = columns[index].width!;\n      }\n\n      const resizeLine = document.getElementById('resize-line')!;\n      resizeLine.style.display = 'block';\n      resizeLine.style.left = `${e.clientX}px`;\n\n      const onMouseMove = (ev: MouseEvent) => {\n        requestAnimationFrame(() => {\n          resizeLine.style.left = `${ev.clientX}px`;\n        });\n      };\n\n      const onMouseUp = (ev: MouseEvent) => {\n        resizeLine.style.display = 'none';\n        const delta = ev.clientX - startX;\n        const newWidth = Math.max(50, startWidth + delta);\n\n        requestAnimationFrame(() => {\n          if (freezeType === 'left') {\n            updateFreezeColumn(freezeLeftColumns[index].key, 'left', { width: newWidth });\n          } else if (freezeType === 'right') {\n            updateFreezeColumn(freezeRightColumns[index].key, 'right', { width: newWidth });\n          } else {\n            updateColumn(columns[index].key, { width: newWidth });\n            columnVirtualizer?.resizeItem(index, newWidth);\n          }\n        });\n\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n      };\n\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n    },\n    [freezeLeftColumns, freezeRightColumns, columns, updateFreezeColumn, updateColumn, columnVirtualizer],\n  );\n\n  return (\n    <TableHead\n      style={cellStyles}\n      className={clsx(\n        'flex size-full relative',\n        {\n          'group/outer': !isGroupHeader,\n          '!px-0 flex flex-col': isGroupHeader,\n          'flex-row justify-between items-center': isSingleHeader && !isGroupHeader,\n          'flex-col justify-between items-start !px-0': !isSingleHeader && !isGroupHeader,\n        },\n        cellClassName,\n      )}\n    >\n      {isGroupHeader && (\n        <>\n          <div\n            style={{ height: DEFAULT_SIZE.GROUP_HEADER_HEIGHT }}\n            className={clsx(\n              'w-full border-b border-gray-200 text-center content-center',\n              freezeType === 'right' ? 'border-l' : 'border-r',\n            )}\n          >\n            {headData?.caption}\n          </div>\n\n          <div className='flex-1 w-full flex min-h-0'>\n            {headData?.children?.map((child) => (\n              <HeaderCellNested\n                key={'header-cell-nested-' + freezeType + '-' + child.key}\n                headData={child}\n                parentKey={headData.key}\n                parentVirtualIndex={headVirtualIndex}\n                freezeType={freezeType}\n              />\n            ))}\n          </div>\n        </>\n      )}\n\n      {renderHeader && renderHeader()}\n\n      {!renderHeader && isShowNormalCell && (\n        <>\n          <HeaderCaption\n            isSingleHeader={isSingleHeader}\n            isFilterVisible={isFilterVisible}\n            headerKey={headData?.key}\n            caption={headData?.caption}\n            hideFilterSort={hideFilter?.sort || false}\n          />\n\n          {isFilterVisible && (\n            <HeaderFilter\n              headerMode={headerMode}\n              headerKey={headData?.key}\n              hideFilter={hideFilter}\n              filterSelectionOptions={headData?.filterSelectionOptions || []}\n            />\n          )}\n\n          <ResizeIndicator handleMouseDown={(e) => handleResizeColumn(e, headVirtualIndex, freezeType)} />\n        </>\n      )}\n\n      {!renderHeader && isCheckboxHeader && <RowCheckbox checked={selectAll && !deselectedRowKeys.size} />}\n    </TableHead>\n  );\n}\n\nexport default HeaderCell;\n","import { memo, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { RowCheckbox, RowExpand, TableCell } from '..';\nimport type { IAdjustedHeader } from '../../lib';\nimport { useUseDynamicRowHeight } from '../../context/virtualizer-context';\nimport { useClassNameCell } from '../../context/ui-context';\n\ninterface IBodyCell<TData> {\n  rowKey: string;\n  rowData: TData;\n  isRowChecked: boolean;\n  isRowExpanded: boolean;\n  column: IAdjustedHeader;\n  isVisible?: boolean;\n  isRowHighlighted?: boolean;\n  isFirstIndex?: boolean;\n  isLastIndex?: boolean;\n  position: {\n    left: number;\n    width: number;\n    height: number;\n    virtualHeight?: number;\n  };\n  freezeMode?: 'left' | 'right' | 'none';\n  freezeLeftColumnsWidth?: number;\n  freezeRightColumnsWidth?: number;\n  rowIndex?: number;\n  columnIndex?: number;\n}\n\nfunction BodyCell<TData>(bodyCellProps: IBodyCell<TData>) {\n  const {\n    rowKey,\n    rowData,\n    isRowChecked,\n    isRowExpanded,\n    column,\n    isVisible = true,\n    isRowHighlighted = false,\n    isFirstIndex = false,\n    isLastIndex = false,\n    position,\n    freezeMode = 'none',\n    freezeLeftColumnsWidth = 0,\n    freezeRightColumnsWidth = 0,\n    rowIndex = 0,\n    columnIndex = 0,\n  } = bodyCellProps;\n\n  const classNameCell = useClassNameCell();\n  const useDynamicRowHeight = useUseDynamicRowHeight();\n\n  const isCheckboxColumn = column?.key === 'row-selection';\n  const isExpandColumn = column?.key === 'expand';\n\n  const cellValue = useMemo(() => String(rowData[column?.key as keyof typeof rowData] || ''), [rowData, column?.key]);\n  const cellRender = column?.renderCell;\n  const cellExpandToggle = column?.renderExpandToggle;\n\n  // Memoize custom className untuk performa optimal\n  const customClassName = useMemo(() => {\n    if (!classNameCell) return '';\n    return classNameCell(rowData, rowIndex, columnIndex);\n  }, [classNameCell, rowData, rowIndex, columnIndex]);\n\n  const classNames = useMemo(() => {\n    const baseClasses = {\n      'group-hover/row-cells:!bg-[#ECEEFF] dark:group-hover/row-cells:!bg-[#2F3574] group-hover/row-cells:!text-black-100':\n        !isRowHighlighted,\n      '!hidden': !isVisible,\n    };\n\n    if (freezeMode === 'left') {\n      return clsx('table-cell border-r bg-white dark:bg-black/50 backdrop-blur-2xl break-words', customClassName, {\n        ...baseClasses,\n        truncate: !useDynamicRowHeight,\n        '!border-b !border-l !border-t !border-y-[#2F3574] nth-[1]:border-l-[#2F3574]': isRowHighlighted,\n      });\n    }\n\n    if (freezeMode === 'right') {\n      return clsx('table-cell border-l bg-white dark:bg-black/50 backdrop-blur-2xl break-words', customClassName, {\n        ...baseClasses,\n        truncate: !useDynamicRowHeight,\n        '!border-y !border-y-[#2F3574]': isRowHighlighted,\n        '!border-r !border-r-[#2F3574]': isRowHighlighted && isLastIndex,\n      });\n    }\n\n    return clsx('table-cell border-r break-words', customClassName, {\n      ...baseClasses,\n      truncate: !useDynamicRowHeight,\n      '!border-r-transparent': isLastIndex && !isRowHighlighted,\n      '!border-r-[#2F3574]': isLastIndex && isRowHighlighted && !freezeRightColumnsWidth,\n      'border-l border-l-[#2F3574]': isRowHighlighted && !freezeLeftColumnsWidth && isFirstIndex,\n      'nth-last-[1]:!border-r-[#2F3574]': isRowHighlighted && !freezeRightColumnsWidth,\n      '!border-b !border-t !border-y-[#2F3574]': isRowHighlighted,\n    });\n  }, [\n    freezeMode,\n    isRowHighlighted,\n    isVisible,\n    freezeLeftColumnsWidth,\n    freezeRightColumnsWidth,\n    isFirstIndex,\n    isLastIndex,\n    customClassName,\n    useDynamicRowHeight,\n  ]);\n\n  const cellStyle = useMemo(() => {\n    if (useDynamicRowHeight) {\n      // For dynamic row height, use flex layout - position.left is ignored\n      return {\n        flex: `0 0 ${position.width}px`,\n        top: 0,\n        minWidth: position.width,\n        maxWidth: position.width,\n        minHeight: position.height,\n      };\n    }\n\n    // For fixed row height, use absolute positioning\n    return {\n      position: 'absolute' as const,\n      minHeight: position.height,\n      transform: `translateX(${position.left}px)`,\n      minWidth: position.width,\n      width: position.width,\n      top: 0,\n    };\n  }, [position.height, position.left, position.width, useDynamicRowHeight]);\n\n  const cellContent = useMemo(() => {\n    if (isCheckboxColumn) return <RowCheckbox checked={isRowChecked} />;\n\n    if (isExpandColumn) {\n      if (!cellExpandToggle) {\n        return <RowExpand isExpanded={isRowExpanded} />;\n      }\n      const customExpand = cellExpandToggle(rowData, isRowExpanded);\n      if (typeof customExpand === 'undefined' || customExpand === null) {\n        return <RowExpand isExpanded={isRowExpanded} />;\n      }\n      return customExpand;\n    }\n\n    return cellRender?.(rowData) || cellValue || '';\n  }, [isCheckboxColumn, isExpandColumn, isRowChecked, isRowExpanded, cellRender, rowData, cellValue, cellExpandToggle]);\n\n  return (\n    <TableCell\n      key={'table-cell-' + String(column.key)}\n      data-row-key={rowKey}\n      data-row-index={rowIndex}\n      data-cell-index={columnIndex}\n      data-col-key={String(column.key)}\n      className={classNames}\n      style={cellStyle}\n    >\n      {cellContent}\n    </TableCell>\n  );\n}\n\nexport default memo(BodyCell) as <TData>(props: IBodyCell<TData>) => React.ReactElement;\n","import { memo, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { TableCell } from '..';\nimport type { IAdjustedHeader } from '../../lib';\n\ninterface IFooterCell {\n  column: IAdjustedHeader;\n  isVisible?: boolean;\n  isLastIndex?: boolean;\n  freezeMode?: 'left' | 'right' | 'none';\n  freezeRightColumnsWidth?: number;\n  position: {\n    left: number;\n    width: number;\n    height: number;\n  };\n}\n\nfunction FooterCell(footerCellProps: IFooterCell) {\n  const {\n    column,\n    isVisible = true,\n    isLastIndex = false,\n    freezeMode = 'none',\n    freezeRightColumnsWidth = 0,\n    position,\n  } = footerCellProps;\n\n  const classNames = useMemo(() => {\n    if (freezeMode === 'left') {\n      return clsx('bg-gray-50 border-t border-r truncate !px-0', {\n        '!hidden': !isVisible,\n      });\n    }\n\n    if (freezeMode === 'right') {\n      return clsx('bg-gray-50 border-t border-l nth-[1]:!border-l truncate !px-0', {\n        '!hidden': !isVisible,\n      });\n    }\n\n    return clsx('bg-gray-50 table-cell truncate border-t border-r nth-last-[1]:!border-r-transparent !px-0', {\n      '!border-r-transparent': isLastIndex && freezeRightColumnsWidth > 0,\n      '!hidden': !isVisible,\n    });\n  }, [freezeMode, isVisible, isLastIndex, freezeRightColumnsWidth]);\n\n  const cellStyle = useMemo(\n    () => ({\n      position: 'absolute' as const,\n      height: position.height,\n      transform: `translateX(${position.left}px)`,\n      width: position.width,\n      top: 0,\n    }),\n    [position.height, position.left, position.width]\n  );\n\n  const cellContent = useMemo(() => column.renderFooter?.(), [column.renderFooter]);\n\n  return (\n    <TableCell\n      key={'table-footer-cell-' + String(column.key)}\n      data-col-key={String(column.key)}\n      className={classNames}\n      style={cellStyle}\n    >\n      {cellContent}\n    </TableCell>\n  );\n}\n\nexport default memo(FooterCell) as (props: IFooterCell) => React.ReactElement;\n","import { createPortal } from 'react-dom';\n\nfunction ResizeLine() {\n  return createPortal(\n    <div\n      id=\"resize-line\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        width: '1px',\n        height: '100vh',\n        background: '#dbeafe',\n        display: 'none',\n        zIndex: 999999,\n        pointerEvents: 'none',\n      }}\n    />,\n    document.body\n  );\n}\n\nexport default ResizeLine;\n","import { forwardRef, memo, type ReactNode } from 'react';\nimport clsx from 'clsx';\nimport { type IAdjustedHeader } from './lib';\nimport { HeaderCell } from './components';\nimport ResizeLine from './components/resize-line';\nimport {\n  useColumns,\n  useFreezeLeftColumns,\n  useFreezeLeftColumnsWidth,\n  useFreezeRightColumns,\n  useFreezeRightColumnsWidth,\n} from './context/header-context';\nimport { useColumnVirtualItems, useContainerWidth, useEnableColumnVirtualization } from './context/virtualizer-context';\nimport { useSelectAll, useToggleSelectAll } from './context/selection-context';\nimport {\n  useCalcHeaderTotalHeight,\n  useCalcTotalTableWidth,\n  useFreezeColLeftPositions,\n  useFreezeColRightPositions,\n} from './context/ui-context';\n\nconst VirtualTableHeaderV2 = forwardRef(\n  (props: React.HTMLAttributes<HTMLDivElement>, ref: React.Ref<HTMLDivElement>) => {\n    const { className, ...propRest } = props;\n\n    const columns = useColumns();\n    const freezeLeftColumns = useFreezeLeftColumns();\n    const freezeRightColumns = useFreezeRightColumns();\n    const freezeLeftColumnsWidth = useFreezeLeftColumnsWidth();\n    const freezeRightColumnsWidth = useFreezeRightColumnsWidth();\n\n    const columnVirtualItems = useColumnVirtualItems();\n    const containerWidth = useContainerWidth();\n    const enableColumnVirtualization = useEnableColumnVirtualization();\n\n    const selectAll = useSelectAll();\n    const toggleSelectAll = useToggleSelectAll();\n\n    const freezeColLeftPositions = useFreezeColLeftPositions();\n    const freezeColRightPositions = useFreezeColRightPositions();\n    const calcTotalTableWidth = useCalcTotalTableWidth();\n    const calcHeaderTotalHeight = useCalcHeaderTotalHeight();\n\n    const handleCheckboxChange = (e: React.ChangeEvent<HTMLTableSectionElement>): void => {\n      const target = e.target as HTMLElement | null;\n      const headerCheckbox = (target as HTMLInputElement).closest('[data-name=\"header-checkbox\"]');\n\n      if (!target || !headerCheckbox) return;\n      const isCheckbox = (target as HTMLInputElement).type === 'checkbox';\n\n      if (!isCheckbox) return;\n      toggleSelectAll(!selectAll);\n    };\n\n    const renderFreezeLeftColumns = () => {\n      return freezeLeftColumns.map((column, freezeLeftIdx) => {\n        const hasChildren = column?.children;\n\n        return (\n          <HeaderCell\n            key={'table-head-freeze-left-' + column.key}\n            freezeType='left'\n            headData={column}\n            headVirtualIndex={freezeLeftIdx}\n            cellStyles={{\n              position: 'absolute',\n              transform: `translateX(${freezeColLeftPositions[freezeLeftIdx]}px)`,\n              height: calcHeaderTotalHeight,\n              width: column.width!,\n              top: 0,\n            }}\n            cellClassName={clsx(!hasChildren && 'border-r')}\n          />\n        );\n      });\n    };\n\n    const renderFreezeRightColumns = () => {\n      return freezeRightColumns.map((column, freezeRightIdx) => {\n        const hasChildren = column?.children;\n\n        return (\n          <HeaderCell\n            key={'table-head-freeze-right-' + column.key}\n            headData={column}\n            headVirtualIndex={freezeRightIdx}\n            freezeType='right'\n            cellStyles={{\n              position: 'absolute',\n              transform: `translateX(${freezeColRightPositions[freezeRightIdx]}px)`,\n              height: calcHeaderTotalHeight,\n              width: column.width!,\n              top: 0,\n            }}\n            cellClassName={clsx(!hasChildren && 'border-l')}\n          />\n        );\n      });\n    };\n\n    const renderVirtualizedColumns = () => {\n      return columnVirtualItems?.map((column) => {\n        const header = columns[column.index];\n        const hasChildren = header?.children;\n        const isLastColumn = column.index === columns.length - 1;\n\n        return (\n          <HeaderCell\n            key={'table-head-' + column.key}\n            headData={header as IAdjustedHeader}\n            headVirtualIndex={column.index}\n            cellStyles={{\n              position: 'absolute',\n              transform: `translateX(${column.start + freezeLeftColumnsWidth}px)`,\n              height: calcHeaderTotalHeight,\n              width: column.size,\n              top: 0,\n            }}\n            cellClassName={clsx(!hasChildren && 'border-r', isLastColumn && 'border-r-transparent')}\n          />\n        );\n      });\n    };\n\n    const renderRegularColumns = () => {\n      let accumulatedLeft = freezeLeftColumnsWidth;\n\n      return columns.flatMap((column, columnIndex) => {\n        const hasChildren = column?.children;\n        const isGroupHeader = column.key.startsWith('group-header-');\n        const isLastColumn = columnIndex === columns.length - 1;\n\n        if (isGroupHeader && hasChildren) {\n          const left = accumulatedLeft;\n          const columnWidth = column.width || 0;\n          accumulatedLeft += columnWidth;\n\n          return [\n            <HeaderCell\n              key={'table-head-regular-group-' + String(column.key)}\n              headData={column as IAdjustedHeader}\n              headVirtualIndex={columnIndex}\n              cellStyles={{\n                position: 'absolute',\n                transform: `translateX(${left}px)`,\n                height: calcHeaderTotalHeight,\n                width: columnWidth,\n                top: 0,\n              }}\n              cellClassName={clsx('border-r')}\n            />,\n          ];\n        }\n\n        const left = accumulatedLeft;\n        const columnWidth = column.width || 0;\n        accumulatedLeft += columnWidth;\n\n        return [\n          <HeaderCell\n            key={'table-head-regular-' + String(column.key)}\n            headData={column as IAdjustedHeader}\n            headVirtualIndex={columnIndex}\n            cellStyles={{\n              position: 'absolute',\n              transform: `translateX(${left}px)`,\n              height: calcHeaderTotalHeight,\n              width: columnWidth,\n              top: 0,\n            }}\n            cellClassName={clsx(!hasChildren && 'border-r', isLastColumn && 'border-r-transparent')}\n          />,\n        ];\n      });\n    };\n\n    return (\n      <div\n        className={clsx('sticky top-0 z-10', className)}\n        onChange={handleCheckboxChange}\n        ref={ref as React.Ref<HTMLDivElement>}\n        {...propRest}\n      >\n        <div className='table-header relative flex h-full' style={{ width: calcTotalTableWidth }}>\n          <div className='sticky left-0 z-20 h-full' style={{ width: freezeLeftColumnsWidth }}>\n            {renderFreezeLeftColumns()}\n          </div>\n\n          <div className='sticky z-20 h-full' style={{ left: containerWidth - freezeRightColumnsWidth }}>\n            {renderFreezeRightColumns()}\n          </div>\n\n          {enableColumnVirtualization ? renderVirtualizedColumns() : renderRegularColumns()}\n\n          <ResizeLine />\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default memo(VirtualTableHeaderV2) as (props: React.HTMLAttributes<HTMLDivElement>) => ReactNode;\n","import { memo } from 'react';\nimport { FooterCell } from './components';\nimport {\n  useColumns,\n  useFreezeLeftColumns,\n  useFreezeLeftColumnsWidth,\n  useFreezeRightColumns,\n  useFreezeRightColumnsWidth,\n  useGetLeaves,\n} from './context/header-context';\nimport { useColumnVirtualItems, useContainerHeight, useContainerWidth } from './context/virtualizer-context';\nimport { useCalcTotalTableWidth, useFreezeColLeftPositions, useFreezeColRightPositions } from './context/ui-context';\n\ninterface IVirtualTableFooter {\n  footerHeight: number;\n}\n\nconst VirtualTableFooter = ({ footerHeight }: IVirtualTableFooter) => {\n  const columns = useColumns();\n  const freezeLeftColumns = useFreezeLeftColumns();\n  const freezeRightColumns = useFreezeRightColumns();\n  const freezeLeftColumnsWidth = useFreezeLeftColumnsWidth();\n  const freezeRightColumnsWidth = useFreezeRightColumnsWidth();\n  const getLeaves = useGetLeaves();\n\n  const containerHeight = useContainerHeight();\n  const containerWidth = useContainerWidth();\n  const columnVirtualItems = useColumnVirtualItems();\n\n  const calcTotalTableWidth = useCalcTotalTableWidth();\n  const freezeColLeftPositions = useFreezeColLeftPositions();\n  const freezeColRightPositions = useFreezeColRightPositions();\n\n  const renderFreezeLeftFooters = () => {\n    return freezeLeftColumns.flatMap((column, freezeLeftIdx) => {\n      const isGroupHeader = column.key.startsWith('group-header-');\n\n      if (isGroupHeader) {\n        let childOffset = 0;\n\n        return getLeaves(column).map((leaf) => {\n          const left = freezeColLeftPositions[freezeLeftIdx] + childOffset;\n          childOffset += leaf.width || 0;\n\n          return (\n            <FooterCell\n              key={'table-footer-cell-freeze-left-group-' + String(leaf.key)}\n              column={leaf}\n              freezeMode='left'\n              position={{\n                left,\n                width: leaf.width!,\n                height: footerHeight,\n              }}\n            />\n          );\n        });\n      }\n\n      return [\n        <FooterCell\n          key={'table-footer-cell-freeze-left-' + String(column.key)}\n          column={column}\n          freezeMode='left'\n          position={{\n            left: freezeColLeftPositions[freezeLeftIdx],\n            width: column.width!,\n            height: footerHeight,\n          }}\n        />,\n      ];\n    });\n  };\n\n  const renderFreezeRightFooters = () => {\n    return freezeRightColumns.flatMap((column, freezeRightIdx) => {\n      const isGroupHeader = column.key.startsWith('group-header-');\n\n      if (isGroupHeader) {\n        let childOffset = 0;\n\n        return getLeaves(column).map((leaf) => {\n          const left = freezeColRightPositions[freezeRightIdx] + childOffset;\n          childOffset += leaf.width || 0;\n\n          return (\n            <FooterCell\n              key={'table-footer-cell-freeze-right-group-' + String(leaf.key)}\n              column={leaf}\n              freezeMode='right'\n              position={{\n                left,\n                width: leaf.width!,\n                height: footerHeight,\n              }}\n            />\n          );\n        });\n      }\n\n      return [\n        <FooterCell\n          key={'table-footer-cell-freeze-right-' + String(column.key)}\n          column={column}\n          freezeMode='right'\n          position={{\n            left: freezeColRightPositions[freezeRightIdx],\n            width: column.width!,\n            height: footerHeight,\n          }}\n        />,\n      ];\n    });\n  };\n\n  const renderVirtualizedFooters = () => {\n    return columnVirtualItems.flatMap((column, columnIndex) => {\n      const header = columns?.[column.index];\n      const isLastIndex = columnIndex === columnVirtualItems.length - 1;\n      const isGroupHeader = header?.key.startsWith('group-header-');\n\n      if (isGroupHeader) {\n        const baseLeft = column.start + freezeLeftColumnsWidth;\n        let childOffset = 0;\n\n        return getLeaves(header).map((leaf) => {\n          const left = baseLeft + childOffset;\n          childOffset += leaf.width || 0;\n\n          return (\n            <FooterCell\n              key={'table-footer-cell-virtualized-group-' + column.key + '-' + String(leaf.key)}\n              column={leaf}\n              isLastIndex={isLastIndex}\n              freezeRightColumnsWidth={freezeRightColumnsWidth}\n              position={{\n                left,\n                width: leaf.width!,\n                height: footerHeight,\n              }}\n            />\n          );\n        });\n      }\n\n      return [\n        <FooterCell\n          key={'table-footer-cell-virtualized-' + column.key}\n          column={header}\n          isLastIndex={isLastIndex}\n          freezeRightColumnsWidth={freezeRightColumnsWidth}\n          position={{\n            left: column.start + freezeLeftColumnsWidth,\n            width: column.size,\n            height: footerHeight,\n          }}\n        />,\n      ];\n    });\n  };\n\n  return (\n    <div className='sticky z-30 bottom-0' style={{ height: footerHeight, top: containerHeight - footerHeight }}>\n      <div className='relative flex' style={{ width: calcTotalTableWidth }}>\n        <div className='sticky left-0 z-40' style={{ width: freezeLeftColumnsWidth }}>\n          {renderFreezeLeftFooters()}\n        </div>\n        <div className='sticky z-40' style={{ left: containerWidth - freezeRightColumnsWidth }}>\n          {renderFreezeRightFooters()}\n        </div>\n\n        {renderVirtualizedFooters()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(VirtualTableFooter);\n","import { forwardRef, memo, useMemo, type ReactNode } from 'react';\nimport { BodyCell, RowExpandedContent } from './components';\nimport type { IAdjustedHeader } from './lib';\nimport clsx from 'clsx';\nimport {\n  useColumns,\n  useFreezeLeftColumns,\n  useFreezeLeftColumnsWidth,\n  useFreezeRightColumns,\n  useFreezeRightColumnsWidth,\n  useGetLeaves,\n} from './context/header-context';\nimport {\n  useContainerWidth,\n  useColumnVirtualItems,\n  useFlattenedData,\n  useRowVirtualItems,\n  useRowVirtualizer,\n  useUseDynamicRowHeight,\n  useEnableColumnVirtualization,\n  useToggleExpandRow,\n} from './context/virtualizer-context';\nimport {\n  useDeselectedRowKeys,\n  useExpandedRowKeys,\n  useOnClickRow,\n  useSelectAll,\n  useSelectedRowKey,\n  useSelectedRowKeys,\n  useToggleRowSelection,\n} from './context/selection-context';\nimport {\n  useFreezeColLeftPositions,\n  useCalcTotalTableWidth,\n  useExpandedContent,\n  useUseFooter,\n  useFreezeColRightPositions,\n  useCalcHeaderTotalHeight,\n} from './context/ui-context';\n\ninterface IVirtualTableBody<TData> {\n  headerHeight: number;\n  footerHeight: number;\n  filterHeight: number;\n  rowHeight: number;\n  headerMode: 'single' | 'double';\n  onClickRowToParent?: (item: TData, rowIndex: number, columnIndex: number) => void;\n  onDoubleClickRowToParent?: (item: TData, rowIndex: number, columnIndex: number) => void;\n  onRightClickRowToParent?: (item: TData, position: { x: number; y: number }) => void;\n}\n\nconst VirtualTableBody = forwardRef(<TData,>(props: IVirtualTableBody<TData>, ref: React.Ref<HTMLDivElement>) => {\n  const { footerHeight, rowHeight, onClickRowToParent, onDoubleClickRowToParent, onRightClickRowToParent } = props;\n\n  const freezeLeftColumns = useFreezeLeftColumns();\n  const freezeRightColumns = useFreezeRightColumns();\n  const freezeRightColumnsWidth = useFreezeRightColumnsWidth();\n  const freezeLeftColumnsWidth = useFreezeLeftColumnsWidth();\n  const columns = useColumns();\n  const getLeaves = useGetLeaves();\n\n  const useDynamicRowHeight = useUseDynamicRowHeight();\n  const flattenedData = useFlattenedData();\n  const rowVirtualizer = useRowVirtualizer();\n  const rowVirtualItems = useRowVirtualItems();\n  const columnVirtualItems = useColumnVirtualItems();\n  const containerWidth = useContainerWidth();\n  const enableColumnVirtualization = useEnableColumnVirtualization();\n\n  const selectAll = useSelectAll();\n  const onClickRow = useOnClickRow();\n  const selectedRowKey = useSelectedRowKey();\n  const selectedRowKeys = useSelectedRowKeys();\n  const deselectedRowKeys = useDeselectedRowKeys();\n  const toggleRowSelection = useToggleRowSelection();\n  const toggleExpandRow = useToggleExpandRow();\n  const expandedRowKeys = useExpandedRowKeys();\n\n  const useFooter = useUseFooter();\n  const expandedContent = useExpandedContent();\n  const calcTotalTableWidth = useCalcTotalTableWidth();\n  const freezeColLeftPositions = useFreezeColLeftPositions();\n  const freezeColRightPositions = useFreezeColRightPositions();\n  const calcHeaderTotalHeight = useCalcHeaderTotalHeight();\n\n  // NOTE: Membuat map untuk row key\n  const rowMap = useMemo(() => {\n    const map = new Map<string | number, TData>();\n\n    flattenedData.forEach((d) => {\n      if (d.type === 'row') {\n        map.set(String((d as unknown as { key: string }).key), d.item as TData);\n      }\n    });\n\n    return map;\n  }, [flattenedData]);\n\n  // NOTE: Menangani klik pada row\n  const handleClickRow = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const cell = (e.target as HTMLElement).closest('div.table-cell');\n    const btnExpand = (e.target as HTMLElement).closest('[data-action=\"expand\"]');\n\n    // NOTE: Jika klik pada cell dan bukan pada button expand\n    if (cell && !btnExpand && onClickRowToParent) {\n      const rowKeyAttr = cell.getAttribute('data-row-key');\n      const rowIndex = Number(cell.getAttribute('data-row-index'));\n      const columnIndex = Number(cell.getAttribute('data-cell-index'));\n      const rowData = rowMap.get(rowKeyAttr || '');\n\n      onClickRow?.(rowKeyAttr);\n      onClickRowToParent?.(rowData as TData, rowIndex, columnIndex);\n    }\n\n    // NOTE: Jika klik pada button expand\n    if (btnExpand) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const cell = btnExpand.closest('div.table-cell');\n      if (!cell) return;\n\n      const rowKeyAttr = cell?.getAttribute('data-row-key');\n      if (rowKeyAttr) toggleExpandRow(rowKeyAttr);\n    }\n  };\n\n  // NOTE: Menangani klik double pada row\n  const handleDoubleClickRow = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const btnExpand = (e.target as HTMLElement).closest('[data-action=\"expand\"]');\n\n    if (btnExpand || !onDoubleClickRowToParent) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    const cell = (e.target as HTMLElement).closest('div');\n    if (!cell) return;\n\n    const rowKeyAttr = cell.getAttribute('data-row-key');\n    const rowIndex = Number(cell.getAttribute('data-row-index'));\n    const columnIndex = Number(cell.getAttribute('data-cell-index'));\n    const rowData = rowMap.get(rowKeyAttr || '');\n    onDoubleClickRowToParent?.(rowData as TData, rowIndex, columnIndex);\n  };\n\n  // NOTE: Menangani klik kanan pada row\n  const handleContextMenu = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (!onRightClickRowToParent) return;\n\n    const cell = (e.target as HTMLElement).closest('div');\n    if (!cell) return;\n\n    const rowKeyAttr = cell.getAttribute('data-row-key');\n    const rowData = rowMap.get(rowKeyAttr || '');\n    onClickRow?.(rowKeyAttr);\n    onRightClickRowToParent?.(rowData as TData, { x: e.clientX, y: e.clientY });\n  };\n\n  // NOTE: Menangani perubahan pada checkbox selection\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLDivElement>): void => {\n    const target = e.target as HTMLElement | null;\n    if (!target) return;\n\n    const isCheckbox = (target as HTMLInputElement).type === 'checkbox';\n\n    if (isCheckbox) {\n      const cell = target.closest('div.table-cell');\n\n      if (!cell) return;\n\n      const rowKeyAttr = cell.getAttribute('data-row-key');\n      if (rowKeyAttr) toggleRowSelection(rowKeyAttr);\n      return;\n    }\n  };\n\n  const calcBodyHeight = (rowVirtualizer?.getTotalSize() ?? 0) + (useFooter ? footerHeight : 0);\n\n  const renderFreezeLeftColumns = (\n    rowKey: string,\n    rowData: TData,\n    isRowChecked: boolean,\n    isRowExpanded: boolean,\n    rowIndex: number,\n  ) => {\n    return freezeLeftColumns.flatMap((column, freezeLeftIdx) => {\n      const isRowHighlighted = rowKey === String(selectedRowKey);\n      const isGroupColumn = column.key.startsWith('group-header-');\n\n      if (isGroupColumn) {\n        let childOffset = 0;\n\n        return getLeaves(column).map((child, childIdx) => {\n          const left = freezeColLeftPositions[freezeLeftIdx] + childOffset;\n          childOffset += child.width || 0;\n\n          return (\n            <BodyCell\n              freezeMode='left'\n              key={'table-cell-freeze-left-group-' + String(child.key)}\n              rowKey={rowKey}\n              rowData={rowData}\n              isRowChecked={isRowChecked}\n              isRowExpanded={isRowExpanded}\n              column={child}\n              isVisible={child.visible}\n              isRowHighlighted={isRowHighlighted}\n              rowIndex={rowIndex}\n              columnIndex={childIdx}\n              position={{\n                left,\n                width: child.width!,\n                height: rowHeight,\n              }}\n            />\n          );\n        });\n      }\n\n      return [\n        <BodyCell\n          freezeMode='left'\n          key={'table-cell-freeze-left-' + String(column.key)}\n          rowKey={rowKey}\n          rowData={rowData}\n          isRowChecked={isRowChecked}\n          isRowExpanded={isRowExpanded}\n          column={column}\n          isVisible={column.visible}\n          isRowHighlighted={isRowHighlighted}\n          rowIndex={rowIndex}\n          columnIndex={freezeLeftIdx}\n          position={{\n            left: freezeColLeftPositions[freezeLeftIdx],\n            width: column.width!,\n            height: rowHeight,\n          }}\n        />,\n      ];\n    });\n  };\n\n  const renderFreezeRightColumns = (\n    rowKey: string,\n    rowData: TData,\n    isRowChecked: boolean,\n    isRowExpanded: boolean,\n    rowIndex: number,\n  ) => {\n    return freezeRightColumns.flatMap((column, freezeRightIdx) => {\n      const isRowHighlighted = rowKey === String(selectedRowKey);\n      const isGroupColumn = column.key.startsWith('group-header-');\n      const isLastIndex = freezeRightIdx === freezeRightColumns.length - 1;\n\n      if (isGroupColumn) {\n        let childOffset = 0;\n\n        return getLeaves(column).map((child, childIdx) => {\n          const left = freezeColRightPositions[freezeRightIdx] + childOffset;\n          childOffset += child.width || 0;\n\n          return (\n            <BodyCell\n              freezeMode='right'\n              key={'table-cell-freeze-right-group-' + String(child.key)}\n              rowKey={rowKey}\n              rowData={rowData}\n              isRowChecked={isRowChecked}\n              isRowExpanded={isRowExpanded}\n              column={child}\n              isVisible={child.visible}\n              isRowHighlighted={isRowHighlighted}\n              isLastIndex={isLastIndex}\n              rowIndex={rowIndex}\n              columnIndex={childIdx}\n              position={{\n                left,\n                width: child.width!,\n                height: rowHeight,\n              }}\n            />\n          );\n        });\n      }\n\n      return [\n        <BodyCell\n          freezeMode='right'\n          key={'table-cell-freeze-right-' + String(column.key)}\n          rowKey={rowKey}\n          rowData={rowData}\n          isRowChecked={isRowChecked}\n          isRowExpanded={isRowExpanded}\n          column={column}\n          isVisible={column.visible}\n          isRowHighlighted={isRowHighlighted}\n          isLastIndex={isLastIndex}\n          rowIndex={rowIndex}\n          columnIndex={freezeRightIdx}\n          position={{\n            left: freezeColRightPositions[freezeRightIdx],\n            width: column.width!,\n            height: rowHeight,\n          }}\n        />,\n      ];\n    });\n  };\n\n  const renderVirtualizedColumns = (\n    rowKey: string,\n    rowData: TData,\n    isRowChecked: boolean,\n    isRowExpanded: boolean,\n    rowIndex: number,\n  ) => {\n    // Flatten all columns (including grouped children) to calculate proper first/last indices\n    const allFlattenedColumns: { header: IAdjustedHeader; isGroupChild: boolean; groupIndex?: number }[] = [];\n\n    columnVirtualItems.forEach((column) => {\n      const header = columns?.[column.index];\n      const isGroupHeader = header?.key.startsWith('group-header-');\n\n      if (isGroupHeader) {\n        const leaves = getLeaves(header);\n        leaves.forEach((child) => {\n          allFlattenedColumns.push({ header: child, isGroupChild: true });\n        });\n      } else {\n        allFlattenedColumns.push({ header: header!, isGroupChild: false });\n      }\n    });\n\n    return columnVirtualItems.flatMap((column, columnIndex) => {\n      const header = columns?.[column.index];\n      const isRowHighlighted = rowKey === String(selectedRowKey);\n      const isGroupHeader = header?.key.startsWith('group-header-');\n\n      if (isGroupHeader) {\n        const baseLeft = column.start + freezeLeftColumnsWidth;\n        let childOffset = 0;\n        const leaves = getLeaves(header);\n\n        return leaves.map((child, childIdx) => {\n          const childWidth = (child.width || 0) * (header.width ? column.size / header.width : 1);\n          const left = baseLeft + childOffset;\n          childOffset += childWidth;\n\n          // Find the index of this child in the flattened columns array\n          const flattenedIndex = allFlattenedColumns.findIndex(\n            (item) => item.header.key === child.key && item.isGroupChild,\n          );\n          const isFirstIndex = flattenedIndex === 0;\n          const isLastIndex = flattenedIndex === allFlattenedColumns.length - 1;\n\n          return (\n            <BodyCell\n              key={'table-cell-group-child-' + column.key + '-' + String(child.key)}\n              rowKey={rowKey}\n              rowData={rowData}\n              isRowChecked={isRowChecked}\n              isRowExpanded={isRowExpanded}\n              column={child}\n              isVisible={child.visible}\n              isRowHighlighted={isRowHighlighted}\n              isFirstIndex={isFirstIndex}\n              isLastIndex={isLastIndex}\n              rowIndex={rowIndex}\n              columnIndex={childIdx}\n              position={{ left, width: childWidth, height: rowHeight }}\n              freezeLeftColumnsWidth={freezeLeftColumnsWidth}\n              freezeRightColumnsWidth={freezeRightColumnsWidth}\n            />\n          );\n        });\n      }\n\n      // Find the index of this column in the flattened columns array\n      const flattenedIndex = allFlattenedColumns.findIndex(\n        (item) => item.header.key === header?.key && !item.isGroupChild,\n      );\n      const isFirstIndex = flattenedIndex === 0;\n      const isLastIndex = flattenedIndex === allFlattenedColumns.length - 1;\n\n      return [\n        <BodyCell\n          key={'table-cell-' + column.key}\n          rowKey={rowKey}\n          rowData={rowData}\n          isRowChecked={isRowChecked}\n          isRowExpanded={isRowExpanded}\n          column={header}\n          isVisible={header?.visible}\n          isRowHighlighted={isRowHighlighted}\n          isFirstIndex={isFirstIndex}\n          isLastIndex={isLastIndex}\n          rowIndex={rowIndex}\n          columnIndex={columnIndex}\n          position={{\n            left: column.start + freezeLeftColumnsWidth,\n            width: column.size,\n            height: rowHeight,\n          }}\n          freezeLeftColumnsWidth={freezeLeftColumnsWidth}\n          freezeRightColumnsWidth={freezeRightColumnsWidth}\n        />,\n      ];\n    });\n  };\n\n  const renderRegularColumns = (\n    rowKey: string,\n    rowData: TData,\n    isRowChecked: boolean,\n    isRowExpanded: boolean,\n    rowIndex: number,\n  ) => {\n    let accumulatedLeft = freezeLeftColumnsWidth;\n\n    return columns.flatMap((column, columnIndex) => {\n      const isRowHighlighted = rowKey === String(selectedRowKey);\n      const isGroupHeader = column.key.startsWith('group-header-');\n\n      if (isGroupHeader) {\n        const baseLeft = accumulatedLeft;\n        let childOffset = 0;\n        const leaves = getLeaves(column);\n\n        const groupChildren = leaves.map((child, childIdx) => {\n          const childWidth = child.width || 0;\n          const left = baseLeft + childOffset;\n          childOffset += childWidth;\n\n          const result = (\n            <BodyCell\n              key={'table-cell-regular-group-child-' + String(column.key) + '-' + String(child.key)}\n              rowKey={rowKey}\n              rowData={rowData}\n              isRowChecked={isRowChecked}\n              isRowExpanded={isRowExpanded}\n              column={child}\n              isVisible={child.visible}\n              isRowHighlighted={isRowHighlighted}\n              isFirstIndex={columnIndex === 0 && childIdx === 0}\n              isLastIndex={columnIndex === columns.length - 1 && childIdx === leaves.length - 1}\n              rowIndex={rowIndex}\n              columnIndex={childIdx}\n              position={{ left, width: childWidth, height: rowHeight }}\n            />\n          );\n\n          return result;\n        });\n\n        accumulatedLeft += column.width || 0;\n        return groupChildren;\n      }\n\n      const left = accumulatedLeft;\n      const columnWidth = column.width || 0;\n      accumulatedLeft += columnWidth;\n\n      return [\n        <BodyCell\n          key={'table-cell-regular-' + String(column.key)}\n          rowKey={rowKey}\n          rowData={rowData}\n          isRowChecked={isRowChecked}\n          isRowExpanded={isRowExpanded}\n          column={column}\n          isVisible={column.visible}\n          isRowHighlighted={isRowHighlighted}\n          isFirstIndex={columnIndex === 0}\n          isLastIndex={columnIndex === columns.length - 1}\n          rowIndex={rowIndex}\n          columnIndex={columnIndex}\n          position={{ left, width: columnWidth, height: rowHeight }}\n        />,\n      ];\n    });\n  };\n\n  return (\n    <div\n      ref={ref}\n      onClick={handleClickRow}\n      onDoubleClick={handleDoubleClickRow}\n      onContextMenu={handleContextMenu}\n      onChange={handleCheckboxChange}\n      style={{ position: 'relative', top: calcHeaderTotalHeight, height: calcBodyHeight }}\n    >\n      <div\n        className='absolute top-0 left-0 w-full'\n        style={{ transform: `translateY(${rowVirtualItems?.[0]?.start || 0}px)` }}\n      >\n        {rowVirtualItems.map((row) => {\n          const rowItem = flattenedData[row.index];\n          const rowData = rowItem.item as TData;\n          const resolvedRowKey = String((rowItem as unknown as { key: string }).key);\n\n          const isRowExpanded = expandedRowKeys.has(resolvedRowKey);\n          const isRowChecked = selectAll ? !deselectedRowKeys.has(resolvedRowKey) : selectedRowKeys.has(resolvedRowKey);\n\n          return (\n            <div key={row.key} data-index={row.index} ref={rowVirtualizer?.measureElement} className='group/row'>\n              <div style={{ minHeight: rowHeight, width: calcTotalTableWidth }}>\n                <div className='relative h-full w-full flex group/row-cells'>\n                  <div\n                    className={clsx('sticky left-0 z-20', useDynamicRowHeight && 'flex')}\n                    style={{ width: freezeLeftColumnsWidth }}\n                  >\n                    {renderFreezeLeftColumns(resolvedRowKey, rowData, isRowChecked, isRowExpanded, row.index)}\n                  </div>\n\n                  <div\n                    className={clsx('sticky z-20', useDynamicRowHeight && 'flex')}\n                    style={{ left: containerWidth - freezeRightColumnsWidth }}\n                  >\n                    {renderFreezeRightColumns(resolvedRowKey, rowData, isRowChecked, isRowExpanded, row.index)}\n                  </div>\n\n                  {enableColumnVirtualization ? (\n                    renderVirtualizedColumns(resolvedRowKey, rowData, isRowChecked, isRowExpanded, row.index)\n                  ) : useDynamicRowHeight ? (\n                    <div className='flex' style={{ marginLeft: -freezeRightColumnsWidth }}>\n                      {renderRegularColumns(resolvedRowKey, rowData, isRowChecked, isRowExpanded, row.index)}\n                    </div>\n                  ) : (\n                    renderRegularColumns(resolvedRowKey, rowData, isRowChecked, isRowExpanded, row.index)\n                  )}\n                </div>\n              </div>\n\n              {isRowExpanded && (\n                <RowExpandedContent width={calcTotalTableWidth} emptyPadding={!expandedContent}>\n                  {expandedContent?.(rowData) || 'No expanded content available.'}\n                </RowExpandedContent>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n});\n\nexport default memo(VirtualTableBody) as <TData>(props: IVirtualTableBody<TData>) => ReactNode;\n","import { useMemo, useRef, useEffect, forwardRef } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport clsx from 'clsx';\n\nimport { useScrollBottomDetection } from './hooks';\nimport { DEFAULT_SIZE, type IAdjustedHeader, type IVirtualTable } from './lib';\nimport EmptyDataIndicator from './components/empty-data-indicator';\nimport LoadingIndicator from './components/loading-indicator';\nimport VirtualTableHeader from './virtual-table-header';\nimport VirtualTableFooter from './virtual-table-footer';\nimport VirtualTableBody from './virtual-table-body';\nimport './lib/style.css';\nimport { HeaderContextProvider } from './context/header-context';\nimport { VirtualizerContextProvider } from './context/virtualizer-context';\nimport { FilterContextProvider } from './context/filter-context';\nimport { SelectionContextProvider } from './context/selection-context';\nimport { UIContextProvider } from './context/ui-context';\n\nfunction VirtualTableInner<TData>(virtualTableProps: IVirtualTable<TData>, ref: React.ForwardedRef<HTMLDivElement>) {\n  const {\n    rowKey,\n    data,\n    headers,\n    useDynamicRowHeight = false,\n    headerMode = 'double',\n    rowHeight = DEFAULT_SIZE.ROW_HEIGHT,\n    headerHeight = DEFAULT_SIZE.HEADER_HEIGTH,\n    filterHeight = DEFAULT_SIZE.FILTER_HEIGHT,\n    footerHeight = DEFAULT_SIZE.FOOTER_HEIGHT,\n    isLoading = false,\n    isResetFilter = false,\n    useFooter = false,\n    useAutoSizer = true,\n    useSessionFilter,\n    useServerFilter = { sort: false, search: false, selection: false, advance: false },\n    enableColumnVirtualization = true,\n    classNameOuterTable,\n    classNameCell,\n    onClickRow,\n    onDoubleClickRow,\n    onRightClickRow,\n    onChangeCheckboxRowSelection,\n    onRenderExpandedContent,\n    onChangeFilter,\n    onScroll,\n    onScrollTouchBottom,\n  } = virtualTableProps;\n\n  // Ref lokal untuk elemen scrollable\n  const scrollElementRef = useRef<HTMLDivElement | null>(null);\n\n  // Attach ke ref dari forwardRef jika ada\n  useEffect(() => {\n    if (!scrollElementRef.current) return;\n\n    if (typeof ref === 'function') {\n      ref(scrollElementRef.current);\n    } else if (ref) {\n      (ref as React.MutableRefObject<HTMLDivElement | null>).current = scrollElementRef.current;\n    }\n  }, [ref, scrollElementRef.current]);\n\n  useScrollBottomDetection(scrollElementRef, {\n    threshold: 100, // Trigger when 100px from bottom\n    throttleMs: 100, // Throttle to 100ms for performance\n    onScrollTouchBottom: onScrollTouchBottom || (() => {}),\n  });\n\n  const modifiedHeaders = useMemo(() => {\n    return headers.map((header) => ({\n      ...header,\n      visible: true,\n      width: header.width || DEFAULT_SIZE.COLUMN_WIDTH,\n    }));\n  }, [headers]);\n\n  const renderTableContent = (width?: number, height?: number) => (\n    <HeaderContextProvider initialColumns={modifiedHeaders as IAdjustedHeader[]}>\n      <FilterContextProvider\n        dataSource={data}\n        useServerFilter={useServerFilter}\n        onChangeFilter={onChangeFilter}\n        isResetFilter={isResetFilter}\n        useSessionFilter={useSessionFilter}\n      >\n        <VirtualizerContextProvider\n          rowKey={rowKey}\n          scrollElementRef={scrollElementRef}\n          enableColumnVirtualization={enableColumnVirtualization}\n          useDynamicRowHeight={useDynamicRowHeight}\n        >\n          <SelectionContextProvider onChangeCheckboxRowSelection={onChangeCheckboxRowSelection}>\n            <UIContextProvider\n              filterHeight={filterHeight}\n              useFooter={useFooter}\n              expandedContent={(data) => onRenderExpandedContent?.(data as TData)}\n              headerMode={headerMode}\n              headerHeight={headerHeight}\n              classNameCell={classNameCell}\n            >\n              <div\n                ref={scrollElementRef}\n                data-table-container\n                className={clsx(\n                  'w-full h-full overflow-auto relative border border-[#8E8F93]',\n                  isLoading && 'pointer-events-none',\n                  classNameOuterTable,\n                )}\n                style={{\n                  ...(useAutoSizer && width && height ? { width, height } : {}),\n                  scrollbarGutter: 'stable',\n                  overflowAnchor: 'none',\n                }}\n                onScroll={(e) => onScroll?.(e.currentTarget.scrollTop, e.currentTarget.scrollLeft)}\n              >\n                <VirtualTableHeader />\n\n                <VirtualTableBody\n                  headerHeight={headerHeight}\n                  footerHeight={footerHeight}\n                  filterHeight={filterHeight}\n                  rowHeight={rowHeight}\n                  headerMode={headerMode}\n                  onClickRowToParent={onClickRow}\n                  onDoubleClickRowToParent={onDoubleClickRow}\n                  onRightClickRowToParent={onRightClickRow}\n                />\n\n                {useFooter && <VirtualTableFooter footerHeight={footerHeight} />}\n                {!isLoading && <EmptyDataIndicator />}\n              </div>\n            </UIContextProvider>\n          </SelectionContextProvider>\n        </VirtualizerContextProvider>\n      </FilterContextProvider>\n    </HeaderContextProvider>\n  );\n\n  if (useAutoSizer) {\n    return (\n      <div className='w-full h-full relative'>\n        <AutoSizer>{({ width, height }) => renderTableContent(width, height)}</AutoSizer>\n\n        {isLoading && <LoadingIndicator />}\n      </div>\n    );\n  }\n\n  return renderTableContent();\n}\n\nconst VirtualTable = forwardRef(VirtualTableInner) as <TData>(\n  props: IVirtualTable<TData> & { ref?: React.ForwardedRef<HTMLDivElement> },\n) => ReturnType<typeof VirtualTableInner>;\n\nexport default VirtualTable;\n"],"names":["useOnClickOutside","refs","handler","useEffect","safeRefs","ref","handleClickOutside","event","DEFAULT_SIZE","FILTER_ADVANCE_CONFIG","SESSION_STORAGE_KEY","getObjKeyByValue","object","value","key","findChildRecursive","parent","targetChildKey","directChild","_a","c","_b","found","child","useFilterAdvance","props","data","isResetFilter","onChangeAdvanceFilter","useServerAdvanceFilter","useSessionFilter","filterAdvanceCardRef","useRef","isFilterAdvanceCardOpen","setIsFilterAdvanceCardOpen","useState","activeAdvanceFilters","setActiveAdvanceFilters","setToSessionStorage","useCallback","filteredAdvanceData","useMemo","item","filter","itemValue","filterValue","updateAdvanceFilter","dataKey","config_name","prev","newFilters","resetAdvanceFilter","useFilterSelection","onChangeFilter","useServerFilter","filterCardRef","activeFilters","setActiveFilters","isFilterCardOpen","setIsFilterCardOpen","resetAllFilter","filteredData","row","columnName","filterValues","rowValue","val","updateFilter","resetFilter","useFilterSearch","useServerSearch","onChangeSearch","searchCardRef","isSearchCardOpen","setIsSearchCardOpen","activeSearch","seActiveSearch","searchedData","searchValue","_c","updateSearch","newSearch","resetSearch","removeKeyImmutable","source","_","rest","newActiveSearch","resetAllSearch","useFilterSort","useServerSort","onChangeSort","sortKey","setSortKey","sortBy","setSortBy","sortedData","a","b","handleSort","prevKey","newSortBy","handleSpecificSort","useScrollBottomDetection","scrollElementRef","options","threshold","throttleMs","onScrollTouchBottom","lastTriggerTimeRef","rafIdRef","isNearBottomRef","isRefReady","setIsRefReady","checkRef","interval","checkScrollPosition","element","scrollTop","scrollHeight","clientHeight","isNearBottom","now","throttledCheckScrollPosition","flattenHeaderLeaves","columns","depth","parentKey","rows","col","getLeavesOfNode","node","getDepthOfNode","calculateWidthFromLeaves","sum","leaf","normalizeColumnsRecursive","cols","visible","normalizedChildren","widthFromLeaves","updateChildDeep","childKey","update","nextChildren","calculateTotalWidth","acc","headerReducer","state","action","freezeLeft","freezeRight","freezeType","updateFn","HeaderCtx","createContext","useColumns","useContextSelector","ctx","useFreezeLeftColumns","useFreezeRightColumns","useFreezeLeftColumnsWidth","useFreezeRightColumnsWidth","useGetDepth","useGetLeaves","useIsFilterVisible","useToggleFilterVisibility","useUpdateColumn","useUpdateFreezeColumn","useUpdateChildColumn","useUpdateFreezeChildColumn","HeaderContextProvider","initialColumns","children","dispatch","useReducer","processedColumns","virtualized","flattenColumns","freezeLeftColumnsWidth","freezeRightColumnsWidth","getLeaves","getDepth","updateColumn","updateChildColumn","updateFreezeColumn","updateFreezeChildColumn","toggleColumnVisibility","column","toggleFilterVisibility","contextValue","useFlattenedDataIncremental","rowKey","expandedRows","setExpandedRows","flattenedData","setFlattenedData","getRowKey","index","initial","idx","toggleExpand","rowIndexByKey","d","nextRow","prevExpanded","next","useAutoStretchColumn","containerWidth","columnVirtualizer","visibleColumns","totalWidth","childSum","totalNoStretchWidth","scale","columnIndex","newWidth","finalWidth","childScale","FilterCtx","useFilteredData","useTableKey","useIsResetFilter","useSort","useSearch","useSelection","useAdvance","FilterContextProvider","dataSource","sortValue","selectionValue","advanceValue","EMPTY_VIRTUAL_ITEMS","VirtualizerCtx","useFlattenedData","useRowVirtualizer","useColumnVirtualizer","useRowVirtualItems","useColumnVirtualItems","useContainerWidth","useContainerHeight","useToggleExpandRow","useEnableColumnVirtualization","useUseDynamicRowHeight","VirtualizerContextProvider","enableColumnVirtualization","useDynamicRowHeight","setContainerWidth","containerHeight","setContainerHeight","observer","entries","width","height","expandedKeys","columnCount","useVirtualizer","rowVirtualizer","rowVirtualItems","columnVirtualItems","toggleExpandRow","UICtx","useFreezeColLeftPositions","useFreezeColRightPositions","useCalcTotalTableWidth","useUseFooter","useFilterHeight","useHeaderMode","useExpandedContent","useCalcHeaderTotalHeight","useClassNameCell","UIContextProvider","filterHeight","expandedContent","useFooter","headerMode","headerHeight","isFilterVisible","classNameCell","freezeLeftColumns","freezeRightColumns","virtualizedColumnsWidth","freezeColLeftPositions","_column","left","freezeColRightPositions","right","calcTotalTableWidth","calcHeaderTotalHeight","maxDepthTopLevel","memoizedExpandedContent","memoizedClassNameCell","EmptyDataIndicator","jsx","LoadingIndicator","clsx","IcClose","className","InputSearch","forwardRef","onClickEnter","onRemoveSearch","onChange","onDebouncedChange","debounceDelay","inputValue","setInputValue","timeoutRef","handleInputChange","e","newValue","jsxs","ResizeIndicator","handleMouseDown","Checkbox","checked","onChecked","label","classNameLabel","propRest","CheckedIcon","Checkbox$1","memo","IcCheck","IcChevron","IcColumn","IcCopy","IcDelete","IcDotsVertical","IcFilterAdvance","IcFilterMultiple","IcMenu","IcSearch","IcSort","sort","SortUp","SortDown","icons","prop","Icon","name","Component","Icons","Dropdown","onSelect","showDropdown","setShowDropdown","handleSelectOption","option","DropdownBox","isOpen","onToggle","FilterAction","onReset","onApply","FilterCard","RowCheckbox","RowCheckbox$1","RowExpand","isExpanded","RowExpand$1","TableHead","headValue","TableHead$1","TableCell","cellValue","TableCell$1","filteringOptions","searchQuery","cleanOptions","opt","FilterSelection","headerKey","onApplyFilter","onResetFilter","initialSelectedOptions","filterRef","filterScrollRef","filterCard","setFilterCard","setSearchQuery","selectedOptions","setSelectedOptions","filteredOptions","handleApplyFilter","handleResetFilter","onCheckboxChange","handleOpenFilterCard","rect","viewportWidth","viewportHeight","normalLeftPosition","normalTopPosition","totalLeftPos","totalTopPos","isRightOverflowed","isLeftOverflowed","isBottomOverflowed","calculatedLeftPosition","calculatedTopPosition","isEmptyOpts","isEmptyFilteredOpts","createPortal","SelectionList","isCheked","isEmptyOptions","scrollRef","virtualRow","optionLabel","FilterSelection$1","CONFIG_OPTIONS","DEFAULT_FILTER_CARD","DEFAULT_FILTER_VALUE","FilterAdvance","initialFilterValue","setFilterValue","handleConfigChange","getConfigKey","FilterAdvance$1","FilterSearch","mode","onSearchChange","onSearchClear","initialSearch","search","setSearch","showCard","setShowCard","useClickOutside","handleEnterSearch","handleResetSearch","handleApplySearch","handleOpenCard","FilterSearch$1","HeaderFilter","filterSelectionOptions","hideFilter","tableKey","selection","advance","isSingleHeader","calcFilterHeight","isHideFilterSelection","isHideFilterAdvance","isHideFilterSort","isHideFilterSearch","sessionStorageSearch","sessionStorageSelection","sessionStorageAdvance","config","HeaderFilter$1","RowExpandedContent","emptyPadding","RowExpandedContent$1","DEFAULT_ACTIONS","HeaderAction","hideFilterSort","cardRef","actionCard","setActionCard","handleOpenActionCard","handleActionClick","mapAction","modifiedActions","HeaderAction$1","HeaderCaption","caption","HeaderCaption$1","HeaderCellNested","headData","parentVirtualIndex","cellClassName","cellStyles","handleResizeChildColumn","args","startX","startChildWidth","startParentWidth","resizeLine","onMouseMove","ev","onMouseUp","delta","newChildWidth","newParentWidth","renderHeader","isLeaf","getScaledWidth","childWidth","virtualItems","virtualParent","parentSize","originalParentWidth","scaleFactor","scaledWidth","Fragment","HeaderCellNested$1","SelectionCtx","useSelectedRowKey","useSelectedRowKeys","useDeselectedRowKeys","useExpandedRowKeys","useSelectAll","useOnClickRow","useToggleRowSelection","useToggleSelectAll","SelectionContextProvider","onChangeCheckboxRowSelection","selectedRowKey","setSelectedRowKey","expandedRowKeys","setExpandedRowKeys","selectedRowKeys","setSelectedRowKeys","deselectedRowKeys","setDeselectedRowKeys","selectAll","setSelectAll","onClickRow","toggleRowSelection","finalData","toggleSelectAll","HeaderCell","headVirtualIndex","isCheckboxHeader","isExpandHeader","isActionHeader","isGroupHeader","isShowNormalCell","handleResizeColumn","startWidth","BodyCell","bodyCellProps","rowData","isRowChecked","isRowExpanded","isVisible","isRowHighlighted","isFirstIndex","isLastIndex","position","freezeMode","rowIndex","isCheckboxColumn","isExpandColumn","cellRender","cellExpandToggle","customClassName","classNames","baseClasses","cellStyle","cellContent","customExpand","BodyCell$1","FooterCell","footerCellProps","FooterCell$1","ResizeLine","VirtualTableHeaderV2","handleCheckboxChange","target","headerCheckbox","renderFreezeLeftColumns","freezeLeftIdx","hasChildren","renderFreezeRightColumns","freezeRightIdx","renderVirtualizedColumns","header","isLastColumn","renderRegularColumns","accumulatedLeft","columnWidth","VirtualTableHeader","VirtualTableFooter","footerHeight","renderFreezeLeftFooters","childOffset","renderFreezeRightFooters","renderVirtualizedFooters","baseLeft","VirtualTableFooter$1","VirtualTableBody","rowHeight","onClickRowToParent","onDoubleClickRowToParent","onRightClickRowToParent","rowMap","map","handleClickRow","cell","btnExpand","rowKeyAttr","handleDoubleClickRow","handleContextMenu","calcBodyHeight","childIdx","isGroupColumn","allFlattenedColumns","flattenedIndex","leaves","groupChildren","rowItem","resolvedRowKey","VirtualTableBody$1","VirtualTableInner","virtualTableProps","headers","isLoading","useAutoSizer","classNameOuterTable","onDoubleClickRow","onRightClickRow","onRenderExpandedContent","onScroll","modifiedHeaders","renderTableContent","AutoSizer","VirtualTable"],"mappings":"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"}