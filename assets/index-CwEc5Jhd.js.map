{"version":3,"file":"index-CwEc5Jhd.js","sources":["../../src/pages/examples-page/footer-page/utils/constants.ts","../../src/pages/examples-page/footer-page/utils/data-generator.ts","../../src/pages/examples-page/footer-page/utils/table-headers.tsx","../../src/pages/examples-page/footer-page/components/code-block.tsx","../../src/pages/examples-page/footer-page/components/footer-components.tsx","../../src/pages/examples-page/footer-page/components/advanced-footer-section.tsx","../../src/pages/examples-page/footer-page/components/basic-footer-section.tsx","../../src/pages/examples-page/footer-page/components/features-section.tsx","../../src/pages/examples-page/footer-page/components/next-steps-section.tsx","../../src/pages/examples-page/footer-page/components/summary-footer-section.tsx","../../src/pages/examples-page/footer-page/components/usage-tips-section.tsx","../../src/pages/examples-page/footer-page/index.tsx"],"sourcesContent":["export const BASIC_CODE_EXAMPLE = `// Basic Footer with Calculations\nimport { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\n// Footer component for calculations\nconst CalculationFooter = ({ data, columnKey }) => {\n  const getCalculation = () => {\n    switch (columnKey) {\n      case 'quantity':\n        return data.reduce((sum, item) => sum + item.quantity, 0).toLocaleString();\n      case 'total':\n        return \\`$\\${data.reduce((sum, item) => sum + item.total, 0).toLocaleString()}\\`;\n      case 'discount':\n        const avgDiscount = data.reduce((sum, item) => sum + item.discount, 0) / data.length;\n        return \\`\\${avgDiscount.toFixed(1)}%\\`;\n      case 'status':\n        const activeCount = data.filter(item => item.status === 'Active').length;\n        return \\`\\${activeCount}/\\${data.length} Active\\`;\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center h-full bg-gray-50 font-semibold\">\n      {getCalculation()}\n    </div>\n  );\n};\n\n// Footer component for totals\nconst TotalsFooter = () => (\n  <div className=\"flex items-center justify-center h-full bg-blue-50\">\n    <span className=\"font-semibold text-blue-800\">TOTALS</span>\n  </div>\n);\n\n// Basic footer headers\nconst headers: IHeader<SampleData>[] = [\n  { key: 'id', caption: 'ID', width: 60 },\n  { key: 'product', caption: 'Product', width: 200 },\n  { key: 'category', caption: 'Category', width: 150 },\n  { key: 'quantity', caption: 'Quantity', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"quantity\" /> },\n  { key: 'unitPrice', caption: 'Unit Price', width: 120, \n    renderFooter: () => <TotalsFooter /> },\n  { key: 'total', caption: 'Total', width: 120, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"total\" /> },\n  { key: 'discount', caption: 'Discount %', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"discount\" /> },\n  { key: 'finalAmount', caption: 'Final Amount', width: 130, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"finalAmount\" /> },\n  { key: 'status', caption: 'Status', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"status\" /> },\n];\n\n// Virtual Table with Basic Footer\n<VirtualTable\n  headers={headers}\n  data={data}\n  rowKey=\"id\"\n  headerMode=\"double\"\n  useFooter={true}\n  footerHeight={40}\n  rowHeight={32}\n  headerHeight={40}\n  filterHeight={32}\n/>`;\n\nexport const ADVANCED_CODE_EXAMPLE = `// Advanced Footer with Freeze Columns\nimport { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\n// Footer component for calculations\nconst CalculationFooter = ({ data, columnKey }) => {\n  const getCalculation = () => {\n    switch (columnKey) {\n      case 'quantity':\n        return data.reduce((sum, item) => sum + item.quantity, 0).toLocaleString();\n      case 'total':\n        return \\`$\\${data.reduce((sum, item) => sum + item.total, 0).toLocaleString()}\\`;\n      case 'discount':\n        const avgDiscount = data.reduce((sum, item) => sum + item.discount, 0) / data.length;\n        return \\`\\${avgDiscount.toFixed(1)}%\\`;\n      case 'status':\n        const activeCount = data.filter(item => item.status === 'Active').length;\n        return \\`\\${activeCount}/\\${data.length} Active\\`;\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center h-full bg-gray-50 font-semibold\">\n      {getCalculation()}\n    </div>\n  );\n};\n\n// Footer component for totals\nconst TotalsFooter = () => (\n  <div className=\"flex items-center justify-center h-full bg-blue-50\">\n    <span className=\"font-semibold text-blue-800\">TOTALS</span>\n  </div>\n);\n\n// Footer component for actions\nconst ActionsFooter = () => (\n  <div className=\"flex items-center justify-center h-full bg-orange-50\">\n    <span className=\"font-medium text-orange-700\">ACTIONS</span>\n  </div>\n);\n\n// Advanced footer with freeze columns\nconst headers: IHeader<SampleData>[] = [\n  { key: 'id', caption: 'ID', width: 60, freeze: 'left' },\n  { key: 'product', caption: 'Product', width: 200, freeze: 'left' },\n  { key: 'category', caption: 'Category', width: 150 },\n  { key: 'quantity', caption: 'Quantity', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"quantity\" /> },\n  { key: 'unitPrice', caption: 'Unit Price', width: 120, \n    renderFooter: () => <TotalsFooter /> },\n  { key: 'total', caption: 'Total', width: 120, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"total\" /> },\n  { key: 'discount', caption: 'Discount %', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"discount\" /> },\n  { key: 'finalAmount', caption: 'Final Amount', width: 130, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"finalAmount\" /> },\n  { key: 'status', caption: 'Status', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"status\" /> },\n  { key: 'region', caption: 'Region', width: 120, freeze: 'right' },\n  { key: 'salesRep', caption: 'Sales Rep', width: 150, freeze: 'right', \n    renderFooter: () => <ActionsFooter /> },\n];\n\n// Virtual Table with Advanced Footer\n<VirtualTable\n  headers={headers}\n  data={data}\n  rowKey=\"id\"\n  headerMode=\"double\"\n  useFooter={true}\n  footerHeight={40}\n  rowHeight={32}\n  headerHeight={40}\n  filterHeight={32}\n/>`;\n\nexport const SUMMARY_CODE_EXAMPLE = `// Summary Footer Example\nimport { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\n// Footer component for calculations\nconst CalculationFooter = ({ data, columnKey }) => {\n  const getCalculation = () => {\n    switch (columnKey) {\n      case 'quantity':\n        return data.reduce((sum, item) => sum + item.quantity, 0).toLocaleString();\n      case 'total':\n        return \\`$\\${data.reduce((sum, item) => sum + item.total, 0).toLocaleString()}\\`;\n      case 'discount':\n        const avgDiscount = data.reduce((sum, item) => sum + item.discount, 0) / data.length;\n        return \\`\\${avgDiscount.toFixed(1)}%\\`;\n      case 'status':\n        const activeCount = data.filter(item => item.status === 'Active').length;\n        return \\`\\${activeCount}/\\${data.length} Active\\`;\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center h-full bg-gray-50 font-semibold\">\n      {getCalculation()}\n    </div>\n  );\n};\n\n// Footer component for summaries\nconst SummaryFooter = () => (\n  <div className=\"flex items-center justify-center h-full bg-green-50\">\n    <span className=\"font-medium text-green-700\">SUMMARY</span>\n  </div>\n);\n\n// Footer component for actions\nconst ActionsFooter = () => (\n  <div className=\"flex items-center justify-center h-full bg-orange-50\">\n    <span className=\"font-medium text-orange-700\">ACTIONS</span>\n  </div>\n);\n\n// Summary footer headers\nconst headers: IHeader<SampleData>[] = [\n  { key: 'id', caption: 'ID', width: 60, \n    renderFooter: () => <SummaryFooter /> },\n  { key: 'product', caption: 'Product', width: 200 },\n  { key: 'category', caption: 'Category', width: 150 },\n  { key: 'quantity', caption: 'Quantity', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"quantity\" /> },\n  { key: 'unitPrice', caption: 'Unit Price', width: 120, \n    renderFooter: () => <TotalsFooter /> },\n  { key: 'total', caption: 'Total', width: 120, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"total\" /> },\n  { key: 'discount', caption: 'Discount %', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"discount\" /> },\n  { key: 'finalAmount', caption: 'Final Amount', width: 130, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"finalAmount\" /> },\n  { key: 'status', caption: 'Status', width: 100, \n    renderFooter: () => <CalculationFooter data={data} columnKey=\"status\" /> },\n  { key: 'region', caption: 'Region', width: 120 },\n  { key: 'salesRep', caption: 'Sales Rep', width: 150, \n    renderFooter: () => <ActionsFooter /> },\n];\n\n// Virtual Table with Summary Footer\n<VirtualTable\n  headers={headers}\n  data={data}\n  rowKey=\"id\"\n  headerMode=\"double\"\n  useFooter={true}\n  footerHeight={40}\n  rowHeight={32}\n  headerHeight={40}\n  filterHeight={32}\n/>`;\n\n","import { faker } from '@faker-js/faker';\nimport type { SampleData } from './types';\n\nexport const generateSampleData = (): SampleData[] => {\n  return Array.from({ length: 50 }, (_, index) => ({\n    id: index + 1,\n    product: faker.commerce.productName(),\n    category: faker.commerce.department(),\n    quantity: faker.number.int({ min: 1, max: 100 }),\n    unitPrice: faker.number.float({ min: 10, max: 1000, fractionDigits: 2 }),\n    total: 0,\n    discount: faker.number.float({ min: 0, max: 20, fractionDigits: 1 }),\n    finalAmount: 0,\n    status: faker.helpers.arrayElement(['Active', 'Inactive', 'Pending']),\n    region: faker.location.country(),\n    salesRep: faker.person.fullName(),\n  })).map((item) => ({\n    ...item,\n    total: item.quantity * item.unitPrice,\n    finalAmount: item.quantity * item.unitPrice * (1 - item.discount / 100),\n  }));\n};\n\n","import type { IHeader } from '../../../../components/virtual-table';\nimport type { SampleData } from './types';\n\nexport const getBasicHeaders = (\n  data: SampleData[],\n  CalculationFooter: React.ComponentType<{ data: SampleData[]; columnKey: string }>,\n  TotalsFooter: React.ComponentType,\n): IHeader<SampleData>[] => [\n  { key: 'id', caption: 'ID', width: 100 },\n  { key: 'product', caption: 'Product', width: 200 },\n  { key: 'category', caption: 'Category', width: 150 },\n  {\n    key: 'quantity',\n    caption: 'Quantity',\n    width: 100,\n    renderFooter: () => <CalculationFooter columnKey='quantity' data={data} />,\n  },\n  {\n    key: 'unitPrice',\n    caption: 'Unit Price',\n    width: 120,\n    renderFooter: () => <TotalsFooter />,\n  },\n  {\n    key: 'total',\n    caption: 'Total',\n    width: 120,\n    renderFooter: () => <CalculationFooter columnKey='total' data={data} />,\n  },\n  {\n    key: 'discount',\n    caption: 'Discount %',\n    width: 140,\n    renderFooter: () => <CalculationFooter columnKey='discount' data={data} />,\n  },\n  {\n    key: 'finalAmount',\n    caption: 'Final Amount',\n    width: 130,\n    renderFooter: () => <CalculationFooter columnKey='finalAmount' data={data} />,\n  },\n  {\n    key: 'status',\n    caption: 'Status',\n    width: 100,\n    renderFooter: () => <CalculationFooter columnKey='status' data={data} />,\n  },\n];\n\nexport const getAdvancedHeaders = (\n  data: SampleData[],\n  CalculationFooter: React.ComponentType<{ data: SampleData[]; columnKey: string }>,\n  TotalsFooter: React.ComponentType,\n  ActionsFooter: React.ComponentType,\n): IHeader<SampleData>[] => [\n  { key: 'id', caption: 'ID', width: 100, freeze: 'left' },\n  { key: 'product', caption: 'Product', width: 200, freeze: 'left' },\n  { key: 'category', caption: 'Category', width: 150 },\n  {\n    key: 'quantity',\n    caption: 'Quantity',\n    width: 100,\n    renderFooter: () => <CalculationFooter columnKey='quantity' data={data} />,\n  },\n  {\n    key: 'unitPrice',\n    caption: 'Unit Price',\n    width: 120,\n    renderFooter: () => <TotalsFooter />,\n  },\n  {\n    key: 'total',\n    caption: 'Total',\n    width: 120,\n    renderFooter: () => <CalculationFooter columnKey='total' data={data} />,\n  },\n  {\n    key: 'discount',\n    caption: 'Discount %',\n    width: 140,\n    renderFooter: () => <CalculationFooter columnKey='discount' data={data} />,\n  },\n  {\n    key: 'finalAmount',\n    caption: 'Final Amount',\n    width: 130,\n    renderFooter: () => <CalculationFooter columnKey='finalAmount' data={data} />,\n  },\n  {\n    key: 'status',\n    caption: 'Status',\n    width: 100,\n    renderFooter: () => <CalculationFooter columnKey='status' data={data} />,\n  },\n  { key: 'region', caption: 'Region', width: 120, freeze: 'right' },\n  {\n    key: 'salesRep',\n    caption: 'Sales Rep',\n    width: 150,\n    freeze: 'right',\n    renderFooter: () => <ActionsFooter />,\n  },\n];\n\nexport const getSummaryHeaders = (\n  data: SampleData[],\n  CalculationFooter: React.ComponentType<{ data: SampleData[]; columnKey: string }>,\n  TotalsFooter: React.ComponentType,\n  SummaryFooter: React.ComponentType,\n  ActionsFooter: React.ComponentType,\n): IHeader<SampleData>[] => [\n  {\n    key: 'id',\n    caption: 'ID',\n    width: 100,\n    renderFooter: () => <SummaryFooter />,\n  },\n  { key: 'product', caption: 'Product', width: 200 },\n  { key: 'category', caption: 'Category', width: 150 },\n  {\n    key: 'quantity',\n    caption: 'Quantity',\n    width: 100,\n    renderFooter: () => <CalculationFooter columnKey='quantity' data={data} />,\n  },\n  {\n    key: 'unitPrice',\n    caption: 'Unit Price',\n    width: 120,\n    renderFooter: () => <TotalsFooter />,\n  },\n  {\n    key: 'total',\n    caption: 'Total',\n    width: 120,\n    renderFooter: () => <CalculationFooter columnKey='total' data={data} />,\n  },\n  {\n    key: 'discount',\n    caption: 'Discount %',\n    width: 140,\n    renderFooter: () => <CalculationFooter columnKey='discount' data={data} />,\n  },\n  {\n    key: 'finalAmount',\n    caption: 'Final Amount',\n    width: 130,\n    renderFooter: () => <CalculationFooter columnKey='finalAmount' data={data} />,\n  },\n  {\n    key: 'status',\n    caption: 'Status',\n    width: 100,\n    renderFooter: () => <CalculationFooter columnKey='status' data={data} />,\n  },\n  { key: 'region', caption: 'Region', width: 120 },\n  {\n    key: 'salesRep',\n    caption: 'Sales Rep',\n    width: 150,\n    renderFooter: () => <ActionsFooter />,\n  },\n];\n","import { memo } from 'react';\n\ntype CodeBlockProps = {\n  code: string;\n  title: string;\n};\n\nconst CodeBlock = ({ code, title }: CodeBlockProps) => {\n  return (\n    <div className='border rounded-lg overflow-hidden'>\n      <div className='bg-muted px-4 py-2 border-b'>\n        <span className='text-sm font-medium'>{title}</span>\n      </div>\n      <pre className='p-4 overflow-x-auto bg-background'>\n        <code className='text-sm'>{code}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default memo(CodeBlock);\n\n","import { memo } from 'react';\nimport type { SampleData } from '../utils';\n\ntype CalculationFooterProps = {\n  columnKey: string;\n  data: SampleData[];\n};\n\nexport const CalculationFooter = memo(({ columnKey, data }: CalculationFooterProps) => {\n  const getCalculation = (): string => {\n    switch (columnKey) {\n      case 'quantity': {\n        return data\n          .reduce((sum: number, item: SampleData) => sum + item.quantity, 0)\n          .toLocaleString();\n      }\n      case 'total': {\n        return `$${data\n          .reduce((sum: number, item: SampleData) => sum + item.total, 0)\n          .toLocaleString(undefined, { minimumFractionDigits: 2 })}`;\n      }\n      case 'finalAmount': {\n        return `$${data\n          .reduce((sum: number, item: SampleData) => sum + item.finalAmount, 0)\n          .toLocaleString(undefined, { minimumFractionDigits: 2 })}`;\n      }\n      case 'discount': {\n        const avgDiscount =\n          data.reduce((sum: number, item: SampleData) => sum + item.discount, 0) / data.length;\n        return `${avgDiscount.toFixed(1)}%`;\n      }\n      case 'status': {\n        const activeCount = data.filter((item: SampleData) => item.status === 'Active').length;\n        return `${activeCount}/${data.length} Active`;\n      }\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className='flex items-center justify-center h-full bg-gray-50 dark:bg-gray-800 font-semibold text-gray-800 dark:text-gray-200'>\n      {getCalculation()}\n    </div>\n  );\n});\n\nCalculationFooter.displayName = 'CalculationFooter';\n\nexport const TotalsFooter = memo(() => {\n  return (\n    <div className='flex items-center justify-center h-full bg-blue-50 dark:bg-blue-950'>\n      <span className='font-semibold text-blue-800 dark:text-blue-300'>TOTALS</span>\n    </div>\n  );\n});\n\nTotalsFooter.displayName = 'TotalsFooter';\n\nexport const SummaryFooter = memo(() => {\n  return (\n    <div className='flex items-center justify-center h-full bg-green-50 dark:bg-green-950'>\n      <span className='font-medium text-green-700 dark:text-green-300'>SUMMARY</span>\n    </div>\n  );\n});\n\nSummaryFooter.displayName = 'SummaryFooter';\n\nexport const ActionsFooter = memo(() => {\n  return (\n    <div className='flex items-center justify-center h-full bg-orange-50 dark:bg-orange-950'>\n      <span className='font-medium text-orange-700 dark:text-orange-300'>ACTIONS</span>\n    </div>\n  );\n});\n\nActionsFooter.displayName = 'ActionsFooter';\n\n","import { memo, useMemo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { ADVANCED_CODE_EXAMPLE, type SampleData } from '../utils';\nimport { getAdvancedHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\nimport { ActionsFooter, CalculationFooter, TotalsFooter } from './footer-components';\n\ntype AdvancedFooterSectionProps = {\n  data: SampleData[];\n};\n\nconst AdvancedFooterSection = ({ data }: AdvancedFooterSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n\n  const headers = useMemo(\n    () => getAdvancedHeaders(data, CalculationFooter, TotalsFooter, ActionsFooter),\n    [data],\n  );\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Footer with Freeze Columns</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='h-96 border rounded-lg overflow-hidden'>\n        <VirtualTable\n          classNameOuterTable='border-0'\n          data={data}\n          filterHeight={32}\n          footerHeight={40}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n          useFooter={true}\n        />\n      </div>\n\n      {showCode && (\n        <div className='mt-4'>\n          <CodeBlock code={ADVANCED_CODE_EXAMPLE} title='Advanced Footer with Freeze Columns' />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default memo(AdvancedFooterSection);\n\n","import { memo, useMemo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { BASIC_CODE_EXAMPLE, type SampleData } from '../utils';\nimport { getBasicHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\nimport { CalculationFooter, TotalsFooter } from './footer-components';\n\ntype BasicFooterSectionProps = {\n  data: SampleData[];\n};\n\nconst BasicFooterSection = ({ data }: BasicFooterSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n\n  const headers = useMemo(\n    () => getBasicHeaders(data, CalculationFooter, TotalsFooter),\n    [data],\n  );\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Basic Footer with Calculations</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='h-96 border rounded-lg overflow-hidden'>\n        <VirtualTable\n          classNameOuterTable='border-0'\n          data={data}\n          filterHeight={32}\n          footerHeight={40}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n          useFooter={true}\n        />\n      </div>\n\n      {showCode && (\n        <div className='mt-4'>\n          <CodeBlock code={BASIC_CODE_EXAMPLE} title='Basic Footer Example' />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default memo(BasicFooterSection);\n\n","import { memo } from 'react';\n\nconst FeaturesSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>What's Included</h2>\n      <div className='grid gap-4 md:grid-cols-2'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>✅ Footer Features</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>• Automatic calculations (sum, average, count)</li>\n            <li>• Custom footer components</li>\n            <li>• Freeze columns support</li>\n            <li>• Custom styling and colors</li>\n            <li>• Interactive content support</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>🎨 Customization</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>• Flexible renderFooter function</li>\n            <li>• Configurable footer height</li>\n            <li>• TypeScript support</li>\n            <li>• Responsive design</li>\n            <li>• Performance optimized</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(FeaturesSection);\n\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NextStepsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>🚀 Next Steps</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Ready to explore more advanced features? Check out these examples:\n        </p>\n        <div className='flex flex-wrap gap-2'>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/custom-cell'\n          >\n            Custom Cell Rendering\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/freeze-column'\n          >\n            Freeze Columns\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/checkbox-selection'\n          >\n            Checkbox Selection\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/expand-row'\n          >\n            Expand Rows\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(NextStepsSection);\n\n","import { memo, useMemo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { SUMMARY_CODE_EXAMPLE, type SampleData } from '../utils';\nimport { getSummaryHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\nimport { ActionsFooter, CalculationFooter, SummaryFooter, TotalsFooter } from './footer-components';\n\ntype SummaryFooterSectionProps = {\n  data: SampleData[];\n};\n\nconst SummaryFooterSection = ({ data }: SummaryFooterSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n\n  const headers = useMemo(\n    () => getSummaryHeaders(data, CalculationFooter, TotalsFooter, SummaryFooter, ActionsFooter),\n    [data],\n  );\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Footer with Summary Information</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='h-96 border rounded-lg overflow-hidden'>\n        <VirtualTable\n          classNameOuterTable='border-0'\n          data={data}\n          filterHeight={32}\n          footerHeight={40}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n          useFooter={true}\n        />\n      </div>\n\n      {showCode && (\n        <div className='mt-4'>\n          <CodeBlock code={SUMMARY_CODE_EXAMPLE} title='Summary Footer Example' />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default memo(SummaryFooterSection);\n\n","import { memo } from 'react';\n\nconst UsageTipsSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>Usage Tips</h2>\n      <div className='space-y-4'>\n        <div className='p-4 bg-blue-50 dark:bg-blue-950 border border-blue-200 dark:border-blue-800 rounded-lg'>\n          <h4 className='font-semibold text-blue-900 dark:text-blue-300 mb-2'>\n            Performance Optimization\n          </h4>\n          <p className='text-sm text-blue-800 dark:text-blue-400'>\n            Use memoized footer components to prevent unnecessary re-renders when data changes.\n            Consider using useMemo for expensive calculations in footer components.\n          </p>\n        </div>\n        <div className='p-4 bg-green-50 dark:bg-green-950 border border-green-200 dark:border-green-800 rounded-lg'>\n          <h4 className='font-semibold text-green-900 dark:text-green-300 mb-2'>Visual Design</h4>\n          <p className='text-sm text-green-800 dark:text-green-400'>\n            Use different background colors and typography to distinguish footer cells from regular\n            table cells. Consider adding borders or shadows to create visual separation.\n          </p>\n        </div>\n        <div className='p-4 bg-yellow-50 dark:bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg'>\n          <h4 className='font-semibold text-yellow-900 dark:text-yellow-300 mb-2'>\n            Data Accessibility\n          </h4>\n          <p className='text-sm text-yellow-800 dark:text-yellow-400'>\n            Ensure footer calculations are accessible to screen readers by using proper ARIA labels\n            and semantic HTML elements.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(UsageTipsSection);\n\n","import { memo, useMemo } from 'react';\nimport {\n  AdvancedFooterSection,\n  BasicFooterSection,\n  FeaturesSection,\n  NextStepsSection,\n  SummaryFooterSection,\n  UsageTipsSection,\n} from './components';\nimport { generateSampleData } from './utils';\n\nconst FooterPage = () => {\n  const data = useMemo(() => generateSampleData(), []);\n\n  return (\n    <div className='space-y-8'>\n      {/* Page Header */}\n      <div>\n        <h1 className='text-4xl font-bold tracking-tight'>Table Footer</h1>\n        <p className='text-xl text-muted-foreground mt-4'>\n          Learn how to add footers to your virtual table for displaying totals, summaries, and\n          calculations. Footers are perfect for showing aggregated data and additional actions.\n        </p>\n      </div>\n\n      {/* Basic Footer Example */}\n      <BasicFooterSection data={data} />\n\n      {/* Advanced Footer with Freeze Columns */}\n      <AdvancedFooterSection data={data} />\n\n      {/* Summary Footer Example */}\n      <SummaryFooterSection data={data} />\n\n      {/* Features Section */}\n      <FeaturesSection />\n\n      {/* Next Steps */}\n      <NextStepsSection />\n\n      {/* Usage Tips */}\n      <UsageTipsSection />\n    </div>\n  );\n};\n\nexport default memo(FooterPage);\n\n"],"names":["BASIC_CODE_EXAMPLE","ADVANCED_CODE_EXAMPLE","SUMMARY_CODE_EXAMPLE","generateSampleData","_","index","faker","item","getBasicHeaders","data","CalculationFooter","TotalsFooter","jsx","getAdvancedHeaders","ActionsFooter","getSummaryHeaders","SummaryFooter","CodeBlock","code","title","jsxs","CodeBlock$1","memo","columnKey","getCalculation","sum","AdvancedFooterSection","showCode","setShowCode","useState","headers","useMemo","VirtualTable","AdvancedFooterSection$1","BasicFooterSection","BasicFooterSection$1","FeaturesSection","FeaturesSection$1","NextStepsSection","Link","NextStepsSection$1","SummaryFooterSection","SummaryFooterSection$1","UsageTipsSection","UsageTipsSection$1","FooterPage"],"mappings":"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"}