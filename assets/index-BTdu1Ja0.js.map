{"version":3,"file":"index-BTdu1Ja0.js","sources":["../../src/pages/examples-page/column-virtualization-page/components/code-block.tsx","../../src/pages/examples-page/column-virtualization-page/components/comparison-section.tsx","../../src/pages/examples-page/column-virtualization-page/components/next-steps-section.tsx","../../src/pages/examples-page/column-virtualization-page/utils/constants.ts","../../src/pages/examples-page/column-virtualization-page/utils/table-headers.ts","../../src/pages/examples-page/column-virtualization-page/components/preview-section.tsx","../../src/pages/examples-page/column-virtualization-page/components/usage-guidelines-section.tsx","../../src/pages/examples-page/column-virtualization-page/utils/data-generator.ts","../../src/pages/examples-page/column-virtualization-page/index.tsx"],"sourcesContent":["import { memo } from 'react';\n\ninterface CodeBlockProps {\n  code: string;\n  title: string;\n  language?: string;\n}\n\nconst CodeBlock = ({ code, title, language = 'tsx' }: CodeBlockProps) => {\n  return (\n    <div className='rounded-lg border bg-muted/50'>\n      <div className='flex items-center justify-between border-b px-4 py-2'>\n        <h4 className='text-sm font-medium'>{title}</h4>\n        <span className='text-xs text-muted-foreground'>{language}</span>\n      </div>\n      <pre className='overflow-x-auto p-4'>\n        <code className='text-sm'>{code}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default memo(CodeBlock);\n","import { memo } from 'react';\n\nconst ComparisonSection = () => {\n  const comparisonData = [\n    {\n      feature: 'Default Behavior',\n      virtualized: 'Default mode (enableColumnVirtualization=true)',\n      nonVirtualized: 'Must be explicitly disabled (enableColumnVirtualization=false)'\n    },\n    {\n      feature: 'Performance',\n      virtualized: 'Excellent with many columns',\n      nonVirtualized: 'Good with few columns, may lag with many'\n    },\n    {\n      feature: 'Memory Usage',\n      virtualized: 'Lower - only renders visible columns',\n      nonVirtualized: 'Higher - renders all columns'\n    },\n    {\n      feature: 'Dynamic Row Height',\n      virtualized: 'Not supported',\n      nonVirtualized: 'Supported'\n    },\n    {\n      feature: 'Group Headers',\n      virtualized: 'Supported',\n      nonVirtualized: 'Supported'\n    },\n    {\n      feature: 'Freeze Columns',\n      virtualized: 'Supported',\n      nonVirtualized: 'Supported'\n    },\n    {\n      feature: 'Scroll Performance',\n      virtualized: 'Smooth with many columns',\n      nonVirtualized: 'Smooth with few columns'\n    },\n    {\n      feature: 'Layout Complexity',\n      virtualized: 'More complex calculations',\n      nonVirtualized: 'Simpler calculations'\n    }\n  ];\n\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-6'>Comparison</h2>\n      \n      <div className='overflow-x-auto'>\n        <table className='w-full border-collapse border border-border rounded-lg'>\n          <thead>\n            <tr className='bg-muted/50'>\n              <th className='border border-border px-4 py-3 text-left font-semibold'>Feature</th>\n              <th className='border border-border px-4 py-3 text-left font-semibold text-green-600'>Column Virtualized</th>\n              <th className='border border-border px-4 py-3 text-left font-semibold text-blue-600'>Non-Virtualized</th>\n            </tr>\n          </thead>\n          <tbody>\n            {comparisonData.map((row, index) => (\n              <tr key={index} className={index % 2 === 0 ? 'bg-background' : 'bg-muted/20'}>\n                <td className='border border-border px-4 py-3 font-medium'>{row.feature}</td>\n                <td className='border border-border px-4 py-3'>{row.virtualized}</td>\n                <td className='border border-border px-4 py-3'>{row.nonVirtualized}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(ComparisonSection);\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NextStepsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>ðŸš€ Next Steps</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Ready to explore more advanced features? Check out these examples:\n        </p>\n        <div className='flex flex-wrap gap-2'>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/dynamic-row-height'\n          >\n            Dynamic Row Height\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/large-dataset'\n          >\n            Large Dataset\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(NextStepsSection);\n","export const CODE_EXAMPLE_VIRTUALIZED = `import { VirtualTable } from '@/components/virtual-table';\n\nconst headers = [\n  { key: 'id', caption: 'ID', width: 80, freeze: 'left' },\n  { key: 'name', caption: 'Name', width: 180, freeze: 'left' },\n  { key: 'email', caption: 'Email', width: 200 },\n  { key: 'phone', caption: 'Phone', width: 150 },\n  { key: 'company', caption: 'Company', width: 200 },\n  { key: 'jobTitle', caption: 'Job Title', width: 180 },\n  { key: 'department', caption: 'Department', width: 150 },\n  { key: 'city', caption: 'City', width: 120 },\n  { key: 'country', caption: 'Country', width: 120 },\n  { key: 'joinDate', caption: 'Join Date', width: 120 },\n  { key: 'experience', caption: 'Experience', width: 100 },\n  { key: 'salary', caption: 'Salary', width: 120, freeze: 'right' },\n  { key: 'status', caption: 'Status', width: 100, freeze: 'right' },\n];\n\nfunction MyTable() {\n  return (\n    <VirtualTable\n      data={data}\n      headers={headers}\n      rowKey=\"id\"\n      enableColumnVirtualization={true} // Enable column virtualization (default)\n    />\n  );\n}`;\n\nexport const CODE_EXAMPLE_NON_VIRTUALIZED = `import { VirtualTable } from '@/components/virtual-table';\n\nconst headers = [\n  { key: 'id', caption: 'ID', width: 80, freeze: 'left' },\n  { key: 'name', caption: 'Name', width: 180, freeze: 'left' },\n  { key: 'email', caption: 'Email', width: 200 },\n  { key: 'phone', caption: 'Phone', width: 150 },\n  { key: 'company', caption: 'Company', width: 200 },\n  { key: 'jobTitle', caption: 'Job Title', width: 180 },\n  { key: 'department', caption: 'Department', width: 150 },\n  { key: 'city', caption: 'City', width: 120 },\n  { key: 'country', caption: 'Country', width: 120 },\n  { key: 'joinDate', caption: 'Join Date', width: 120 },\n  { key: 'experience', caption: 'Experience', width: 100 },\n  { key: 'salary', caption: 'Salary', width: 120, freeze: 'right' },\n  { key: 'status', caption: 'Status', width: 100, freeze: 'right' },\n];\n\nfunction MyTable() {\n  return (\n    <VirtualTable\n      data={data}\n      headers={headers}\n      rowKey=\"id\"\n      enableColumnVirtualization={false} // Disable column virtualization\n    />\n  );\n}`;\n\nexport const CODE_EXAMPLE_COMBINED = `import { VirtualTable } from '@/components/virtual-table';\n\n// Example with both modes side by side\nfunction ComparisonTable() {\n  return (\n    <div className=\"space-y-8\">\n      {/* Virtualized Columns */}\n      <div>\n        <h3>With Column Virtualization</h3>\n        <VirtualTable\n          data={data}\n          headers={headers}\n          rowKey=\"id\"\n          enableColumnVirtualization={true}\n        />\n      </div>\n      \n      {/* Non-Virtualized Columns */}\n      <div>\n        <h3>Without Column Virtualization</h3>\n        <VirtualTable\n          data={data}\n          headers={headers}\n          rowKey=\"id\"\n          enableColumnVirtualization={false}\n        />\n      </div>\n    </div>\n  );\n}`;\n","import type { IHeader } from '../../../../components/virtual-table';\nimport type { User } from './types';\n\nexport const getVirtualizedHeaders = (): IHeader<User>[] => [\n  // Freeze Left\n  { key: 'id', caption: 'ID', width: 80, freeze: 'left' },\n  { key: 'name', caption: 'Name', width: 180, freeze: 'left' },\n\n  // Scrollable columns (these will be virtualized)\n  { key: 'email', caption: 'Email', width: 200 },\n  { key: 'phone', caption: 'Phone', width: 150 },\n  { key: 'company', caption: 'Company', width: 200 },\n  { key: 'jobTitle', caption: 'Job Title', width: 180 },\n  { key: 'department', caption: 'Department', width: 150 },\n  { key: 'city', caption: 'City', width: 120 },\n  { key: 'country', caption: 'Country', width: 120 },\n  { key: 'joinDate', caption: 'Join Date', width: 120 },\n  { key: 'experience', caption: 'Experience', width: 100 },\n  { key: 'skills', caption: 'Skills', width: 150 },\n  { key: 'username', caption: 'Username', width: 120 },\n\n  // Freeze Right\n  { key: 'salary', caption: 'Salary', width: 120, freeze: 'right' },\n  { key: 'status', caption: 'Status', width: 100, freeze: 'right' },\n];\n\nexport const getNonVirtualizedHeaders = (): IHeader<User>[] => [\n  // Freeze Left\n  { key: 'id', caption: 'ID', width: 80, freeze: 'left' },\n  { key: 'name', caption: 'Name', width: 180, freeze: 'left' },\n\n  // Group Headers (scrollable, non-virtualized)\n  {\n    key: 'group-header-personal',\n    caption: 'Personal Information',\n    children: [\n      { key: 'email', caption: 'Email', width: 200 },\n      { key: 'phone', caption: 'Phone', width: 150 },\n      { key: 'username', caption: 'Username', width: 120 },\n    ],\n  },\n  {\n    key: 'group-header-professional',\n    caption: 'Professional Information',\n    children: [\n      { key: 'company', caption: 'Company', width: 200 },\n      { key: 'jobTitle', caption: 'Job Title', width: 180 },\n      { key: 'department', caption: 'Department', width: 150 },\n      { key: 'joinDate', caption: 'Join Date', width: 120 },\n      { key: 'experience', caption: 'Experience', width: 100 },\n    ],\n  },\n  {\n    key: 'group-header-location',\n    caption: 'Location',\n    children: [\n      { key: 'city', caption: 'City', width: 120 },\n      { key: 'country', caption: 'Country', width: 120 },\n    ],\n  },\n\n  // Freeze Right\n  { key: 'salary', caption: 'Salary', width: 120, freeze: 'right' },\n  { key: 'status', caption: 'Status', width: 100, freeze: 'right' },\n];\n","import { memo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLE_VIRTUALIZED, CODE_EXAMPLE_NON_VIRTUALIZED } from '../utils/constants';\nimport type { User } from '../utils/types';\nimport { getVirtualizedHeaders, getNonVirtualizedHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype PreviewSectionProps = {\n  data: User[];\n};\n\nconst PreviewSection = ({ data }: PreviewSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const [selectedMode, setSelectedMode] = useState<'virtualized' | 'non-virtualized'>('virtualized');\n  \n  const virtualizedHeaders = getVirtualizedHeaders();\n  const nonVirtualizedHeaders = getNonVirtualizedHeaders();\n\n  const currentHeaders = selectedMode === 'virtualized' ? virtualizedHeaders : nonVirtualizedHeaders;\n  const currentCode = selectedMode === 'virtualized' ? CODE_EXAMPLE_VIRTUALIZED : CODE_EXAMPLE_NON_VIRTUALIZED;\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Preview</h2>\n        <div className='flex items-center gap-4'>\n          <div className='flex items-center gap-2'>\n            <label className='text-sm font-medium'>Mode:</label>\n            <select\n              value={selectedMode}\n              onChange={(e) => setSelectedMode(e.target.value as 'virtualized' | 'non-virtualized')}\n              className='rounded-md border border-input bg-background px-3 py-1 text-sm'\n            >\n              <option value='virtualized'>Column Virtualized</option>\n              <option value='non-virtualized'>Non-Virtualized</option>\n            </select>\n          </div>\n          <button\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n            onClick={() => setShowCode(!showCode)}\n          >\n            {showCode ? 'Hide Code' : 'Show Code'}\n          </button>\n        </div>\n      </div>\n\n      <div className='space-y-4'>\n        <div className='rounded-lg border bg-muted/20 p-4'>\n          <h3 className='text-lg font-semibold mb-2'>\n            {selectedMode === 'virtualized' ? 'Column Virtualization Enabled' : 'Column Virtualization Disabled'}\n          </h3>\n          <p className='text-sm text-muted-foreground mb-4'>\n            {selectedMode === 'virtualized' \n              ? 'Only visible columns are rendered, providing better performance with many columns. Dynamic row height is disabled. This is the default mode.'\n              : 'All columns are rendered at once, allowing for dynamic row height but may impact performance with many columns. Disable virtualization by setting enableColumnVirtualization={false}.'\n            }\n          </p>\n          \n          <div className='h-96'>\n            <VirtualTable\n              data={data}\n              filterHeight={32}\n              headerHeight={40}\n              headerMode='double'\n              headers={currentHeaders}\n              rowHeight={32}\n              rowKey='id'\n              enableColumnVirtualization={selectedMode === 'virtualized'}\n              useDynamicRowHeight={selectedMode === 'non-virtualized'}\n            />\n          </div>\n        </div>\n\n        {showCode && (\n          <div>\n            <CodeBlock \n              code={currentCode} \n              title={`${selectedMode === 'virtualized' ? 'Virtualized' : 'Non-Virtualized'} Columns Example`} \n            />\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default memo(PreviewSection);\n","import { memo } from 'react';\n\nconst UsageGuidelinesSection = () => {\n  const guidelines = [\n    {\n      title: 'When to Use Column Virtualization',\n      description: 'Use column virtualization for tables with many columns',\n      scenarios: [\n        'Tables with 15+ columns',\n        'Performance is critical',\n        'Memory usage is a concern',\n        'You don\\'t need dynamic row height'\n      ],\n      code: `enableColumnVirtualization={true}\nuseDynamicRowHeight={false}`\n    },\n    {\n      title: 'When to Use Non-Virtualized Mode',\n      description: 'Use non-virtualized mode for tables with fewer columns or when you need advanced features',\n      scenarios: [\n        'Tables with fewer than 15 columns',\n        'You need dynamic row height',\n        'Complex group headers are required',\n        'Simpler debugging is preferred'\n      ],\n      code: `enableColumnVirtualization={false}\nuseDynamicRowHeight={true}`\n    },\n    {\n      title: 'Best Practices',\n      description: 'Follow these guidelines for optimal performance',\n      scenarios: [\n        'Set appropriate column widths',\n        'Use freeze columns strategically',\n        'Test performance with your data',\n        'Consider mobile responsiveness'\n      ],\n      code: `// Always test with your actual data\nconst headers = [\n  { key: 'id', caption: 'ID', width: 80, freeze: 'left' },\n  { key: 'name', caption: 'Name', width: 180, freeze: 'left' },\n  // ... more columns\n  { key: 'status', caption: 'Status', width: 100, freeze: 'right' }\n];`\n    }\n  ];\n\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-6'>Usage Guidelines</h2>\n      \n      <div className='space-y-8'>\n        {guidelines.map((guideline, index) => (\n          <div key={index} className='rounded-lg border bg-card p-6'>\n            <h3 className='text-lg font-semibold mb-2'>{guideline.title}</h3>\n            <p className='text-muted-foreground mb-4'>{guideline.description}</p>\n            \n            <div className='grid gap-4 md:grid-cols-2'>\n              <div>\n                <h4 className='font-medium mb-2'>Scenarios:</h4>\n                <ul className='space-y-1'>\n                  {guideline.scenarios.map((scenario, scenarioIndex) => (\n                    <li key={scenarioIndex} className='flex items-start gap-2 text-sm'>\n                      <span className='text-primary mt-1'>â€¢</span>\n                      {scenario}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              <div>\n                <h4 className='font-medium mb-2'>Configuration:</h4>\n                <pre className='bg-muted p-3 rounded text-sm overflow-x-auto'>\n                  <code>{guideline.code}</code>\n                </pre>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default memo(UsageGuidelinesSection);\n","import { faker } from '@faker-js/faker';\nimport type { User } from './types';\n\nexport const generateSampleData = (count: number = 1000): User[] => {\n  return Array.from({ length: count }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    username: faker.internet.username(),\n    phone: faker.phone.number(),\n    company: faker.company.name(),\n    jobTitle: faker.person.jobTitle(),\n    city: faker.location.city(),\n    country: faker.location.country(),\n    status: faker.helpers.arrayElement(['Active', 'Inactive', 'Pending', 'On Leave']),\n    salary: faker.finance.amount({ min: 30000, max: 150000, dec: 0 }),\n    department: faker.commerce.department(),\n    joinDate: faker.date.past({ years: 5 }).toISOString().split('T')[0],\n    experience: faker.number.int({ min: 0, max: 15 }),\n    skills: faker.helpers.arrayElements([\n      'React', 'TypeScript', 'Node.js', 'Python', 'Java', 'C++', 'JavaScript',\n      'Vue.js', 'Angular', 'SQL', 'MongoDB', 'PostgreSQL', 'AWS', 'Docker'\n    ], { min: 2, max: 5 }),\n  }));\n};\n","import { memo, useMemo } from 'react';\nimport { ComparisonSection, NextStepsSection, PreviewSection } from './components';\nimport { generateSampleData } from './utils';\n\nconst ColumnVirtualizationPage = () => {\n  const data = useMemo(() => generateSampleData(1000), []);\n\n  return (\n    <div className='space-y-8'>\n      {/* Page Header */}\n      <div>\n        <h1 className='text-4xl font-bold tracking-tight'>Column Virtualization</h1>\n        <p className='text-xl text-muted-foreground mt-4'>\n          Learn how to enable or disable column virtualization to optimize performance and enable advanced\n          features. Column virtualization is enabled by default for optimal performance.\n        </p>\n      </div>\n\n      {/* Preview Section */}\n      <PreviewSection data={data} />\n\n      {/* Comparison Section */}\n      <ComparisonSection />\n\n      {/* Next Steps */}\n      <NextStepsSection />\n    </div>\n  );\n};\n\nexport default memo(ColumnVirtualizationPage);\n"],"names":["CodeBlock","code","title","language","jsxs","jsx","CodeBlock$1","memo","ComparisonSection","comparisonData","row","index","ComparisonSection$1","NextStepsSection","Link","NextStepsSection$1","CODE_EXAMPLE_VIRTUALIZED","CODE_EXAMPLE_NON_VIRTUALIZED","getVirtualizedHeaders","getNonVirtualizedHeaders","PreviewSection","data","showCode","setShowCode","useState","selectedMode","setSelectedMode","virtualizedHeaders","nonVirtualizedHeaders","currentHeaders","currentCode","e","VirtualTable","PreviewSection$1","UsageGuidelinesSection","guidelines","guideline","scenario","scenarioIndex","generateSampleData","count","_","faker","ColumnVirtualizationPage","useMemo"],"mappings":"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"}