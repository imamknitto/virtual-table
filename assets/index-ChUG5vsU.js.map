{"version":3,"file":"index-ChUG5vsU.js","sources":["../../src/pages/examples-page/scrolling-page/components/code-block.tsx","../../src/pages/examples-page/scrolling-page/components/features-overview-section.tsx","../../src/pages/examples-page/scrolling-page/utils/data-generator.ts","../../src/pages/examples-page/scrolling-page/utils/table-headers.ts","../../src/pages/examples-page/scrolling-page/utils/constants.ts","../../src/pages/examples-page/scrolling-page/components/infinite-scroll-section.tsx","../../src/pages/examples-page/scrolling-page/components/next-steps-section.tsx","../../src/pages/examples-page/scrolling-page/components/performance-tips-section.tsx","../../src/pages/examples-page/scrolling-page/components/programmatic-scrolling-section.tsx","../../src/pages/examples-page/scrolling-page/components/scroll-tracking-section.tsx","../../src/pages/examples-page/scrolling-page/index.tsx"],"sourcesContent":["import { memo } from 'react';\n\ntype CodeBlockProps = {\n  title: string;\n  code: string;\n};\n\nconst CodeBlock = ({ title, code }: CodeBlockProps) => {\n  return (\n    <div className='mt-4 border rounded-lg overflow-hidden'>\n      <div className='bg-muted px-4 py-2 border-b'>\n        <span className='text-sm font-medium'>{title}</span>\n      </div>\n      <pre className='p-4 overflow-x-auto bg-background'>\n        <code className='text-sm'>{code}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default memo(CodeBlock);\n\n","import { memo } from 'react';\n\nconst FeaturesOverviewSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>Scrolling Features Overview</h2>\n      <div className='grid gap-4 md:grid-cols-3'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>üìä Scroll Tracking</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>‚Ä¢ Real-time scroll position tracking</li>\n            <li>‚Ä¢ Both vertical and horizontal scroll</li>\n            <li>‚Ä¢ Perfect for analytics and UX features</li>\n            <li>‚Ä¢ Optimized with throttling</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>üéØ Programmatic Control</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>‚Ä¢ Access table scroll element via ref</li>\n            <li>‚Ä¢ Smooth scrolling animations</li>\n            <li>‚Ä¢ Precise position control</li>\n            <li>‚Ä¢ Great for navigation features</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>‚ôæÔ∏è Infinite Loading</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>‚Ä¢ Bottom detection with threshold</li>\n            <li>‚Ä¢ Performance optimized</li>\n            <li>‚Ä¢ Throttled to prevent spam</li>\n            <li>‚Ä¢ Perfect for large datasets</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(FeaturesOverviewSection);\n\n","import { faker } from '@faker-js/faker';\nimport type { Employee } from './types';\n\nexport const generateEmployeeData = (count: number = 100): Employee[] => {\n  return Array.from({ length: count }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    department: faker.commerce.department(),\n    position: faker.person.jobTitle(),\n    salary: faker.number.int({ min: 30000, max: 150000 }),\n    startDate: faker.date.past({ years: 5 }).toISOString().split('T')[0],\n    status: faker.helpers.arrayElement(['active', 'inactive']) as Employee['status'],\n    location: faker.location.city(),\n    manager: faker.person.fullName(),\n    performance: faker.number.int({ min: 1, max: 5 }),\n  }));\n};\n\n","import type { IHeader } from '../../../../components/virtual-table';\nimport type { Employee } from './types';\n\nexport const getEmployeeHeaders = (): IHeader<Employee>[] => [\n  { key: 'id', caption: 'ID', width: 80 },\n  { key: 'name', caption: 'Name', width: 200 },\n  { key: 'email', caption: 'Email', width: 250 },\n  { key: 'department', caption: 'Department', width: 150 },\n  { key: 'position', caption: 'Position', width: 180 },\n  {\n    key: 'salary',\n    caption: 'Salary',\n    width: 120,\n    renderCell: (item) => `$${item.salary.toLocaleString()}`,\n  },\n  { key: 'startDate', caption: 'Start Date', width: 120 },\n  { key: 'location', caption: 'Location', width: 150 },\n  { key: 'manager', caption: 'Manager', width: 180 },\n  { key: 'performance', caption: 'Rating', width: 100 },\n  { key: 'status', caption: 'Status', width: 100 },\n];\n\n","export const CODE_EXAMPLES = {\n  scrollTracking: `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\nimport { useRef, useCallback } from 'react';\n\nconst ScrollTrackingTable = () => {\n  const tableRef = useRef<HTMLDivElement>(null);\n  const [scrollPosition, setScrollPosition] = useState({ \n    scrollTop: 0, \n    scrollLeft: 0 \n  });\n\n  // Track scroll position\n  const handleScroll = useCallback((scrollTop: number, scrollLeft: number) => {\n    setScrollPosition({ scrollTop, scrollLeft });\n    console.log('Scroll position:', { scrollTop, scrollLeft });\n  }, []);\n\n  const headers: IHeader<Employee>[] = [\n    { key: 'id', caption: 'ID', width: 80 },\n    { key: 'name', caption: 'Name', width: 200 },\n    // ... other headers\n  ];\n\n  return (\n    <VirtualTable\n      ref={tableRef}\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      onScroll={handleScroll}\n    />\n  );\n};`,\n\n  programmaticScrolling: `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\nimport { useRef } from 'react';\n\nconst ProgrammaticScrollTable = () => {\n  const tableRef = useRef<HTMLDivElement>(null);\n\n  // Programmatic scroll functions\n  const scrollToTop = () => {\n    tableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const scrollToBottom = () => {\n    tableRef.current?.scrollTo({ \n      top: tableRef.current.scrollHeight, \n      behavior: 'smooth' \n    });\n  };\n\n  const scrollToPosition = (top: number, left: number = 0) => {\n    tableRef.current?.scrollTo({ top, left, behavior: 'smooth' });\n  };\n\n  return (\n    <div>\n      <div className=\"mb-4 space-x-2\">\n        <button onClick={scrollToTop}>Scroll to Top</button>\n        <button onClick={scrollToBottom}>Scroll to Bottom</button>\n        <button onClick={() => scrollToPosition(500)}>Scroll to 500px</button>\n      </div>\n      \n      <VirtualTable\n        ref={tableRef}\n        headers={headers}\n        data={data}\n        rowKey=\"id\"\n      />\n    </div>\n  );\n};`,\n\n  infiniteScroll: `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\nimport { useCallback, useState } from 'react';\n\nconst InfiniteScrollTable = () => {\n  const [data, setData] = useState(initialData);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Handle scroll to bottom for infinite loading\n  const handleScrollTouchBottom = useCallback(() => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    \n    // Simulate API call\n    fetchMoreData()\n      .then(newData => {\n        setData(prev => [...prev, ...newData]);\n        setIsLoading(false);\n      });\n  }, [isLoading]);\n\n  return (\n    <VirtualTable\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      onScrollTouchBottom={handleScrollTouchBottom}\n    />\n  );\n};`,\n};\n\n","import { memo, useCallback, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLES, type Employee, generateEmployeeData } from '../utils';\nimport { getEmployeeHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype InfiniteScrollSectionProps = {\n  initialData: Employee[];\n};\n\nconst InfiniteScrollSection = ({ initialData }: InfiniteScrollSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const [data, setData] = useState(initialData);\n  const [bottomTouchCount, setBottomTouchCount] = useState(0);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const headers = getEmployeeHeaders();\n\n  const handleScrollTouchBottom = useCallback(() => {\n    setBottomTouchCount((prev) => prev + 1);\n\n    // Simulate loading more data\n    setIsLoadingMore(true);\n    setTimeout(() => {\n      const newData = generateEmployeeData(20);\n      setData((prev) => [...prev, ...newData]);\n      setIsLoadingMore(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>\n          Scroll Touch Bottom for Infinite Loading\n        </h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='mb-4 p-4 bg-orange-50 dark:bg-orange-950 border border-orange-200 dark:border-orange-800 rounded-lg'>\n        <p className='text-sm text-orange-800 dark:text-orange-200'>\n          <strong>Infinite Scroll:</strong> Use the{' '}\n          <code className='bg-orange-100 dark:bg-orange-900 px-1 rounded'>\n            onScrollTouchBottom\n          </code>{' '}\n          prop to detect when users scroll near the bottom. Perfect for implementing infinite\n          loading, pagination, or lazy loading of data.\n        </p>\n      </div>\n\n      <div className='grid grid-cols-1 lg:grid-cols-3 gap-6'>\n        {/* Table */}\n        <div className='lg:col-span-2'>\n          <div className='h-96'>\n            <VirtualTable\n              data={data}\n              filterHeight={32}\n              headerHeight={40}\n              headers={headers}\n              isLoading={isLoadingMore}\n              onScrollTouchBottom={handleScrollTouchBottom}\n              rowHeight={32}\n              rowKey='id'\n            />\n          </div>\n        </div>\n\n        {/* Stats */}\n        <div className='space-y-4'>\n          <div className='border rounded-lg p-4'>\n            <h3 className='font-semibold mb-3'>Infinite Scroll Stats</h3>\n            <div className='text-sm space-y-1'>\n              <p>\n                <strong>Total Records:</strong> {data.length}\n              </p>\n              <p>\n                <strong>Bottom Touches:</strong> {bottomTouchCount}\n              </p>\n              <p>\n                <strong>Loading:</strong> {isLoadingMore ? 'Yes' : 'No'}\n              </p>\n            </div>\n          </div>\n\n          <div className='border rounded-lg p-4'>\n            <h3 className='font-semibold mb-3'>How it Works</h3>\n            <div className='text-sm space-y-2'>\n              <p>‚Ä¢ Scroll to the bottom of the table</p>\n              <p>‚Ä¢ New data will be loaded automatically</p>\n              <p>‚Ä¢ Threshold: 100px from bottom</p>\n              <p>‚Ä¢ Throttled to prevent excessive calls</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showCode && (\n        <CodeBlock code={CODE_EXAMPLES.infiniteScroll} title='Infinite Scroll Implementation' />\n      )}\n    </section>\n  );\n};\n\nexport default memo(InfiniteScrollSection);\n\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NextStepsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>üöÄ Next Steps</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Ready to implement advanced scrolling features? Explore these related examples:\n        </p>\n        <div className='flex flex-wrap gap-2'>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/large-dataset'\n          >\n            Large Datasets\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/freeze-column'\n          >\n            Freeze Columns\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/click-row-action'\n          >\n            Row Actions\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(NextStepsSection);\n\n","import { memo } from 'react';\n\nconst PerformanceTipsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>‚ö° Performance Tips</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Here are some best practices for implementing scrolling features efficiently:\n        </p>\n        <div className='grid gap-4 md:grid-cols-2'>\n          <div>\n            <h4 className='font-medium mb-2'>Scroll Event Optimization</h4>\n            <ul className='text-sm text-muted-foreground space-y-1'>\n              <li>‚Ä¢ Use throttling or debouncing for scroll events</li>\n              <li>‚Ä¢ Implement passive event listeners</li>\n              <li>‚Ä¢ Use requestAnimationFrame for smooth updates</li>\n              <li>‚Ä¢ Avoid heavy computations in scroll handlers</li>\n            </ul>\n          </div>\n          <div>\n            <h4 className='font-medium mb-2'>Infinite Loading Best Practices</h4>\n            <ul className='text-sm text-muted-foreground space-y-1'>\n              <li>‚Ä¢ Set appropriate threshold values (50-100px)</li>\n              <li>‚Ä¢ Implement loading states and error handling</li>\n              <li>‚Ä¢ Consider data pagination for very large datasets</li>\n              <li>‚Ä¢ Use virtual scrolling for optimal performance</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(PerformanceTipsSection);\n\n","import { memo, useRef, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLES, type Employee } from '../utils';\nimport { getEmployeeHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype ProgrammaticScrollingSectionProps = {\n  data: Employee[];\n};\n\nconst ProgrammaticScrollingSection = ({ data }: ProgrammaticScrollingSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const tableRef = useRef<HTMLDivElement>(null);\n  const headers = getEmployeeHeaders();\n\n  const scrollToTop = () => {\n    tableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const scrollToBottom = () => {\n    tableRef.current?.scrollTo({\n      top: tableRef.current.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const scrollToPosition = (top: number, left: number = 0) => {\n    tableRef.current?.scrollTo({ top, left, behavior: 'smooth' });\n  };\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Programmatic Scrolling with Ref</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='mb-4 p-4 bg-green-50 dark:bg-green-950 border border-green-200 dark:border-green-800 rounded-lg'>\n        <p className='text-sm text-green-800 dark:text-green-200'>\n          <strong>Programmatic Scrolling:</strong> Use the{' '}\n          <code className='bg-green-100 dark:bg-green-900 px-1 rounded'>ref</code> prop to access\n          the table's scroll element and implement programmatic scrolling. Great for navigation,\n          search results, or user-controlled scrolling.\n        </p>\n      </div>\n\n      <div className='mb-4 flex flex-wrap gap-2'>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n          onClick={scrollToTop}\n        >\n          üìç Scroll to Top\n        </button>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n          onClick={scrollToBottom}\n        >\n          üìç Scroll to Bottom\n        </button>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n          onClick={() => scrollToPosition(500)}\n        >\n          üìç Scroll to 500px\n        </button>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n          onClick={() => scrollToPosition(1000, 200)}\n        >\n          üìç Scroll to (1000px, 200px)\n        </button>\n      </div>\n\n      <div className='h-96'>\n        <VirtualTable\n          data={data}\n          filterHeight={32}\n          headerHeight={40}\n          headers={headers}\n          ref={tableRef}\n          rowHeight={32}\n          rowKey='id'\n        />\n      </div>\n\n      {showCode && (\n        <CodeBlock\n          code={CODE_EXAMPLES.programmaticScrolling}\n          title='Programmatic Scrolling Implementation'\n        />\n      )}\n    </section>\n  );\n};\n\nexport default memo(ProgrammaticScrollingSection);\n\n","import { memo, useCallback, useRef, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLES, type Employee, type ScrollPosition } from '../utils';\nimport { getEmployeeHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype ScrollTrackingSectionProps = {\n  data: Employee[];\n};\n\nconst ScrollTrackingSection = ({ data }: ScrollTrackingSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const [scrollPosition, setScrollPosition] = useState<ScrollPosition>({ scrollTop: 0, scrollLeft: 0 });\n  const [scrollEvents, setScrollEvents] = useState<string[]>([]);\n  const tableRef = useRef<HTMLDivElement>(null);\n  const headers = getEmployeeHeaders();\n\n  const handleScroll = useCallback((scrollTop: number, scrollLeft: number) => {\n    setScrollPosition({ scrollTop, scrollLeft });\n    setScrollEvents((prev) => [\n      `Scroll: Top=${Math.round(scrollTop)}, Left=${Math.round(scrollLeft)}`,\n      ...prev.slice(0, 4),\n    ]);\n  }, []);\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Scroll Tracking with onScroll Prop</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='mb-4 p-4 bg-blue-50 dark:bg-blue-950 border border-blue-200 dark:border-blue-800 rounded-lg'>\n        <p className='text-sm text-blue-800 dark:text-blue-200'>\n          <strong>Scroll Tracking:</strong> Use the{' '}\n          <code className='bg-blue-100 dark:bg-blue-900 px-1 rounded'>onScroll</code> prop to track\n          scroll position in real-time. Perfect for implementing scroll-based features like sticky\n          headers, progress indicators, or analytics.\n        </p>\n      </div>\n\n      <div className='grid grid-cols-1 lg:grid-cols-3 gap-6'>\n        {/* Table */}\n        <div className='lg:col-span-2'>\n          <div className='h-96'>\n            <VirtualTable\n              data={data}\n              filterHeight={32}\n              headerHeight={40}\n              headers={headers}\n              onScroll={handleScroll}\n              ref={tableRef}\n              rowHeight={32}\n              rowKey='id'\n            />\n          </div>\n        </div>\n\n        {/* Scroll Info */}\n        <div className='space-y-4'>\n          <div className='border rounded-lg p-4'>\n            <h3 className='font-semibold mb-3'>Current Scroll Position</h3>\n            <div className='text-sm space-y-1'>\n              <p>\n                <strong>Scroll Top:</strong> {Math.round(scrollPosition.scrollTop)}px\n              </p>\n              <p>\n                <strong>Scroll Left:</strong> {Math.round(scrollPosition.scrollLeft)}px\n              </p>\n            </div>\n          </div>\n\n          <div className='border rounded-lg p-4'>\n            <h3 className='font-semibold mb-3'>Scroll Events</h3>\n            <div className='text-sm space-y-1 max-h-32 overflow-y-auto'>\n              {scrollEvents.length > 0 ? (\n                scrollEvents.map((event, index) => (\n                  <p key={index} className='text-xs bg-muted px-2 py-1 rounded'>\n                    {event}\n                  </p>\n                ))\n              ) : (\n                <p className='text-muted-foreground'>No scroll events yet</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showCode && (\n        <CodeBlock code={CODE_EXAMPLES.scrollTracking} title='Scroll Tracking Implementation' />\n      )}\n    </section>\n  );\n};\n\nexport default memo(ScrollTrackingSection);\n\n","import { memo, useMemo } from 'react';\nimport {\n  FeaturesOverviewSection,\n  InfiniteScrollSection,\n  NextStepsSection,\n  PerformanceTipsSection,\n  ProgrammaticScrollingSection,\n  ScrollTrackingSection,\n} from './components';\nimport { generateEmployeeData } from './utils';\n\nconst ScrollingPage = () => {\n  // Memoized data generation to avoid regenerating on every render\n  const employeeData = useMemo(() => generateEmployeeData(50), []);\n\n  return (\n    <div className='space-y-8'>\n      {/* Page Header */}\n      <div>\n        <h1 className='text-4xl font-bold tracking-tight'>Scrolling Features</h1>\n        <p className='text-xl text-muted-foreground mt-4'>\n          Learn how to implement advanced scrolling features with the Virtual Table, including\n          scroll tracking, programmatic scrolling, and infinite scroll functionality.\n        </p>\n      </div>\n\n      {/* Scroll Tracking Section */}\n      <ScrollTrackingSection data={employeeData} />\n\n      {/* Programmatic Scrolling Section */}\n      <ProgrammaticScrollingSection data={employeeData} />\n\n      {/* Infinite Scroll Section */}\n      <InfiniteScrollSection initialData={employeeData} />\n\n      {/* Features Overview */}\n      <FeaturesOverviewSection />\n\n      {/* Performance Tips */}\n      <PerformanceTipsSection />\n\n      {/* Next Steps */}\n      <NextStepsSection />\n    </div>\n  );\n};\n\nexport default memo(ScrollingPage);\n\n"],"names":["CodeBlock","title","code","jsxs","jsx","CodeBlock$1","memo","FeaturesOverviewSection","FeaturesOverviewSection$1","generateEmployeeData","count","_","index","faker","getEmployeeHeaders","item","CODE_EXAMPLES","InfiniteScrollSection","initialData","showCode","setShowCode","useState","data","setData","bottomTouchCount","setBottomTouchCount","isLoadingMore","setIsLoadingMore","headers","handleScrollTouchBottom","useCallback","prev","newData","VirtualTable","InfiniteScrollSection$1","NextStepsSection","Link","NextStepsSection$1","PerformanceTipsSection","PerformanceTipsSection$1","ProgrammaticScrollingSection","tableRef","useRef","scrollToTop","_a","scrollToBottom","scrollToPosition","top","left","ProgrammaticScrollingSection$1","ScrollTrackingSection","scrollPosition","setScrollPosition","scrollEvents","setScrollEvents","handleScroll","scrollTop","scrollLeft","event","ScrollTrackingSection$1","ScrollingPage","employeeData","useMemo"],"mappings":"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"}