{"version":3,"file":"index-CXjic3-f.js","sources":["../../src/pages/examples-page/freeze-column-page/components/code-block.tsx","../../src/pages/examples-page/freeze-column-page/components/features-section.tsx","../../src/pages/examples-page/freeze-column-page/components/next-steps-section.tsx","../../src/pages/examples-page/freeze-column-page/utils/data-generator.ts","../../src/pages/examples-page/freeze-column-page/utils/table-headers.ts","../../src/pages/examples-page/freeze-column-page/utils/constants.ts","../../src/pages/examples-page/freeze-column-page/components/preview-section.tsx","../../src/pages/examples-page/freeze-column-page/components/usage-guidelines-section.tsx","../../src/pages/examples-page/freeze-column-page/index.tsx"],"sourcesContent":["import { memo } from 'react';\n\ntype CodeBlockProps = {\n  title: string;\n  code: string;\n};\n\nconst CodeBlock = ({ title, code }: CodeBlockProps) => {\n  return (\n    <div className='border rounded-lg overflow-hidden'>\n      <div className='bg-muted px-4 py-2 border-b'>\n        <span className='text-sm font-medium'>{title}</span>\n      </div>\n      <pre className='p-4 overflow-x-auto bg-background'>\n        <code className='text-sm'>{code}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default memo(CodeBlock);\n\n","import { memo } from 'react';\n\nconst FeaturesSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>Freeze Column Features</h2>\n      <div className='grid gap-4 md:grid-cols-2'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>🔒 Left Freeze</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>• Keep important columns visible when scrolling horizontally</li>\n            <li>• Perfect for ID, Name, or primary identifiers</li>\n            <li>• Maintains sticky positioning on the left side</li>\n            <li>• Supports custom cell rendering</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>🔒 Right Freeze</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>• Keep action columns or totals always visible</li>\n            <li>• Ideal for status, actions, or calculated values</li>\n            <li>• Sticky positioning on the right side</li>\n            <li>• Works seamlessly with virtual scrolling</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(FeaturesSection);\n\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NextStepsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>🚀 Next Steps</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Ready to explore more advanced table features? Check out these examples:\n        </p>\n        <div className='flex flex-wrap gap-2'>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/checkbox-selection'\n          >\n            Checkbox Selection\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/expand-row'\n          >\n            Expand Rows\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/custom-render-cell'\n          >\n            Custom Cells\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(NextStepsSection);\n\n","import { faker } from '@faker-js/faker';\nimport type { Employee } from './types';\n\nexport const generateSampleData = (): Employee[] => {\n  return Array.from({ length: 50 }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    company: faker.company.name(),\n    position: faker.person.jobTitle(),\n    phone: faker.phone.number(),\n    address: faker.location.streetAddress(),\n    city: faker.location.city(),\n    country: faker.location.country(),\n    salary: faker.number.int({ min: 30000, max: 150000 }),\n    department: faker.commerce.department(),\n    startDate: faker.date.past().toISOString().split('T')[0],\n    status: faker.helpers.arrayElement(['Active', 'Inactive', 'Pending']),\n  }));\n};\n\n","import type { IHeader } from '../../../../components/virtual-table';\nimport type { Employee } from './types';\n\nexport const getEmployeeHeaders = (): IHeader<Employee>[] => [\n  { key: 'name', caption: 'Name', width: 200, freeze: 'left' },\n  { key: 'email', caption: 'Email', width: 250 },\n  { key: 'company', caption: 'Company', width: 200 },\n  { key: 'position', caption: 'Position', width: 180 },\n  { key: 'phone', caption: 'Phone', width: 150 },\n  { key: 'address', caption: 'Address', width: 200 },\n  { key: 'city', caption: 'City', width: 150 },\n  { key: 'country', caption: 'Country', width: 120 },\n  { key: 'department', caption: 'Department', width: 150 },\n  { key: 'startDate', caption: 'Start Date', width: 120 },\n  { key: 'status', caption: 'Status', width: 100, freeze: 'right' },\n  {\n    key: 'salary',\n    caption: 'Salary',\n    width: 120,\n    freeze: 'right',\n    renderCell: (item) => `$${item.salary.toLocaleString()}`,\n  },\n];\n\n","export const CODE_EXAMPLE = `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\nimport { faker } from '@faker-js/faker';\n\n// Generate sample data\nconst generateSampleData = () => {\n  return Array.from({ length: 30 }, (_, index) => ({\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    company: faker.company.name(),\n    position: faker.person.jobTitle(),\n    phone: faker.phone.number(),\n    city: faker.location.city(),\n    country: faker.location.country(),\n    status: faker.helpers.arrayElement(['Active', 'Inactive', 'Pending']),\n    salary: faker.number.int({ min: 30000, max: 150000 }),\n  }));\n};\n\nconst MyTable = () => {\n  const [data] = useState(generateSampleData());\n\n  // Define table headers with freeze columns\n  const headers: IHeader<(typeof data)[0]>[] = [\n    { key: 'id', caption: 'ID', width: 80, freeze: 'left' },\n    { key: 'name', caption: 'Name', width: 200, freeze: 'left' },\n    { key: 'email', caption: 'Email', width: 250 },\n    { key: 'company', caption: 'Company', width: 200 },\n    { key: 'position', caption: 'Position', width: 180 },\n    { key: 'phone', caption: 'Phone', width: 150 },\n    { key: 'city', caption: 'City', width: 150 },\n    { key: 'country', caption: 'Country', width: 120 },\n    { key: 'status', caption: 'Status', width: 100, freeze: 'right' },\n    {\n      key: 'salary',\n      caption: 'Salary',\n      width: 120,\n      freeze: 'right',\n      renderCell: (item) => \\`$\\${item.salary.toLocaleString()}\\`,\n    },\n  ];\n\n  return (\n    <VirtualTable\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      headerMode=\"double\"\n      rowHeight={32}\n      headerHeight={40}\n      filterHeight={32}\n    />\n  );\n};`;\n\n","import { memo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLE, type Employee } from '../utils';\nimport { getEmployeeHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype PreviewSectionProps = {\n  data: Employee[];\n};\n\nconst PreviewSection = ({ data }: PreviewSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const headers = getEmployeeHeaders();\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Preview</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='h-96'>\n        <VirtualTable\n          data={data}\n          filterHeight={32}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n        />\n      </div>\n\n      {showCode && <div className='mt-4'><CodeBlock code={CODE_EXAMPLE} title='Freeze Columns Example' /></div>}\n    </section>\n  );\n};\n\nexport default memo(PreviewSection);\n\n","import { memo } from 'react';\n\nconst UsageGuidelinesSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>Usage Guidelines</h2>\n      <div className='space-y-4'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>💡 Best Practices</h3>\n          <ul className='text-sm text-muted-foreground space-y-2'>\n            <li>\n              <strong>Left Freeze:</strong> Use for primary identifiers (ID, Name) that users need\n              to reference while scrolling\n            </li>\n            <li>\n              <strong>Right Freeze:</strong> Use for action buttons, status indicators, or summary\n              data\n            </li>\n            <li>\n              <strong>Performance:</strong> Freeze columns don't affect virtual scrolling performance\n            </li>\n            <li>\n              <strong>Responsive:</strong> Freeze columns maintain their behavior across different\n              screen sizes\n            </li>\n          </ul>\n        </div>\n\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>⚙️ Implementation</h3>\n          <ul className='text-sm text-muted-foreground space-y-2'>\n            <li>\n              Add <code className='bg-muted px-1 py-0.5 rounded text-xs'>freeze: 'left'</code> or{' '}\n              <code className='bg-muted px-1 py-0.5 rounded text-xs'>freeze: 'right'</code> to your\n              header configuration\n            </li>\n            <li>You can have multiple left-freeze columns (they stack from left to right)</li>\n            <li>You can have multiple right-freeze columns (they stack from right to left)</li>\n            <li>Regular columns scroll normally between the frozen sections</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(UsageGuidelinesSection);\n\n","import { memo, useMemo } from 'react';\nimport {\n  FeaturesSection,\n  NextStepsSection,\n  PreviewSection,\n  UsageGuidelinesSection,\n} from './components';\nimport { generateSampleData } from './utils';\n\nconst FreezeColumnPage = () => {\n  const data = useMemo(() => generateSampleData(), []);\n\n  return (\n    <div className='space-y-8'>\n      {/* Page Header */}\n      <div>\n        <h1 className='text-4xl font-bold tracking-tight'>Freeze Columns</h1>\n        <p className='text-xl text-muted-foreground mt-4'>\n          Learn how to freeze columns on the left or right side of your table for better data\n          navigation.\n        </p>\n      </div>\n\n      {/* Preview Section */}\n      <PreviewSection data={data} />\n\n      {/* Features Section */}\n      <FeaturesSection />\n\n      {/* Usage Guidelines */}\n      <UsageGuidelinesSection />\n\n      {/* Next Steps */}\n      <NextStepsSection />\n    </div>\n  );\n};\n\nexport default memo(FreezeColumnPage);\n\n"],"names":["CodeBlock","title","code","jsxs","jsx","CodeBlock$1","memo","FeaturesSection","FeaturesSection$1","NextStepsSection","Link","NextStepsSection$1","generateSampleData","_","index","faker","getEmployeeHeaders","item","CODE_EXAMPLE","PreviewSection","data","showCode","setShowCode","useState","headers","VirtualTable","PreviewSection$1","UsageGuidelinesSection","UsageGuidelinesSection$1","FreezeColumnPage","useMemo"],"mappings":"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"}