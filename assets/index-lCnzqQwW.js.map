{"version":3,"file":"index-lCnzqQwW.js","sources":["../../src/pages/examples-page/header-grouping-page/components/api-reference-section.tsx","../../src/pages/examples-page/header-grouping-page/utils/data-generator.ts","../../src/pages/examples-page/header-grouping-page/utils/table-headers.ts","../../src/pages/examples-page/header-grouping-page/utils/constants.ts","../../src/pages/examples-page/header-grouping-page/components/code-block.tsx","../../src/pages/examples-page/header-grouping-page/components/basic-grouping-section.tsx","../../src/pages/examples-page/header-grouping-page/components/best-practices-section.tsx","../../src/pages/examples-page/header-grouping-page/components/complex-grouping-section.tsx","../../src/pages/examples-page/header-grouping-page/components/features-section.tsx","../../src/pages/examples-page/header-grouping-page/components/freeze-grouping-section.tsx","../../src/pages/examples-page/header-grouping-page/components/key-naming-section.tsx","../../src/pages/examples-page/header-grouping-page/components/nested-grouping-section.tsx","../../src/pages/examples-page/header-grouping-page/components/next-steps-section.tsx","../../src/pages/examples-page/header-grouping-page/index.tsx"],"sourcesContent":["import { memo } from 'react';\n\nconst ApiReferenceSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>API Reference</h2>\n      <div className='border rounded-lg overflow-hidden'>\n        <div className='bg-muted px-4 py-2 border-b'>\n          <span className='text-sm font-medium'>Header Grouping Props</span>\n        </div>\n        <div className='p-4 space-y-4'>\n          <div>\n            <h4 className='font-medium text-sm mb-2'>children</h4>\n            <p className='text-sm text-muted-foreground mb-2'>\n              Array of child headers that belong to this group. Each child can also have its own\n              children for nested grouping.\n            </p>\n            <code className='text-xs bg-muted px-2 py-1 rounded'>\n              children?: Omit&lt;IHeader&lt;TData&gt;, 'freeze'&gt;[]\n            </code>\n          </div>\n          <div>\n            <h4 className='font-medium text-sm mb-2'>key</h4>\n            <p className='text-sm text-muted-foreground mb-2'>\n              <strong className='text-red-600 dark:text-red-400'>CRITICAL:</strong> For group\n              headers, the key <strong>MUST</strong> start with{' '}\n              <code className='bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 px-1 py-0.5 rounded text-xs'>\n                group-header-\n              </code>{' '}\n              prefix. This is how the virtual table identifies and renders grouped headers.\n            </p>\n            <div className='mb-2 p-2 bg-red-50 dark:bg-red-950 border border-red-200 dark:border-red-800 rounded text-xs'>\n              <strong>Examples:</strong>\n              <br />✅ <code className='text-green-700 dark:text-green-400'>group-header-contact</code>\n              <br />✅ <code className='text-green-700 dark:text-green-400'>group-header-financial</code>\n              <br />❌ <code className='text-red-700 dark:text-red-400'>contact-info</code> (will be\n              treated as regular column)\n            </div>\n            <code className='text-xs bg-muted px-2 py-1 rounded'>\n              key: keyof TData | 'expand' | 'action' | 'row-selection' | (string & object)\n            </code>\n          </div>\n          <div>\n            <h4 className='font-medium text-sm mb-2'>caption</h4>\n            <p className='text-sm text-muted-foreground mb-2'>\n              Display text for the group header. This appears in the top row of the grouped columns.\n            </p>\n            <code className='text-xs bg-muted px-2 py-1 rounded'>caption: string</code>\n          </div>\n          <div>\n            <h4 className='font-medium text-sm mb-2'>width</h4>\n            <p className='text-sm text-muted-foreground mb-2'>\n              Total width of the group. This should equal the sum of all child column widths.\n            </p>\n            <code className='text-xs bg-muted px-2 py-1 rounded'>width?: number</code>\n          </div>\n          <div>\n            <h4 className='font-medium text-sm mb-2'>freeze</h4>\n            <p className='text-sm text-muted-foreground mb-2'>\n              Freeze the entire group to the left or right side of the table. Useful for keeping\n              important grouped columns visible while scrolling.\n            </p>\n            <code className='text-xs bg-muted px-2 py-1 rounded'>freeze?: 'left' | 'right'</code>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(ApiReferenceSection);\n\n","import { faker } from '@faker-js/faker';\nimport type { Employee, SalesData } from './types';\n\nexport const generateEmployeeData = (): Employee[] => {\n  return Array.from({ length: 30 }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    phone: faker.phone.number(),\n    department: faker.commerce.department(),\n    position: faker.person.jobTitle(),\n    salary: faker.number.int({ min: 30000, max: 150000 }),\n    startDate: faker.date.past({ years: 5 }).toISOString().split('T')[0],\n    performance: faker.number.int({ min: 1, max: 5 }),\n    manager: faker.person.fullName(),\n    location: faker.location.city(),\n    skills: faker.helpers.arrayElements(\n      ['React', 'TypeScript', 'Node.js', 'Python', 'Java', 'C#', 'Go', 'Rust'],\n      { min: 2, max: 5 },\n    ),\n  }));\n};\n\nexport const generateSalesData = (): SalesData[] => {\n  return Array.from({ length: 25 }, (_, index) => ({\n    id: index + 1,\n    product: faker.commerce.productName(),\n    category: faker.commerce.department(),\n    q1Sales: faker.number.int({ min: 10000, max: 100000 }),\n    q2Sales: faker.number.int({ min: 10000, max: 100000 }),\n    q3Sales: faker.number.int({ min: 10000, max: 100000 }),\n    q4Sales: faker.number.int({ min: 10000, max: 100000 }),\n    totalSales: 0,\n    profit: faker.number.int({ min: 5000, max: 50000 }),\n    margin: 0,\n    region: faker.location.state(),\n    salesRep: faker.person.fullName(),\n  })).map((item) => ({\n    ...item,\n    totalSales: item.q1Sales + item.q2Sales + item.q3Sales + item.q4Sales,\n    margin: Math.round((item.profit / (item.q1Sales + item.q2Sales + item.q3Sales + item.q4Sales)) * 100),\n  }));\n};\n\n","import type { IHeader } from '../../../../components/virtual-table';\nimport type { Employee, SalesData } from './types';\n\nexport const getEmployeeHeaders = (): IHeader<Employee>[] => [\n  { key: 'name', caption: 'Name', width: 200 },\n  { key: 'email', caption: 'Email', width: 250 },\n  {\n    key: 'group-header-contact',\n    caption: 'Contact Information',\n    children: [\n      { key: 'phone', caption: 'Phone', width: 150 },\n      { key: 'location', caption: 'Location', width: 150 },\n    ],\n  },\n  {\n    key: 'group-header-work',\n    caption: 'Work Details',\n    children: [\n      { key: 'department', caption: 'Department', width: 150 },\n      { key: 'position', caption: 'Position', width: 150 },\n      { key: 'manager', caption: 'Manager', width: 100 },\n    ],\n  },\n  {\n    key: 'group-header-financial',\n    caption: 'Financial',\n    children: [\n      {\n        key: 'salary',\n        caption: 'Salary',\n        width: 100,\n        renderCell: (item) => `$${item.salary.toLocaleString()}`,\n      },\n      { key: 'performance', caption: 'Rating', width: 100 },\n    ],\n  },\n  { key: 'startDate', caption: 'Start Date', width: 120 },\n];\n\nexport const getSalesHeaders = (): IHeader<SalesData>[] => [\n  { key: 'product', caption: 'Product', width: 200 },\n  { key: 'category', caption: 'Category', width: 150 },\n  {\n    key: 'group-header-quarterly',\n    caption: 'Quarterly Sales',\n    children: [\n      {\n        key: 'q1Sales',\n        caption: 'Q1',\n        width: 100,\n        renderCell: (item) => `$${item.q1Sales.toLocaleString()}`,\n      },\n      {\n        key: 'q2Sales',\n        caption: 'Q2',\n        width: 100,\n        renderCell: (item) => `$${item.q2Sales.toLocaleString()}`,\n      },\n      {\n        key: 'q3Sales',\n        caption: 'Q3',\n        width: 100,\n        renderCell: (item) => `$${item.q3Sales.toLocaleString()}`,\n      },\n      {\n        key: 'q4Sales',\n        caption: 'Q4',\n        width: 100,\n        renderCell: (item) => `$${item.q4Sales.toLocaleString()}`,\n      },\n    ],\n  },\n  {\n    key: 'group-header-summary',\n    caption: 'Summary',\n    children: [\n      {\n        key: 'totalSales',\n        caption: 'Total Sales',\n        width: 120,\n        renderCell: (item) => `$${item.totalSales.toLocaleString()}`,\n      },\n      {\n        key: 'profit',\n        caption: 'Profit',\n        width: 100,\n        renderCell: (item) => `$${item.profit.toLocaleString()}`,\n      },\n      { key: 'margin', caption: 'Margin %', width: 100, renderCell: (item) => `${item.margin}%` },\n    ],\n  },\n  {\n    key: 'group-header-team',\n    caption: 'Team',\n    children: [\n      { key: 'region', caption: 'Region', width: 100 },\n      { key: 'salesRep', caption: 'Sales Rep', width: 120 },\n    ],\n  },\n];\n\nexport const getComplexHeaders = (): IHeader<Employee>[] => [\n  { key: 'name', caption: 'Name', width: 180 },\n  { key: 'email', caption: 'Email', width: 220 },\n  {\n    key: 'group-header-personal',\n    caption: 'Personal Information',\n    width: 350,\n    children: [\n      { key: 'phone', caption: 'Phone', width: 120 },\n      { key: 'location', caption: 'Location', width: 120 },\n      { key: 'startDate', caption: 'Start Date', width: 110 },\n    ],\n  },\n  {\n    key: 'group-header-professional',\n    caption: 'Professional Details',\n    width: 450,\n    children: [\n      {\n        key: 'group-header-role',\n        caption: 'Role',\n        width: 225,\n        children: [\n          { key: 'department', caption: 'Department', width: 115 },\n          { key: 'position', caption: 'Position', width: 110 },\n        ],\n      },\n      {\n        key: 'group-header-performance',\n        caption: 'Performance',\n        width: 225,\n        children: [\n          { key: 'manager', caption: 'Manager', width: 115 },\n          { key: 'performance', caption: 'Rating', width: 110 },\n        ],\n      },\n    ],\n  },\n  {\n    key: 'salary',\n    caption: 'Salary',\n    width: 120,\n    renderCell: (item) => `$${item.salary.toLocaleString()}`,\n  },\n];\n\nexport const getFreezeGroupHeaders = (): IHeader<Employee>[] => [\n  {\n    key: 'group-header-basic',\n    caption: 'Basic Info',\n    freeze: 'left',\n    width: 300,\n    children: [\n      { key: 'name', caption: 'Name', width: 150 },\n      { key: 'email', caption: 'Email', width: 150 },\n    ],\n  },\n  {\n    key: 'group-header-contact',\n    caption: 'Contact Information',\n    width: 300,\n    children: [\n      { key: 'phone', caption: 'Phone', width: 150 },\n      { key: 'location', caption: 'Location', width: 150 },\n    ],\n  },\n  {\n    key: 'group-header-work',\n    caption: 'Work Details',\n    width: 400,\n    children: [\n      { key: 'department', caption: 'Department', width: 150 },\n      { key: 'position', caption: 'Position', width: 150 },\n      { key: 'manager', caption: 'Manager', width: 100 },\n    ],\n  },\n  {\n    key: 'group-header-financial',\n    caption: 'Financial',\n    width: 200,\n    children: [\n      {\n        key: 'salary',\n        caption: 'Salary',\n        width: 100,\n        renderCell: (item) => `$${item.salary.toLocaleString()}`,\n      },\n      { key: 'performance', caption: 'Rating', width: 100 },\n    ],\n  },\n  {\n    key: 'group-header-actions',\n    caption: 'Actions',\n    freeze: 'right',\n    width: 120,\n    children: [{ key: 'startDate', caption: 'Start Date', width: 120 }],\n  },\n];\n\n","export const CODE_EXAMPLES = {\n  basic: `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\nconst EmployeeTable = () => {\n  const [data] = useState(generateEmployeeData());\n\n  const headers: IHeader<(typeof data)[0]>[] = [\n    { key: 'name', caption: 'Name', width: 200 },\n    { key: 'email', caption: 'Email', width: 250 },\n    {\n      key: 'group-header-contact',\n      caption: 'Contact Information',\n      width: 300,\n      children: [\n        { key: 'phone', caption: 'Phone', width: 150 },\n        { key: 'location', caption: 'Location', width: 150 },\n      ],\n    },\n    {\n      key: 'group-header-work',\n      caption: 'Work Details',\n      width: 400,\n      children: [\n        { key: 'department', caption: 'Department', width: 150 },\n        { key: 'position', caption: 'Position', width: 150 },\n        { key: 'manager', caption: 'Manager', width: 100 },\n      ],\n    },\n    {\n      key: 'group-header-financial',\n      caption: 'Financial',\n      width: 200,\n      children: [\n        {\n          key: 'salary',\n          caption: 'Salary',\n          width: 100,\n          renderCell: (item) => \\`$\\${item.salary.toLocaleString()}\\`,\n        },\n        { key: 'performance', caption: 'Rating', width: 100 },\n      ],\n    },\n    { key: 'startDate', caption: 'Start Date', width: 120 },\n  ];\n\n  return (\n    <VirtualTable\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      headerMode=\"double\"\n      rowHeight={32}\n      headerHeight={40}\n      filterHeight={32}\n    />\n  );\n};`,\n\n  complex: `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\nconst SalesReportTable = () => {\n  const [data] = useState(generateSalesData());\n\n  const headers: IHeader<(typeof data)[0]>[] = [\n    { key: 'product', caption: 'Product', width: 200 },\n    { key: 'category', caption: 'Category', width: 150 },\n    {\n      key: 'group-header-quarterly',\n      caption: 'Quarterly Sales',\n      width: 400,\n      children: [\n        { key: 'q1Sales', caption: 'Q1', width: 100 },\n        { key: 'q2Sales', caption: 'Q2', width: 100 },\n        { key: 'q3Sales', caption: 'Q3', width: 100 },\n        { key: 'q4Sales', caption: 'Q4', width: 100 },\n      ],\n    },\n    {\n      key: 'group-header-summary',\n      caption: 'Summary',\n      width: 300,\n      children: [\n        { key: 'totalSales', caption: 'Total Sales', width: 120 },\n        { key: 'profit', caption: 'Profit', width: 100 },\n        { key: 'margin', caption: 'Margin %', width: 80 },\n      ],\n    },\n    {\n      key: 'group-header-team',\n      caption: 'Team',\n      width: 200,\n      children: [\n        { key: 'region', caption: 'Region', width: 100 },\n        { key: 'salesRep', caption: 'Sales Rep', width: 100 },\n      ],\n    },\n  ];\n\n  return (\n    <VirtualTable\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      headerMode=\"double\"\n      rowHeight={32}\n      headerHeight={40}\n      filterHeight={32}\n    />\n  );\n};`,\n\n  nested: `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\nconst ComplexGroupingTable = () => {\n  const [data] = useState(generateEmployeeData());\n\n  const headers: IHeader<(typeof data)[0]>[] = [\n    { key: 'name', caption: 'Name', width: 180 },\n    { key: 'email', caption: 'Email', width: 220 },\n    {\n      key: 'group-header-personal',\n      caption: 'Personal Information',\n      width: 350,\n      children: [\n        { key: 'phone', caption: 'Phone', width: 120 },\n        { key: 'location', caption: 'Location', width: 120 },\n        { key: 'startDate', caption: 'Start Date', width: 110 },\n      ],\n    },\n    {\n      key: 'group-header-professional',\n      caption: 'Professional Details',\n      width: 450,\n      children: [\n        {\n          key: 'group-header-role',\n          caption: 'Role',\n          width: 225,\n          children: [\n            { key: 'department', caption: 'Department', width: 115 },\n            { key: 'position', caption: 'Position', width: 110 },\n          ],\n        },\n        {\n          key: 'group-header-performance',\n          caption: 'Performance',\n          width: 225,\n          children: [\n            { key: 'manager', caption: 'Manager', width: 115 },\n            { key: 'performance', caption: 'Rating', width: 110 },\n          ],\n        },\n      ],\n    },\n    {\n      key: 'salary',\n      caption: 'Salary',\n      width: 120,\n      renderCell: (item) => \\`$\\${item.salary.toLocaleString()}\\`,\n    },\n  ];\n\n  return (\n    <VirtualTable\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      headerMode=\"double\"\n      rowHeight={32}\n      headerHeight={40}\n      filterHeight={32}\n    />\n  );\n};`,\n\n  freezeGrouping: `import { VirtualTable, type IHeader } from '@knitto/virtual-table';\n\nconst FreezeGroupingTable = () => {\n  const [data] = useState(generateEmployeeData());\n\n  const headers: IHeader<(typeof data)[0]>[] = [\n    {\n      key: 'group-header-basic',\n      caption: 'Basic Info',\n      freeze: 'left',\n      width: 300,\n      children: [\n        { key: 'name', caption: 'Name', width: 150 },\n        { key: 'email', caption: 'Email', width: 150 },\n      ],\n    },\n    {\n      key: 'group-header-contact',\n      caption: 'Contact Information',\n      width: 300,\n      children: [\n        { key: 'phone', caption: 'Phone', width: 150 },\n        { key: 'location', caption: 'Location', width: 150 },\n      ],\n    },\n    {\n      key: 'group-header-work',\n      caption: 'Work Details',\n      width: 400,\n      children: [\n        { key: 'department', caption: 'Department', width: 150 },\n        { key: 'position', caption: 'Position', width: 150 },\n        { key: 'manager', caption: 'Manager', width: 100 },\n      ],\n    },\n    {\n      key: 'group-header-financial',\n      caption: 'Financial',\n      width: 200,\n      children: [\n        {\n          key: 'salary',\n          caption: 'Salary',\n          width: 100,\n          renderCell: (item) => \\`$\\${item.salary.toLocaleString()}\\`,\n        },\n        { key: 'performance', caption: 'Rating', width: 100 },\n      ],\n    },\n    {\n      key: 'group-header-actions',\n      caption: 'Actions',\n      freeze: 'right',\n      width: 120,\n      children: [\n        { key: 'startDate', caption: 'Start Date', width: 120 },\n      ],\n    },\n  ];\n\n  return (\n    <VirtualTable\n      headers={headers}\n      data={data}\n      rowKey=\"id\"\n      headerMode=\"double\"\n      rowHeight={32}\n      headerHeight={40}\n      filterHeight={32}\n    />\n  );\n};`,\n};\n\n","import { memo } from 'react';\n\ntype CodeBlockProps = {\n  title: string;\n  code: string;\n};\n\nconst CodeBlock = ({ title, code }: CodeBlockProps) => {\n  return (\n    <div className='mt-4 border rounded-lg overflow-hidden'>\n      <div className='bg-muted px-4 py-2 border-b'>\n        <span className='text-sm font-medium'>{title}</span>\n      </div>\n      <pre className='p-4 overflow-x-auto bg-background'>\n        <code className='text-sm'>{code}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default memo(CodeBlock);\n\n","import { memo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLES, type Employee } from '../utils';\nimport { getEmployeeHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype BasicGroupingSectionProps = {\n  data: Employee[];\n};\n\nconst BasicGroupingSection = ({ data }: BasicGroupingSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const headers = getEmployeeHeaders();\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Basic Header Grouping</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='mb-4 p-4 bg-blue-50 dark:bg-blue-950 border border-blue-200 dark:border-blue-800 rounded-lg'>\n        <p className='text-sm text-blue-800 dark:text-blue-200'>\n          <strong>Example:</strong> Employee table with grouped headers organizing related\n          information into logical sections: Contact Information, Work Details, and Financial data.\n        </p>\n      </div>\n\n      <div className='h-96'>\n        <VirtualTable\n          data={data}\n          filterHeight={32}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n        />\n      </div>\n\n      {showCode && <CodeBlock code={CODE_EXAMPLES.basic} title='Basic Header Grouping Example' />}\n    </section>\n  );\n};\n\nexport default memo(BasicGroupingSection);\n\n","import { memo } from 'react';\n\nconst BestPracticesSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>Best Practices</h2>\n      <div className='grid gap-4 md:grid-cols-2'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>📋 Header Design</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>\n              • <strong className='text-red-600 dark:text-red-400'>ALWAYS</strong> use{' '}\n              <code className='bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 px-1 py-0.5 rounded text-xs'>\n                group-header-\n              </code>{' '}\n              prefix for group keys\n            </li>\n            <li>• Use descriptive group names that clearly indicate content</li>\n            <li>• Keep group names concise but meaningful</li>\n            <li>• Limit nesting to 2-3 levels for better readability</li>\n            <li>• Ensure consistent width distribution within groups</li>\n            <li>• Consider user workflow when organizing columns</li>\n            <li>• Freeze important groups (like ID, Name) for better UX</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>⚡ Performance</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>• Group headers don't impact virtual scrolling performance</li>\n            <li>• Width calculations are optimized for grouped columns</li>\n            <li>• Resize operations work efficiently with nested structures</li>\n            <li>• Filter and sort operations work seamlessly with groups</li>\n            <li>• Memory usage remains optimal with complex groupings</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(BestPracticesSection);\n\n","import { memo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLES, type SalesData } from '../utils';\nimport { getSalesHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype ComplexGroupingSectionProps = {\n  data: SalesData[];\n};\n\nconst ComplexGroupingSection = ({ data }: ComplexGroupingSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const headers = getSalesHeaders();\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Complex Header Grouping</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='mb-4 p-4 bg-green-50 dark:bg-green-950 border border-green-200 dark:border-green-800 rounded-lg'>\n        <p className='text-sm text-green-800 dark:text-green-200'>\n          <strong>Example:</strong> Sales report table with quarterly data grouped under \"Quarterly\n          Sales\" and summary metrics grouped under \"Summary\" with calculated values.\n        </p>\n      </div>\n\n      <div className='h-96'>\n        <VirtualTable\n          data={data}\n          filterHeight={32}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n        />\n      </div>\n\n      {showCode && <CodeBlock code={CODE_EXAMPLES.complex} title='Complex Header Grouping Example' />}\n    </section>\n  );\n};\n\nexport default memo(ComplexGroupingSection);\n\n","import { memo } from 'react';\n\nconst FeaturesSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>Header Grouping Features</h2>\n      <div className='grid gap-4 md:grid-cols-2'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>✅ Core Features</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>• Create logical groupings of related columns</li>\n            <li>• Support for unlimited nesting levels</li>\n            <li>• Automatic width calculation for grouped columns</li>\n            <li>• Responsive header resizing with grouped columns</li>\n            <li>• Works with all table features (filters, sorting, etc.)</li>\n            <li>• Compatible with freeze columns (left/right)</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>🎨 Customization</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>• Custom group header captions</li>\n            <li>• Individual column styling within groups</li>\n            <li>• Flexible width distribution</li>\n            <li>• Integration with freeze columns</li>\n            <li>• TypeScript support for nested structures</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(FeaturesSection);\n\n","import { memo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLES, type Employee } from '../utils';\nimport { getFreezeGroupHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype FreezeGroupingSectionProps = {\n  data: Employee[];\n};\n\nconst FreezeGroupingSection = ({ data }: FreezeGroupingSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const headers = getFreezeGroupHeaders();\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Header Grouping with Freeze Columns</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='mb-4 p-4 bg-orange-50 dark:bg-orange-950 border border-orange-200 dark:border-orange-800 rounded-lg'>\n        <p className='text-sm text-orange-800 dark:text-orange-200'>\n          <strong>Example:</strong> Employee table combining header grouping with freeze columns.\n          Basic Info is frozen on the left, Actions are frozen on the right, while other grouped\n          columns scroll horizontally.\n        </p>\n      </div>\n\n      <div className='h-96'>\n        <VirtualTable\n          data={data}\n          filterHeight={32}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n        />\n      </div>\n\n      {showCode && (\n        <CodeBlock code={CODE_EXAMPLES.freezeGrouping} title='Header Grouping with Freeze Columns Example' />\n      )}\n    </section>\n  );\n};\n\nexport default memo(FreezeGroupingSection);\n\n","import { memo } from 'react';\n\nconst KeyNamingSection = () => {\n  return (\n    <section>\n      <h2 className='text-2xl font-semibold tracking-tight mb-4'>Key Naming Convention</h2>\n      <div className='mb-6 p-6 bg-yellow-50 dark:bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg'>\n        <div className='flex items-start space-x-3'>\n          <div className='flex-shrink-0'>\n            <div className='w-6 h-6 bg-yellow-500 dark:bg-yellow-600 rounded-full flex items-center justify-center'>\n              <span className='text-white text-sm font-bold'>!</span>\n            </div>\n          </div>\n          <div>\n            <h3 className='font-semibold text-yellow-800 dark:text-yellow-200 mb-2'>\n              Important: Key Naming for Group Headers\n            </h3>\n            <p className='text-sm text-yellow-700 dark:text-yellow-300 mb-3'>\n              To create a header group, you <strong>MUST</strong> use a key that starts with{' '}\n              <code className='bg-yellow-100 dark:bg-yellow-900 px-2 py-1 rounded text-xs font-mono'>\n                group-header-\n              </code>{' '}\n              prefix.\n            </p>\n            <div className='space-y-2'>\n              <div className='flex items-center space-x-2'>\n                <span className='text-green-600 dark:text-green-400 font-bold'>✅</span>\n                <code className='bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded text-xs font-mono'>\n                  group-header-contact\n                </code>\n                <span className='text-sm text-yellow-700 dark:text-yellow-300'>- Creates a group header</span>\n              </div>\n              <div className='flex items-center space-x-2'>\n                <span className='text-green-600 dark:text-green-400 font-bold'>✅</span>\n                <code className='bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded text-xs font-mono'>\n                  group-header-financial\n                </code>\n                <span className='text-sm text-yellow-700 dark:text-yellow-300'>- Creates a group header</span>\n              </div>\n              <div className='flex items-center space-x-2'>\n                <span className='text-red-600 dark:text-red-400 font-bold'>❌</span>\n                <code className='bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 px-2 py-1 rounded text-xs font-mono'>\n                  contact-info\n                </code>\n                <span className='text-sm text-yellow-700 dark:text-yellow-300'>\n                  - Will be treated as regular column\n                </span>\n              </div>\n              <div className='flex items-center space-x-2'>\n                <span className='text-red-600 dark:text-red-400 font-bold'>❌</span>\n                <code className='bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 px-2 py-1 rounded text-xs font-mono'>\n                  financial-data\n                </code>\n                <span className='text-sm text-yellow-700 dark:text-yellow-300'>\n                  - Will be treated as regular column\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='grid gap-4 md:grid-cols-2'>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>🔑 Key Requirements</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>\n              • Must start with{' '}\n              <code className='bg-muted px-1 py-0.5 rounded text-xs'>group-header-</code>\n            </li>\n            <li>• Must be unique across all headers</li>\n            <li>• Cannot be a data property key</li>\n            <li>• Use descriptive names after the prefix</li>\n            <li>• Follow kebab-case convention</li>\n          </ul>\n        </div>\n        <div className='border rounded-lg p-4'>\n          <h3 className='font-semibold mb-2'>📝 Naming Examples</h3>\n          <ul className='text-sm text-muted-foreground space-y-1'>\n            <li>\n              • <code className='bg-muted px-1 py-0.5 rounded text-xs'>group-header-contact</code>\n            </li>\n            <li>\n              •{' '}\n              <code className='bg-muted px-1 py-0.5 rounded text-xs'>\n                group-header-personal-info\n              </code>\n            </li>\n            <li>\n              •{' '}\n              <code className='bg-muted px-1 py-0.5 rounded text-xs'>\n                group-header-quarterly-sales\n              </code>\n            </li>\n            <li>\n              •{' '}\n              <code className='bg-muted px-1 py-0.5 rounded text-xs'>\n                group-header-performance-metrics\n              </code>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(KeyNamingSection);\n\n","import { memo, useState } from 'react';\nimport { VirtualTable } from '../../../../components/virtual-table';\nimport { CODE_EXAMPLES, type Employee } from '../utils';\nimport { getComplexHeaders } from '../utils/table-headers';\nimport CodeBlock from './code-block';\n\ntype NestedGroupingSectionProps = {\n  data: Employee[];\n};\n\nconst NestedGroupingSection = ({ data }: NestedGroupingSectionProps) => {\n  const [showCode, setShowCode] = useState(false);\n  const headers = getComplexHeaders();\n\n  return (\n    <section>\n      <div className='flex items-center justify-between mb-4'>\n        <h2 className='text-2xl font-semibold tracking-tight'>Nested Header Grouping</h2>\n        <button\n          className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2'\n          onClick={() => setShowCode(!showCode)}\n        >\n          {showCode ? 'Hide Code' : 'Show Code'}\n        </button>\n      </div>\n\n      <div className='mb-4 p-4 bg-purple-50 dark:bg-purple-950 border border-purple-200 dark:border-purple-800 rounded-lg'>\n        <p className='text-sm text-purple-800 dark:text-purple-200'>\n          <strong>Example:</strong> Employee table with nested header groups showing how to create\n          multi-level header hierarchies for complex data organization.\n        </p>\n      </div>\n\n      <div className='h-96'>\n        <VirtualTable\n          data={data.slice(0, 15)}\n          filterHeight={32}\n          headerHeight={40}\n          headerMode='double'\n          headers={headers}\n          rowHeight={32}\n          rowKey='id'\n        />\n      </div>\n\n      {showCode && <CodeBlock code={CODE_EXAMPLES.nested} title='Nested Header Grouping Example' />}\n    </section>\n  );\n};\n\nexport default memo(NestedGroupingSection);\n\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NextStepsSection = () => {\n  return (\n    <section>\n      <div className='rounded-lg border bg-muted/50 p-6'>\n        <h3 className='font-semibold text-lg mb-2'>🚀 Next Steps</h3>\n        <p className='text-sm text-muted-foreground mb-4'>\n          Ready to explore more advanced features? Check out these examples:\n        </p>\n        <div className='flex flex-wrap gap-2'>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/freeze-column'\n          >\n            Freeze Columns\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/header-customization'\n          >\n            Header Customization\n          </Link>\n          <Link\n            className='inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 px-3'\n            to='/docs/examples/expand-row'\n          >\n            Expand Row\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(NextStepsSection);\n\n","import { memo, useMemo } from 'react';\nimport {\n  ApiReferenceSection,\n  BasicGroupingSection,\n  BestPracticesSection,\n  ComplexGroupingSection,\n  FeaturesSection,\n  FreezeGroupingSection,\n  KeyNamingSection,\n  NestedGroupingSection,\n  NextStepsSection,\n} from './components';\nimport { generateEmployeeData, generateSalesData } from './utils';\n\nconst HeaderGroupingPage = () => {\n  // Memoized data generation to avoid regenerating on every render\n  const employeeData = useMemo(() => generateEmployeeData(), []);\n  const salesData = useMemo(() => generateSalesData(), []);\n\n  return (\n    <div className='space-y-8'>\n      {/* Page Header */}\n      <div>\n        <h1 className='text-4xl font-bold tracking-tight'>Header Grouping</h1>\n        <p className='text-xl text-muted-foreground mt-4'>\n          Learn how to create grouped headers in your virtual table to organize related columns and\n          improve data presentation with hierarchical header structures.\n        </p>\n      </div>\n\n      {/* Basic Header Grouping */}\n      <BasicGroupingSection data={employeeData} />\n\n      {/* Complex Header Grouping */}\n      <ComplexGroupingSection data={salesData} />\n\n      {/* Nested Header Grouping */}\n      <NestedGroupingSection data={employeeData} />\n\n      {/* Header Grouping with Freeze Columns */}\n      <FreezeGroupingSection data={employeeData} />\n\n      {/* Key Naming Convention */}\n      <KeyNamingSection />\n\n      {/* Features Section */}\n      <FeaturesSection />\n\n      {/* Best Practices */}\n      <BestPracticesSection />\n\n      {/* API Reference */}\n      <ApiReferenceSection />\n\n      {/* Next Steps */}\n      <NextStepsSection />\n    </div>\n  );\n};\n\nexport default memo(HeaderGroupingPage);\n\n"],"names":["ApiReferenceSection","jsx","jsxs","ApiReferenceSection$1","memo","generateEmployeeData","_","index","faker","generateSalesData","item","getEmployeeHeaders","getSalesHeaders","getComplexHeaders","getFreezeGroupHeaders","CODE_EXAMPLES","CodeBlock","title","code","CodeBlock$1","BasicGroupingSection","data","showCode","setShowCode","useState","headers","VirtualTable","BasicGroupingSection$1","BestPracticesSection","BestPracticesSection$1","ComplexGroupingSection","ComplexGroupingSection$1","FeaturesSection","FeaturesSection$1","FreezeGroupingSection","FreezeGroupingSection$1","KeyNamingSection","KeyNamingSection$1","NestedGroupingSection","NestedGroupingSection$1","NextStepsSection","Link","NextStepsSection$1","HeaderGroupingPage","employeeData","useMemo","salesData"],"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAyDP,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqDT,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgER,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAwElB,EChPMC,EAAY,CAAC,CAAE,MAAAC,EAAO,KAAAC,KAExBhB,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,8BACb,SAAAA,EAAAA,IAAC,QAAK,UAAU,sBAAuB,WAAM,CAAA,CAC/C,EACAA,EAAAA,IAAC,OAAI,UAAU,oCACb,eAAC,OAAA,CAAK,UAAU,UAAW,SAAAiB,CAAA,CAAK,CAAA,CAClC,CAAA,EACF,EAIJC,EAAef,EAAAA,KAAKY,CAAS,ECVvBI,EAAuB,CAAC,CAAE,KAAAC,KAAsC,CACpE,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,EAAK,EACxCC,EAAUd,EAAA,EAEhB,cACG,UAAA,CACC,SAAA,CAAAT,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,wBAAqB,EAC3EA,EAAAA,IAAC,SAAA,CACC,UAAU,gSACV,QAAS,IAAMsB,EAAY,CAACD,CAAQ,EAEnC,WAAW,YAAc,WAAA,CAAA,CAC5B,EACF,QAEC,MAAA,CAAI,UAAU,8FACb,SAAApB,EAAAA,KAAC,IAAA,CAAE,UAAU,2CACX,SAAA,CAAAD,EAAAA,IAAC,UAAO,SAAA,UAAA,CAAQ,EAAS,mJAAA,CAAA,CAE3B,CAAA,CACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAACyB,EAAA,CACC,KAAAL,EACA,aAAc,GACd,aAAc,GACd,WAAW,SACX,QAAAI,EACA,UAAW,GACX,OAAO,IAAA,CAAA,EAEX,EAECH,GAAYrB,EAAAA,IAACe,EAAA,CAAU,KAAMD,EAAc,MAAO,MAAM,+BAAA,CAAgC,CAAA,EAC3F,CAEJ,EAEAY,EAAevB,EAAAA,KAAKgB,CAAoB,EChDlCQ,EAAuB,WAExB,UAAA,CACC,SAAA,CAAA3B,EAAAA,IAAC,KAAA,CAAG,UAAU,6CAA6C,SAAA,iBAAc,EACzEC,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,qBAAqB,SAAA,mBAAgB,EACnDC,EAAAA,KAAC,KAAA,CAAG,UAAU,0CACZ,SAAA,CAAAA,OAAC,KAAA,CAAG,SAAA,CAAA,KACAD,EAAAA,IAAC,SAAA,CAAO,UAAU,iCAAiC,SAAA,SAAM,EAAS,OAAK,IACzEA,EAAAA,IAAC,OAAA,CAAK,UAAU,wFAAwF,SAAA,gBAExG,EAAQ,IAAI,uBAAA,EAEd,EACAA,EAAAA,IAAC,MAAG,SAAA,6DAAA,CAA2D,EAC/DA,EAAAA,IAAC,MAAG,SAAA,2CAAA,CAAyC,EAC7CA,EAAAA,IAAC,MAAG,SAAA,sDAAA,CAAoD,EACxDA,EAAAA,IAAC,MAAG,SAAA,sDAAA,CAAoD,EACxDA,EAAAA,IAAC,MAAG,SAAA,kDAAA,CAAgD,EACpDA,EAAAA,IAAC,MAAG,SAAA,yDAAA,CAAuD,CAAA,CAAA,CAC7D,CAAA,EACF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,qBAAqB,SAAA,gBAAa,EAChDC,EAAAA,KAAC,KAAA,CAAG,UAAU,0CACZ,SAAA,CAAAD,EAAAA,IAAC,MAAG,SAAA,4DAAA,CAA0D,EAC9DA,EAAAA,IAAC,MAAG,SAAA,wDAAA,CAAsD,EAC1DA,EAAAA,IAAC,MAAG,SAAA,6DAAA,CAA2D,EAC/DA,EAAAA,IAAC,MAAG,SAAA,0DAAA,CAAwD,EAC5DA,EAAAA,IAAC,MAAG,SAAA,uDAAA,CAAqD,CAAA,CAAA,CAC3D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAIJ4B,EAAezB,EAAAA,KAAKwB,CAAoB,EC9BlCE,EAAyB,CAAC,CAAE,KAAAT,KAAwC,CACxE,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,EAAK,EACxCC,EAAUb,EAAA,EAEhB,cACG,UAAA,CACC,SAAA,CAAAV,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,0BAAuB,EAC7EA,EAAAA,IAAC,SAAA,CACC,UAAU,gSACV,QAAS,IAAMsB,EAAY,CAACD,CAAQ,EAEnC,WAAW,YAAc,WAAA,CAAA,CAC5B,EACF,QAEC,MAAA,CAAI,UAAU,kGACb,SAAApB,EAAAA,KAAC,IAAA,CAAE,UAAU,6CACX,SAAA,CAAAD,EAAAA,IAAC,UAAO,SAAA,UAAA,CAAQ,EAAS,6IAAA,CAAA,CAE3B,CAAA,CACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAACyB,EAAA,CACC,KAAAL,EACA,aAAc,GACd,aAAc,GACd,WAAW,SACX,QAAAI,EACA,UAAW,GACX,OAAO,IAAA,CAAA,EAEX,EAECH,GAAYrB,EAAAA,IAACe,EAAA,CAAU,KAAMD,EAAc,QAAS,MAAM,iCAAA,CAAkC,CAAA,EAC/F,CAEJ,EAEAgB,EAAe3B,EAAAA,KAAK0B,CAAsB,EChDpCE,EAAkB,WAEnB,UAAA,CACC,SAAA,CAAA/B,EAAAA,IAAC,KAAA,CAAG,UAAU,6CAA6C,SAAA,2BAAwB,EACnFC,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,qBAAqB,SAAA,kBAAe,EAClDC,EAAAA,KAAC,KAAA,CAAG,UAAU,0CACZ,SAAA,CAAAD,EAAAA,IAAC,MAAG,SAAA,+CAAA,CAA6C,EACjDA,EAAAA,IAAC,MAAG,SAAA,wCAAA,CAAsC,EAC1CA,EAAAA,IAAC,MAAG,SAAA,mDAAA,CAAiD,EACrDA,EAAAA,IAAC,MAAG,SAAA,mDAAA,CAAiD,EACrDA,EAAAA,IAAC,MAAG,SAAA,0DAAA,CAAwD,EAC5DA,EAAAA,IAAC,MAAG,SAAA,+CAAA,CAA6C,CAAA,CAAA,CACnD,CAAA,EACF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,qBAAqB,SAAA,mBAAgB,EACnDC,EAAAA,KAAC,KAAA,CAAG,UAAU,0CACZ,SAAA,CAAAD,EAAAA,IAAC,MAAG,SAAA,gCAAA,CAA8B,EAClCA,EAAAA,IAAC,MAAG,SAAA,2CAAA,CAAyC,EAC7CA,EAAAA,IAAC,MAAG,SAAA,+BAAA,CAA6B,EACjCA,EAAAA,IAAC,MAAG,SAAA,mCAAA,CAAiC,EACrCA,EAAAA,IAAC,MAAG,SAAA,4CAAA,CAA0C,CAAA,CAAA,CAChD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAIJgC,EAAe7B,EAAAA,KAAK4B,CAAe,ECvB7BE,EAAwB,CAAC,CAAE,KAAAb,KAAuC,CACtE,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,EAAK,EACxCC,EAAUX,EAAA,EAEhB,cACG,UAAA,CACC,SAAA,CAAAZ,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,sCAAmC,EACzFA,EAAAA,IAAC,SAAA,CACC,UAAU,gSACV,QAAS,IAAMsB,EAAY,CAACD,CAAQ,EAEnC,WAAW,YAAc,WAAA,CAAA,CAC5B,EACF,QAEC,MAAA,CAAI,UAAU,sGACb,SAAApB,EAAAA,KAAC,IAAA,CAAE,UAAU,+CACX,SAAA,CAAAD,EAAAA,IAAC,UAAO,SAAA,UAAA,CAAQ,EAAS,oLAAA,CAAA,CAG3B,CAAA,CACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAACyB,EAAA,CACC,KAAAL,EACA,aAAc,GACd,aAAc,GACd,WAAW,SACX,QAAAI,EACA,UAAW,GACX,OAAO,IAAA,CAAA,EAEX,EAECH,GACCrB,EAAAA,IAACe,EAAA,CAAU,KAAMD,EAAc,eAAgB,MAAM,6CAAA,CAA8C,CAAA,EAEvG,CAEJ,EAEAoB,EAAe/B,EAAAA,KAAK8B,CAAqB,ECnDnCE,EAAmB,WAEpB,UAAA,CACC,SAAA,CAAAnC,EAAAA,IAAC,KAAA,CAAG,UAAU,6CAA6C,SAAA,wBAAqB,QAC/E,MAAA,CAAI,UAAU,sGACb,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAD,MAAC,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yFACb,SAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,+BAA+B,SAAA,GAAA,CAAC,EAClD,EACF,SACC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,KAAA,CAAG,UAAU,0DAA0D,SAAA,0CAExE,EACAC,EAAAA,KAAC,IAAA,CAAE,UAAU,oDAAoD,SAAA,CAAA,iCACjCD,EAAAA,IAAC,UAAO,SAAA,MAAA,CAAI,EAAS,8BAA4B,IAC/EA,EAAAA,IAAC,OAAA,CAAK,UAAU,uEAAuE,SAAA,gBAEvF,EAAQ,IAAI,SAAA,EAEd,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,IAAC,EAChEA,EAAAA,IAAC,OAAA,CAAK,UAAU,wGAAwG,SAAA,uBAExH,EACAA,EAAAA,IAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,0BAAA,CAAwB,CAAA,EACzF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,IAAC,EAChEA,EAAAA,IAAC,OAAA,CAAK,UAAU,wGAAwG,SAAA,yBAExH,EACAA,EAAAA,IAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,0BAAA,CAAwB,CAAA,EACzF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,2CAA2C,SAAA,IAAC,EAC5DA,EAAAA,IAAC,OAAA,CAAK,UAAU,gGAAgG,SAAA,eAEhH,EACAA,EAAAA,IAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,qCAAA,CAE/D,CAAA,EACF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,2CAA2C,SAAA,IAAC,EAC5DA,EAAAA,IAAC,OAAA,CAAK,UAAU,gGAAgG,SAAA,iBAEhH,EACAA,EAAAA,IAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,qCAAA,CAE/D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAEAC,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,qBAAqB,SAAA,sBAAmB,EACtDC,EAAAA,KAAC,KAAA,CAAG,UAAU,0CACZ,SAAA,CAAAA,OAAC,KAAA,CAAG,SAAA,CAAA,oBACgB,IAClBD,EAAAA,IAAC,OAAA,CAAK,UAAU,uCAAuC,SAAA,eAAA,CAAa,CAAA,EACtE,EACAA,EAAAA,IAAC,MAAG,SAAA,qCAAA,CAAmC,EACvCA,EAAAA,IAAC,MAAG,SAAA,iCAAA,CAA+B,EACnCA,EAAAA,IAAC,MAAG,SAAA,0CAAA,CAAwC,EAC5CA,EAAAA,IAAC,MAAG,SAAA,gCAAA,CAA8B,CAAA,CAAA,CACpC,CAAA,EACF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,qBAAqB,SAAA,qBAAkB,EACrDC,EAAAA,KAAC,KAAA,CAAG,UAAU,0CACZ,SAAA,CAAAA,OAAC,KAAA,CAAG,SAAA,CAAA,KACAD,EAAAA,IAAC,OAAA,CAAK,UAAU,uCAAuC,SAAA,sBAAA,CAAoB,CAAA,EAC/E,SACC,KAAA,CAAG,SAAA,CAAA,IACA,IACFA,EAAAA,IAAC,OAAA,CAAK,UAAU,uCAAuC,SAAA,4BAAA,CAEvD,CAAA,EACF,SACC,KAAA,CAAG,SAAA,CAAA,IACA,IACFA,EAAAA,IAAC,OAAA,CAAK,UAAU,uCAAuC,SAAA,8BAAA,CAEvD,CAAA,EACF,SACC,KAAA,CAAG,SAAA,CAAA,IACA,IACFA,EAAAA,IAAC,OAAA,CAAK,UAAU,uCAAuC,SAAA,kCAAA,CAEvD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAIJoC,EAAejC,EAAAA,KAAKgC,CAAgB,ECjG9BE,EAAwB,CAAC,CAAE,KAAAjB,KAAuC,CACtE,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,EAAK,EACxCC,EAAUZ,EAAA,EAEhB,cACG,UAAA,CACC,SAAA,CAAAX,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,yBAAsB,EAC5EA,EAAAA,IAAC,SAAA,CACC,UAAU,gSACV,QAAS,IAAMsB,EAAY,CAACD,CAAQ,EAEnC,WAAW,YAAc,WAAA,CAAA,CAC5B,EACF,QAEC,MAAA,CAAI,UAAU,sGACb,SAAApB,EAAAA,KAAC,IAAA,CAAE,UAAU,+CACX,SAAA,CAAAD,EAAAA,IAAC,UAAO,SAAA,UAAA,CAAQ,EAAS,+HAAA,CAAA,CAE3B,CAAA,CACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAACyB,EAAA,CACC,KAAML,EAAK,MAAM,EAAG,EAAE,EACtB,aAAc,GACd,aAAc,GACd,WAAW,SACX,QAAAI,EACA,UAAW,GACX,OAAO,IAAA,CAAA,EAEX,EAECH,GAAYrB,EAAAA,IAACe,EAAA,CAAU,KAAMD,EAAc,OAAQ,MAAM,gCAAA,CAAiC,CAAA,EAC7F,CAEJ,EAEAwB,EAAenC,EAAAA,KAAKkC,CAAqB,EC/CnCE,EAAmB,IAErBvC,EAAAA,IAAC,UAAA,CACC,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,gBAAa,EACxDA,EAAAA,IAAC,IAAA,CAAE,UAAU,qCAAqC,SAAA,qEAElD,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAD,EAAAA,IAACwC,EAAA,CACC,UAAU,sTACV,GAAG,+BACJ,SAAA,gBAAA,CAAA,EAGDxC,EAAAA,IAACwC,EAAA,CACC,UAAU,sTACV,GAAG,sCACJ,SAAA,sBAAA,CAAA,EAGDxC,EAAAA,IAACwC,EAAA,CACC,UAAU,sTACV,GAAG,4BACJ,SAAA,YAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAIJC,EAAetC,EAAAA,KAAKoC,CAAgB,ECtB9BG,EAAqB,IAAM,CAE/B,MAAMC,EAAeC,EAAAA,QAAQ,IAAMxC,EAAA,EAAwB,CAAA,CAAE,EACvDyC,EAAYD,EAAAA,QAAQ,IAAMpC,EAAA,EAAqB,CAAA,CAAE,EAEvD,OACEP,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,kBAAe,EACjEA,EAAAA,IAAC,IAAA,CAAE,UAAU,qCAAqC,SAAA,0JAAA,CAGlD,CAAA,EACF,EAGAA,EAAAA,IAACmB,EAAA,CAAqB,KAAMwB,CAAA,CAAc,EAG1C3C,EAAAA,IAAC6B,EAAA,CAAuB,KAAMgB,CAAA,CAAW,EAGzC7C,EAAAA,IAACqC,EAAA,CAAsB,KAAMM,CAAA,CAAc,EAG3C3C,EAAAA,IAACiC,EAAA,CAAsB,KAAMU,CAAA,CAAc,QAG1CR,EAAA,EAAiB,QAGjBJ,EAAA,EAAgB,QAGhBJ,EAAA,EAAqB,QAGrB5B,EAAA,EAAoB,QAGpBwC,EAAA,CAAA,CAAiB,CAAA,EACpB,CAEJ,EAEAjC,EAAeH,EAAAA,KAAKuC,CAAkB"}